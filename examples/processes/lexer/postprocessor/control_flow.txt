$ Token :BL_KW_HI_BHAU:
$ Token {
   type          : 311
   location      : line 1, offset 8
   chars         : 'hi bhau'
   string value  : "hi bhau" (len=7)
}

$ Token :BL_KW_BHAU_BAHERUN_GHE:
$ Token {
   type          : 320
   location      : line 3, offset 17
   chars         : 'bhau baherun ghe'
   string value  : "bhau baherun ghe" (len=16)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 24
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 29
   chars         : 'bolo'
   string value  : "bolo" (len=4)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 3, offset 30
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 5, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 37
   chars         : 'mixed_control_flow'
   string value  : "mixed_control_flow" (len=18)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 5, offset 38
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 5, offset 39
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 5, offset 40
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 6, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 6, offset 19
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 6, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 6, offset 23
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 6, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :case BL_KW_BHAU_JOPARENT:
$ Token {
   type          : 308
   location      : line 7, offset 18
   chars         : 'bhau joparent'
   string value  : "bhau joparent" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 7, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 20
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_LESSEQ:
$ Token {
   type          : 296
   location      : line 7, offset 23
   chars         : '<='
   string value  : "<=" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 7, offset 25
   chars         : '3'
   string value  : "3" (len=1)
   int value     : 3
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 7, offset 26
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 7, offset 27
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 305
   location      : line 8, offset 17
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 8, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 8, offset 19
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 8, offset 22
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 8, offset 24
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 8, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 8, offset 26
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 9, offset 25
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 27
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 9, offset 29
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 9, offset 31
   chars         : '3'
   string value  : "3" (len=1)
   int value     : 3
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 9, offset 32
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :case BL_KW_BHAU_JOPARENT:
$ Token {
   type          : 308
   location      : line 10, offset 26
   chars         : 'bhau joparent'
   string value  : "bhau joparent" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 10, offset 27
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 28
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_GRTTHAN:
$ Token {
   type          : 294
   location      : line 10, offset 30
   chars         : '>'
   string value  : ">" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 10, offset 32
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 10, offset 33
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 10, offset 34
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :case BL_KW_BHAU_CHUNAV:
$ Token {
   type          : 313
   location      : line 11, offset 28
   chars         : 'bhau chunav'
   string value  : "bhau chunav" (len=11)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 11, offset 29
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 11, offset 30
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 11, offset 31
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 11, offset 32
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_NIVAD:
$ Token {
   type          : 314
   location      : line 12, offset 31
   chars         : 'bhau nivad'
   string value  : "bhau nivad" (len=10)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 12, offset 33
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_COLON:
$ Token {
   type          : 262
   location      : line 12, offset 34
   chars         : ':'
   string value  : ":" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 39
   chars         : 'bolo'
   string value  : "bolo" (len=4)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 12, offset 40
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 12, offset 81
   chars         : '"From mixed_control_flow, y Value : %d\n"'
   string value  : "From mixed_control_flow, y Value : %d\n" (len=39)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 12, offset 82
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 83
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 12, offset 84
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 12, offset 85
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_THAMB:
$ Token {
   type          : 315
   location      : line 12, offset 96
   chars         : 'bhau thamb'
   string value  : "bhau thamb" (len=10)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 12, offset 97
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_NIVAD:
$ Token {
   type          : 314
   location      : line 13, offset 31
   chars         : 'bhau nivad'
   string value  : "bhau nivad" (len=10)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 13, offset 33
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_COLON:
$ Token {
   type          : 262
   location      : line 13, offset 34
   chars         : ':'
   string value  : ":" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 39
   chars         : 'bolo'
   string value  : "bolo" (len=4)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 13, offset 40
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 13, offset 81
   chars         : '"From mixed_control_flow, y Value : %d\n"'
   string value  : "From mixed_control_flow, y Value : %d\n" (len=39)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 13, offset 82
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 83
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 13, offset 84
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 13, offset 85
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_THAMB:
$ Token {
   type          : 315
   location      : line 13, offset 96
   chars         : 'bhau thamb'
   string value  : "bhau thamb" (len=10)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 13, offset 97
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_NIVAD:
$ Token {
   type          : 314
   location      : line 14, offset 31
   chars         : 'bhau nivad'
   string value  : "bhau nivad" (len=10)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 14, offset 33
   chars         : '3'
   string value  : "3" (len=1)
   int value     : 3
}

$ Token :BL_COLON:
$ Token {
   type          : 262
   location      : line 14, offset 34
   chars         : ':'
   string value  : ":" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 39
   chars         : 'bolo'
   string value  : "bolo" (len=4)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 14, offset 40
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 14, offset 81
   chars         : '"From mixed_control_flow, y Value : %d\n"'
   string value  : "From mixed_control_flow, y Value : %d\n" (len=39)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 14, offset 82
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 83
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 14, offset 84
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 14, offset 85
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_THAMB:
$ Token {
   type          : 315
   location      : line 14, offset 96
   chars         : 'bhau thamb'
   string value  : "bhau thamb" (len=10)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 14, offset 97
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 15, offset 18
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_DEC:
$ Token {
   type          : 283
   location      : line 16, offset 19
   chars         : '--'
   string value  : "--" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 16, offset 20
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 16, offset 21
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 17, offset 14
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 18, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_NAHITAR:
$ Token {
   type          : 306
   location      : line 18, offset 22
   chars         : 'bhau nahitar'
   string value  : "bhau nahitar" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 18, offset 23
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 18, offset 24
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 18, offset 27
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 18, offset 29
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 18, offset 30
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 18, offset 31
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 19, offset 17
   chars         : 'bolo'
   string value  : "bolo" (len=4)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 19, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 19, offset 59
   chars         : '"From mixed_control_flow, x Value : %d\n"'
   string value  : "From mixed_control_flow, x Value : %d\n" (len=39)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 19, offset 60
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 19, offset 61
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 19, offset 62
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 19, offset 63
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 20, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :case BL_KW_BHAU_TAR:
$ Token {
   type          : 307
   location      : line 20, offset 18
   chars         : 'bhau tar'
   string value  : "bhau tar" (len=8)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 20, offset 19
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 17
   chars         : 'bolo'
   string value  : "bolo" (len=4)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 21, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 21, offset 59
   chars         : '"From mixed_control_flow, x Value : %d\n"'
   string value  : "From mixed_control_flow, x Value : %d\n" (len=39)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 21, offset 60
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 61
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 21, offset 62
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 21, offset 63
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 22, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_INC:
$ Token {
   type          : 282
   location      : line 23, offset 11
   chars         : '++'
   string value  : "++" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 23, offset 12
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 23, offset 13
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 24, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 25, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 28, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 28, offset 37
   chars         : 'print_control_flow'
   string value  : "print_control_flow" (len=18)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 28, offset 38
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 28, offset 39
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 28, offset 40
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 29, offset 23
   chars         : 'mixed_control_flow'
   string value  : "mixed_control_flow" (len=18)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 29, offset 24
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 29, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 29, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 30, offset 9
   chars         : 'bolo'
   string value  : "bolo" (len=4)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 30, offset 10
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 30, offset 14
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 30, offset 15
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 30, offset 16
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 31, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_MAIN:
$ Token {
   type          : 321
   location      : line 33, offset 17
   chars         : 'bhau ithun chalu'
   string value  : "bhau ithun chalu" (len=16)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 33, offset 18
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 34, offset 23
   chars         : 'print_control_flow'
   string value  : "print_control_flow" (len=18)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 34, offset 24
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 34, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 34, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 35, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BYE_BHAU:
$ Token {
   type          : 312
   location      : line 38, offset 9
   chars         : 'bye bhau'
   string value  : "bye bhau" (len=8)
}

$ Token :BL_EOF:
$ Token {
   type          : 303
   location      : line 38, offset 11
   chars         : ''
   string value  : "" (len=1)
}

