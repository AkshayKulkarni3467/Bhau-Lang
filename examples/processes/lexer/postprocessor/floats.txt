$ Token :BL_KW_HI_BHAU:
$ Token {
   type          : 311
   location      : line 1, offset 8
   chars         : 'hi bhau'
   string value  : "hi bhau" (len=7)
}

$ Token :BL_KW_BHAU_BAHERUN_GHE:
$ Token {
   type          : 320
   location      : line 3, offset 17
   chars         : 'bhau baherun ghe'
   string value  : "bhau baherun ghe" (len=16)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 24
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 29
   chars         : 'bole'
   string value  : "bole" (len=4)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 3, offset 30
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 7, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 37
   chars         : 'float_control_flow'
   string value  : "float_control_flow" (len=18)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 7, offset 38
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 7, offset 39
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 7, offset 40
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 8, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 8, offset 19
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 8, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 8, offset 26
   chars         : '3.14'
   string value  : "3.14" (len=4)
   float value   : 3.140000
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 8, offset 27
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 9, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 19
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 9, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 9, offset 26
   chars         : '2.71'
   string value  : "2.71" (len=4)
   float value   : 2.710000
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 9, offset 27
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 10, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 19
   chars         : 'z'
   string value  : "z" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 10, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 10, offset 25
   chars         : '0.0'
   string value  : "0.0" (len=3)
   float value   : 0.000000
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 10, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 305
   location      : line 11, offset 13
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 11, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 11, offset 15
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_GRTTHAN:
$ Token {
   type          : 294
   location      : line 11, offset 17
   chars         : '>'
   string value  : ">" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 11, offset 19
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 11, offset 20
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 11, offset 21
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 10
   chars         : 'z'
   string value  : "z" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 12, offset 12
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 14
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 12, offset 16
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 18
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 12, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 13, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :case BL_KW_BHAU_TAR:
$ Token {
   type          : 307
   location      : line 13, offset 14
   chars         : 'bhau tar'
   string value  : "bhau tar" (len=8)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 13, offset 15
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 10
   chars         : 'z'
   string value  : "z" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 14, offset 12
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 14
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 14, offset 16
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 18
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 14, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 15, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 305
   location      : line 16, offset 13
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 16, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 16, offset 15
   chars         : 'z'
   string value  : "z" (len=1)
}

$ Token :BL_GRTTHAN:
$ Token {
   type          : 294
   location      : line 16, offset 17
   chars         : '>'
   string value  : ">" (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 16, offset 21
   chars         : '5.0'
   string value  : "5.0" (len=3)
   float value   : 5.000000
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 16, offset 22
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 16, offset 23
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 17, offset 21
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 17, offset 30
   chars         : 'double_z'
   string value  : "double_z" (len=8)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 17, offset 32
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 17, offset 34
   chars         : 'z'
   string value  : "z" (len=1)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 17, offset 35
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 17, offset 38
   chars         : '2.0'
   string value  : "2.0" (len=3)
   float value   : 2.000000
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 17, offset 39
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 18, offset 13
   chars         : 'bole'
   string value  : "bole" (len=4)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 18, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 18, offset 55
   chars         : '"From float_control_flow, Value : %.2f\n"'
   string value  : "From float_control_flow, Value : %.2f\n" (len=39)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 18, offset 56
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 18, offset 64
   chars         : 'double_z'
   string value  : "double_z" (len=8)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 18, offset 65
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 18, offset 66
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 19, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 20, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_MAIN:
$ Token {
   type          : 321
   location      : line 24, offset 17
   chars         : 'bhau ithun chalu'
   string value  : "bhau ithun chalu" (len=16)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 24, offset 18
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 25, offset 23
   chars         : 'float_control_flow'
   string value  : "float_control_flow" (len=18)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 25, offset 24
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 25, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 25, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 26, offset 9
   chars         : 'bole'
   string value  : "bole" (len=4)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 26, offset 10
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 26, offset 14
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 26, offset 15
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 26, offset 16
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 28, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BYE_BHAU:
$ Token {
   type          : 312
   location      : line 30, offset 9
   chars         : 'bye bhau'
   string value  : "bye bhau" (len=8)
}

$ Token :BL_EOF:
$ Token {
   type          : 303
   location      : line 30, offset 10
   chars         : ''
   string value  : "" (len=1)
}

