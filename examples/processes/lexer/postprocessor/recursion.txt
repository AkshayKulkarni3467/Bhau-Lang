$ Token :BL_KW_HI_BHAU:
$ Token {
   type          : 311
   location      : line 1, offset 8
   chars         : 'hi bhau'
   string value  : "hi bhau" (len=7)
}

$ Token :BL_KW_BHAU_BAHERUN_GHE:
$ Token {
   type          : 320
   location      : line 3, offset 17
   chars         : 'bhau baherun ghe'
   string value  : "bhau baherun ghe" (len=16)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 24
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 30
   chars         : 'print'
   string value  : "print" (len=5)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 3, offset 31
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 5, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 28
   chars         : 'factorial'
   string value  : "factorial" (len=9)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 5, offset 29
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 30
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 5, offset 31
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 5, offset 32
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 305
   location      : line 6, offset 13
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 6, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 6, offset 15
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_LESSEQ:
$ Token {
   type          : 296
   location      : line 6, offset 18
   chars         : '<='
   string value  : "<=" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 6, offset 20
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 6, offset 21
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 6, offset 22
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :KW_BHAU_PARAT_DE:
$ Token {
   type          : 310
   location      : line 7, offset 22
   chars         : 'bhau parat de'
   string value  : "bhau parat de" (len=13)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 7, offset 24
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 7, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 8, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :KW_BHAU_PARAT_DE:
$ Token {
   type          : 310
   location      : line 9, offset 18
   chars         : 'bhau parat de'
   string value  : "bhau parat de" (len=13)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 20
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 9, offset 22
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 32
   chars         : 'factorial'
   string value  : "factorial" (len=9)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 9, offset 33
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 34
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 9, offset 36
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 9, offset 38
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 9, offset 39
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 9, offset 40
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 10, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 12, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 28
   chars         : 'fibonacci'
   string value  : "fibonacci" (len=9)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 12, offset 29
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 30
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 12, offset 31
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 12, offset 32
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 305
   location      : line 13, offset 13
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 13, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 15
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_LESSEQ:
$ Token {
   type          : 296
   location      : line 13, offset 18
   chars         : '<='
   string value  : "<=" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 13, offset 20
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 13, offset 21
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 13, offset 22
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :KW_BHAU_PARAT_DE:
$ Token {
   type          : 310
   location      : line 14, offset 22
   chars         : 'bhau parat de'
   string value  : "bhau parat de" (len=13)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 24
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 14, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 15, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :KW_BHAU_PARAT_DE:
$ Token {
   type          : 310
   location      : line 16, offset 18
   chars         : 'bhau parat de'
   string value  : "bhau parat de" (len=13)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 16, offset 28
   chars         : 'fibonacci'
   string value  : "fibonacci" (len=9)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 16, offset 29
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 16, offset 30
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 16, offset 32
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 16, offset 34
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 16, offset 35
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 16, offset 37
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 16, offset 47
   chars         : 'fibonacci'
   string value  : "fibonacci" (len=9)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 16, offset 48
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 16, offset 49
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 16, offset 51
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 16, offset 53
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 16, offset 54
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 16, offset 55
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 17, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 19, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 19, offset 40
   chars         : 'print_recursion_tests'
   string value  : "print_recursion_tests" (len=21)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 19, offset 41
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 19, offset 42
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 19, offset 43
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 20, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 20, offset 25
   chars         : 'fac_var'
   string value  : "fac_var" (len=7)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 20, offset 27
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 20, offset 37
   chars         : 'factorial'
   string value  : "factorial" (len=9)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 20, offset 38
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 20, offset 39
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 20, offset 40
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 20, offset 41
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 10
   chars         : 'print'
   string value  : "print" (len=5)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 21, offset 11
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 21, offset 29
   chars         : '"Factorial : %d\n"'
   string value  : "Factorial : %d\n" (len=16)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 21, offset 30
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 37
   chars         : 'fac_var'
   string value  : "fac_var" (len=7)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 21, offset 38
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 21, offset 39
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 22, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 22, offset 25
   chars         : 'fib_var'
   string value  : "fib_var" (len=7)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 22, offset 27
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 22, offset 37
   chars         : 'fibonacci'
   string value  : "fibonacci" (len=9)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 22, offset 38
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 22, offset 39
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 22, offset 40
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 22, offset 41
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 23, offset 10
   chars         : 'print'
   string value  : "print" (len=5)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 23, offset 11
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 23, offset 29
   chars         : '"Fibonacci : %d\n"'
   string value  : "Fibonacci : %d\n" (len=16)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 23, offset 30
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 23, offset 37
   chars         : 'fib_var'
   string value  : "fib_var" (len=7)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 23, offset 38
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 23, offset 39
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 24, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_MAIN:
$ Token {
   type          : 321
   location      : line 26, offset 17
   chars         : 'bhau ithun chalu'
   string value  : "bhau ithun chalu" (len=16)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 26, offset 19
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 27, offset 26
   chars         : 'print_recursion_tests'
   string value  : "print_recursion_tests" (len=21)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 27, offset 27
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 27, offset 28
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 27, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 28, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BYE_BHAU:
$ Token {
   type          : 312
   location      : line 31, offset 9
   chars         : 'bye bhau'
   string value  : "bye bhau" (len=8)
}

$ Token :BL_EOF:
$ Token {
   type          : 303
   location      : line 31, offset 10
   chars         : ''
   string value  : "" (len=1)
}

