$ Token :BL_KW_HI_BHAU:
$ Token {
   type          : 311
   location      : line 1, offset 8
   chars         : 'hi bhau'
   string value  : "hi bhau" (len=7)
}

$ Token :BL_KW_BHAU_BAHERUN_GHE:
$ Token {
   type          : 320
   location      : line 3, offset 17
   chars         : 'bhau baherun ghe'
   string value  : "bhau baherun ghe" (len=16)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 25
   chars         : 'putchar'
   string value  : "putchar" (len=7)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 3, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_BAHERUN_GHE:
$ Token {
   type          : 320
   location      : line 4, offset 17
   chars         : 'bhau baherun ghe'
   string value  : "bhau baherun ghe" (len=16)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 4, offset 24
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 4, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 6, offset 13
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 6, offset 18
   chars         : 'rule'
   string value  : "rule" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 6, offset 20
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 6, offset 24
   chars         : '137'
   string value  : "137" (len=3)
   int value     : 137
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 6, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 7, offset 13
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 19
   chars         : 'width'
   string value  : "width" (len=5)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 7, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 7, offset 24
   chars         : '65'
   string value  : "65" (len=2)
   int value     : 65
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 7, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 8, offset 13
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 8, offset 19
   chars         : 'steps'
   string value  : "steps" (len=5)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 8, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 8, offset 24
   chars         : '32'
   string value  : "32" (len=2)
   int value     : 32
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 8, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_COMMENT:
$ Token {
   type          : 300
   location      : line 9, offset 20
   chars         : '// base : 110,64,63'
   string value  : "// base : 110,64,63" (len=19)
}

$ Token :BL_COMMENT:
$ Token {
   type          : 300
   location      : line 10, offset 12
   chars         : '// 22,69,35'
   string value  : "// 22,69,35" (len=11)
}

$ Token :BL_COMMENT:
$ Token {
   type          : 300
   location      : line 11, offset 12
   chars         : '// 22,65,60'
   string value  : "// 22,65,60" (len=11)
}

$ Token :BL_COMMENT:
$ Token {
   type          : 300
   location      : line 12, offset 14
   chars         : '// 22,65, 600'
   string value  : "// 22,65, 600" (len=13)
}

$ Token :BL_COMMENT:
$ Token {
   type          : 300
   location      : line 13, offset 13
   chars         : '// 18,125,60'
   string value  : "// 18,125,60" (len=12)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 16, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 16, offset 30
   chars         : 'print_state'
   string value  : "print_state" (len=11)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 16, offset 31
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 16, offset 36
   chars         : 'state'
   string value  : "state" (len=5)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 16, offset 37
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 17, offset 2
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 18, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 18, offset 19
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 18, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 18, offset 27
   chars         : 'width'
   string value  : "width" (len=5)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 18, offset 29
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 18, offset 31
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 18, offset 32
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :case BL_KW_BHAU_JOPARENT:
$ Token {
   type          : 308
   location      : line 19, offset 18
   chars         : 'bhau joparent'
   string value  : "bhau joparent" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 19, offset 20
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 19, offset 21
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_GRTEQ:
$ Token {
   type          : 297
   location      : line 19, offset 23
   chars         : '>='
   string value  : ">=" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 19, offset 24
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 19, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 20, offset 6
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 305
   location      : line 21, offset 17
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 21, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 21, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 24
   chars         : 'state'
   string value  : "state" (len=5)
}

$ Token :BL_RSHIFT:
$ Token {
   type          : 285
   location      : line 21, offset 27
   chars         : '>>'
   string value  : ">>" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 29
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 21, offset 30
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_AND:
$ Token {
   type          : 286
   location      : line 21, offset 32
   chars         : '&'
   string value  : "&" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 21, offset 34
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 21, offset 35
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 21, offset 36
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 22, offset 20
   chars         : 'putchar'
   string value  : "putchar" (len=7)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 22, offset 21
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_CHAR:
$ Token {
   type          : 260
   location      : line 22, offset 24
   chars         : ''*''
   string value  : "*" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 22, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 22, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 23, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :case BL_KW_BHAU_TAR:
$ Token {
   type          : 307
   location      : line 23, offset 18
   chars         : 'bhau tar'
   string value  : "bhau tar" (len=8)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 23, offset 19
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 24, offset 20
   chars         : 'putchar'
   string value  : "putchar" (len=7)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 24, offset 21
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_CHAR:
$ Token {
   type          : 260
   location      : line 24, offset 24
   chars         : '' ''
   string value  : " " (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 24, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 24, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 25, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_DEC:
$ Token {
   type          : 283
   location      : line 26, offset 11
   chars         : '--'
   string value  : "--" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 26, offset 12
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 26, offset 13
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 27, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 28, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 28, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 28, offset 16
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 28, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 28, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 29, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 31, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 31, offset 31
   chars         : 'update_state'
   string value  : "update_state" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 31, offset 32
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 31, offset 36
   chars         : 'rule'
   string value  : "rule" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 31, offset 37
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 31, offset 44
   chars         : 'current'
   string value  : "current" (len=7)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 31, offset 45
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 31, offset 49
   chars         : 'next'
   string value  : "next" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 31, offset 50
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 31, offset 51
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 31, offset 52
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 32, offset 2
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 33, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 33, offset 22
   chars         : 'left'
   string value  : "left" (len=4)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 33, offset 23
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 305
   location      : line 34, offset 13
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 34, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 34, offset 15
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 34, offset 18
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 34, offset 24
   chars         : 'width'
   string value  : "width" (len=5)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 34, offset 26
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 34, offset 28
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 34, offset 29
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 34, offset 30
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 36, offset 13
   chars         : 'left'
   string value  : "left" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 36, offset 15
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 36, offset 18
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 36, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 37, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :case BL_KW_BHAU_TAR:
$ Token {
   type          : 307
   location      : line 37, offset 14
   chars         : 'bhau tar'
   string value  : "bhau tar" (len=8)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 37, offset 15
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 38, offset 13
   chars         : 'left'
   string value  : "left" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 38, offset 15
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 38, offset 23
   chars         : 'current'
   string value  : "current" (len=7)
}

$ Token :BL_RSHIFT:
$ Token {
   type          : 285
   location      : line 38, offset 26
   chars         : '>>'
   string value  : ">>" (len=2)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 38, offset 28
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 38, offset 29
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 38, offset 31
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 38, offset 33
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 38, offset 34
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_AND:
$ Token {
   type          : 286
   location      : line 38, offset 36
   chars         : '&'
   string value  : "&" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 38, offset 38
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 38, offset 39
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 39, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 40, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 40, offset 24
   chars         : 'center'
   string value  : "center" (len=6)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 40, offset 26
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 40, offset 28
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 40, offset 35
   chars         : 'current'
   string value  : "current" (len=7)
}

$ Token :BL_RSHIFT:
$ Token {
   type          : 285
   location      : line 40, offset 38
   chars         : '>>'
   string value  : ">>" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 40, offset 40
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 40, offset 41
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_AND:
$ Token {
   type          : 286
   location      : line 40, offset 43
   chars         : '&'
   string value  : "&" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 40, offset 45
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 40, offset 46
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 42, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 42, offset 23
   chars         : 'right'
   string value  : "right" (len=5)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 42, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 305
   location      : line 43, offset 13
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 43, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 43, offset 15
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 43, offset 18
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 43, offset 20
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 43, offset 21
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 43, offset 22
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 44, offset 14
   chars         : 'right'
   string value  : "right" (len=5)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 44, offset 16
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 44, offset 18
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 44, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 45, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :case BL_KW_BHAU_TAR:
$ Token {
   type          : 307
   location      : line 45, offset 14
   chars         : 'bhau tar'
   string value  : "bhau tar" (len=8)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 45, offset 15
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 46, offset 14
   chars         : 'right'
   string value  : "right" (len=5)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 46, offset 16
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 46, offset 24
   chars         : 'current'
   string value  : "current" (len=7)
}

$ Token :BL_RSHIFT:
$ Token {
   type          : 285
   location      : line 46, offset 27
   chars         : '>>'
   string value  : ">>" (len=2)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 46, offset 29
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 46, offset 30
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 46, offset 32
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 46, offset 34
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 46, offset 35
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_AND:
$ Token {
   type          : 286
   location      : line 46, offset 37
   chars         : '&'
   string value  : "&" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 46, offset 38
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 46, offset 39
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 47, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 49, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 49, offset 25
   chars         : 'pattern'
   string value  : "pattern" (len=7)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 49, offset 27
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 49, offset 29
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 49, offset 33
   chars         : 'left'
   string value  : "left" (len=4)
}

$ Token :BL_LSHIFT:
$ Token {
   type          : 284
   location      : line 49, offset 36
   chars         : '<<'
   string value  : "<<" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 49, offset 38
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 49, offset 39
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_OR:
$ Token {
   type          : 287
   location      : line 49, offset 41
   chars         : '|'
   string value  : "|" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 49, offset 43
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 49, offset 49
   chars         : 'center'
   string value  : "center" (len=6)
}

$ Token :BL_LSHIFT:
$ Token {
   type          : 284
   location      : line 49, offset 52
   chars         : '<<'
   string value  : "<<" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 49, offset 54
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 49, offset 55
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_OR:
$ Token {
   type          : 287
   location      : line 49, offset 57
   chars         : '|'
   string value  : "|" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 49, offset 63
   chars         : 'right'
   string value  : "right" (len=5)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 49, offset 64
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 50, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 50, offset 26
   chars         : 'next_bit'
   string value  : "next_bit" (len=8)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 50, offset 28
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 50, offset 30
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 50, offset 34
   chars         : 'rule'
   string value  : "rule" (len=4)
}

$ Token :BL_RSHIFT:
$ Token {
   type          : 285
   location      : line 50, offset 37
   chars         : '>>'
   string value  : ">>" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 50, offset 45
   chars         : 'pattern'
   string value  : "pattern" (len=7)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 50, offset 46
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_AND:
$ Token {
   type          : 286
   location      : line 50, offset 48
   chars         : '&'
   string value  : "&" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 50, offset 50
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 50, offset 51
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 305
   location      : line 52, offset 13
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 52, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 52, offset 22
   chars         : 'next_bit'
   string value  : "next_bit" (len=8)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 52, offset 23
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 52, offset 24
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 53, offset 13
   chars         : 'next'
   string value  : "next" (len=4)
}

$ Token :BL_OREQ:
$ Token {
   type          : 290
   location      : line 53, offset 16
   chars         : '|='
   string value  : "|=" (len=2)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 53, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 53, offset 19
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_LSHIFT:
$ Token {
   type          : 284
   location      : line 53, offset 22
   chars         : '<<'
   string value  : "<<" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 53, offset 24
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 53, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 53, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 54, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :KW_BHAU_PARAT_DE:
$ Token {
   type          : 310
   location      : line 55, offset 18
   chars         : 'bhau parat de'
   string value  : "bhau parat de" (len=13)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 55, offset 23
   chars         : 'next'
   string value  : "next" (len=4)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 55, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 56, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 58, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 58, offset 36
   chars         : 'generate_automata'
   string value  : "generate_automata" (len=17)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 58, offset 37
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 58, offset 41
   chars         : 'rule'
   string value  : "rule" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 58, offset 42
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 58, offset 47
   chars         : 'width'
   string value  : "width" (len=5)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 58, offset 48
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 58, offset 53
   chars         : 'steps'
   string value  : "steps" (len=5)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 58, offset 54
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 58, offset 55
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 59, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 59, offset 25
   chars         : 'current'
   string value  : "current" (len=7)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 59, offset 27
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 59, offset 29
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_LSHIFT:
$ Token {
   type          : 284
   location      : line 59, offset 32
   chars         : '<<'
   string value  : "<<" (len=2)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 59, offset 34
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 59, offset 39
   chars         : 'width'
   string value  : "width" (len=5)
}

$ Token :BL_DIVBINOP:
$ Token {
   type          : 276
   location      : line 59, offset 40
   chars         : '/'
   string value  : "/" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 59, offset 41
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 59, offset 42
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 59, offset 43
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 61, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 61, offset 22
   chars         : 'step'
   string value  : "step" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 61, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 61, offset 26
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 61, offset 27
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :case BL_KW_BHAU_JOPARENT:
$ Token {
   type          : 308
   location      : line 62, offset 18
   chars         : 'bhau joparent'
   string value  : "bhau joparent" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 62, offset 20
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 62, offset 24
   chars         : 'step'
   string value  : "step" (len=4)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 293
   location      : line 62, offset 26
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 62, offset 32
   chars         : 'steps'
   string value  : "steps" (len=5)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 62, offset 33
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 63, offset 6
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 64, offset 21
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 64, offset 26
   chars         : 'next'
   string value  : "next" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 64, offset 28
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 64, offset 30
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 64, offset 31
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 65, offset 20
   chars         : 'print_state'
   string value  : "print_state" (len=11)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 65, offset 21
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 65, offset 28
   chars         : 'current'
   string value  : "current" (len=7)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 65, offset 29
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 65, offset 30
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 66, offset 21
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 66, offset 23
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 66, offset 25
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 66, offset 27
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 66, offset 28
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :case BL_KW_BHAU_JOPARENT:
$ Token {
   type          : 308
   location      : line 67, offset 22
   chars         : 'bhau joparent'
   string value  : "bhau joparent" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 67, offset 24
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 67, offset 25
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 293
   location      : line 67, offset 27
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 67, offset 33
   chars         : 'width'
   string value  : "width" (len=5)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 67, offset 34
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 68, offset 10
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 17
   chars         : 'next'
   string value  : "next" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 69, offset 19
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 32
   chars         : 'update_state'
   string value  : "update_state" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 69, offset 33
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 37
   chars         : 'rule'
   string value  : "rule" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 69, offset 38
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 45
   chars         : 'current'
   string value  : "current" (len=7)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 69, offset 46
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 50
   chars         : 'next'
   string value  : "next" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 69, offset 51
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 52
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 69, offset 53
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 69, offset 54
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_INC:
$ Token {
   type          : 282
   location      : line 70, offset 15
   chars         : '++'
   string value  : "++" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 70, offset 16
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 70, offset 17
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 71, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 72, offset 16
   chars         : 'current'
   string value  : "current" (len=7)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 72, offset 18
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 72, offset 23
   chars         : 'next'
   string value  : "next" (len=4)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 72, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_INC:
$ Token {
   type          : 282
   location      : line 73, offset 11
   chars         : '++'
   string value  : "++" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 73, offset 15
   chars         : 'step'
   string value  : "step" (len=4)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 73, offset 16
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 74, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 75, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_MAIN:
$ Token {
   type          : 321
   location      : line 77, offset 17
   chars         : 'bhau ithun chalu'
   string value  : "bhau ithun chalu" (len=16)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 78, offset 2
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 79, offset 22
   chars         : 'generate_automata'
   string value  : "generate_automata" (len=17)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 79, offset 23
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 79, offset 27
   chars         : 'rule'
   string value  : "rule" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 79, offset 28
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 79, offset 33
   chars         : 'width'
   string value  : "width" (len=5)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 79, offset 34
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 79, offset 39
   chars         : 'steps'
   string value  : "steps" (len=5)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 79, offset 40
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 79, offset 41
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 80, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BYE_BHAU:
$ Token {
   type          : 312
   location      : line 82, offset 9
   chars         : 'bye bhau'
   string value  : "bye bhau" (len=8)
}

$ Token :BL_EOF:
$ Token {
   type          : 303
   location      : line 82, offset 10
   chars         : ''
   string value  : "" (len=1)
}

