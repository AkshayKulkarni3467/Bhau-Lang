$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 1, offset 3
   chars         : 'hi'
   string value  : "hi" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 1, offset 8
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 13
   chars         : 'baherun'
   string value  : "baherun" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 17
   chars         : 'ghe'
   string value  : "ghe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 24
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 37
   chars         : 'oraoraoroara'
   string value  : "oraoraoroara" (len=12)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 3, offset 38
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 30
   chars         : 'mixed_conds'
   string value  : "mixed_conds" (len=11)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 5, offset 31
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 5, offset 32
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 5, offset 33
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 6, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 6, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 6, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 6, offset 19
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 6, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 6, offset 24
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 6, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 19
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 7, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 7, offset 25
   chars         : '2.5'
   string value  : "2.5" (len=3)
   float value   : 2.500000
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 7, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 8, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 8, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 8, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 8, offset 19
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 8, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_CHAR:
$ Token {
   type          : 260
   location      : line 8, offset 25
   chars         : ''A''
   string value  : "A" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 8, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 22
   chars         : 'flag'
   string value  : "flag" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 9, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 30
   chars         : 'khara'
   string value  : "khara" (len=5)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 9, offset 31
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 22
   chars         : 'str1'
   string value  : "str1" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 10, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 10, offset 32
   chars         : '"hello"'
   string value  : "hello" (len=5)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 10, offset 33
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 11, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 11, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 11, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 11, offset 22
   chars         : 'str2'
   string value  : "str2" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 11, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 11, offset 32
   chars         : '"hello"'
   string value  : "hello" (len=5)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 11, offset 33
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 13
   chars         : 'jar'
   string value  : "jar" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 13, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 15
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 13, offset 17
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 19
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 13, offset 22
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 13, offset 27
   chars         : '12.5'
   string value  : "12.5" (len=4)
   float value   : 12.500000
}

$ Token :BL_LOGAND:
$ Token {
   type          : 298
   location      : line 13, offset 30
   chars         : '&&'
   string value  : "&&" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 32
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 13, offset 35
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_CHAR:
$ Token {
   type          : 260
   location      : line 13, offset 39
   chars         : ''A''
   string value  : "A" (len=1)
}

$ Token :BL_LOGAND:
$ Token {
   type          : 298
   location      : line 13, offset 42
   chars         : '&&'
   string value  : "&&" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 47
   chars         : 'flag'
   string value  : "flag" (len=4)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 13, offset 50
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 13, offset 52
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_LOGAND:
$ Token {
   type          : 298
   location      : line 13, offset 55
   chars         : '&&'
   string value  : "&&" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 60
   chars         : 'str1'
   string value  : "str1" (len=4)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 13, offset 63
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 68
   chars         : 'str2'
   string value  : "str2" (len=4)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 13, offset 69
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 13, offset 70
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 21
   chars         : 'oraoraoroara'
   string value  : "oraoraoroara" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 14, offset 22
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 14, offset 55
   chars         : '"From mixed_conds , value : %d\n"'
   string value  : "From mixed_conds , value : %d\n" (len=31)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 14, offset 56
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 14, offset 57
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 14, offset 58
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 14, offset 59
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 15, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 15, offset 10
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 15, offset 14
   chars         : 'tar'
   string value  : "tar" (len=3)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 15, offset 15
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 16, offset 21
   chars         : 'oraoraoroara'
   string value  : "oraoraoroara" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 16, offset 22
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 16, offset 55
   chars         : '"From mixed_conds , Value : %d\n"'
   string value  : "From mixed_conds , Value : %d\n" (len=31)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 16, offset 56
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 16, offset 57
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 16, offset 58
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 16, offset 59
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 17, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 18, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 11
   chars         : 'ithun'
   string value  : "ithun" (len=5)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 17
   chars         : 'chalu'
   string value  : "chalu" (len=5)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 21, offset 19
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 22, offset 16
   chars         : 'mixed_conds'
   string value  : "mixed_conds" (len=11)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 22, offset 17
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 22, offset 18
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 22, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 23, offset 17
   chars         : 'oraoraoroara'
   string value  : "oraoraoroara" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 23, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 23, offset 22
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 23, offset 23
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 23, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 24, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 27, offset 4
   chars         : 'bye'
   string value  : "bye" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 27, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_EOF:
$ Token {
   type          : 303
   location      : line 27, offset 11
   chars         : ''
   string value  : "" (len=1)
}

