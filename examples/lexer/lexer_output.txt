$ Token :BL_KW_HI_BHAU:
$ Token {
   type          : 309
   location      : line 1, offset 8
   chars         : 'hi bhau'
   string value  : "hi bhau" (len=7)
}

$ Token :BL_COMMENT:
$ Token {
   type          : 297
   location      : line 3, offset 20
   chars         : '// Standard imports'
   string value  : "// Standard imports" (len=19)
}

$ Token :BL_KW_BHAU_BAHERUN_GHE:
$ Token {
   type          : 317
   location      : line 4, offset 17
   chars         : 'bhau baherun ghe'
   string value  : "bhau baherun ghe" (len=16)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 4, offset 24
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 4, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_BAHERUN_GHE:
$ Token {
   type          : 317
   location      : line 5, offset 17
   chars         : 'bhau baherun ghe'
   string value  : "bhau baherun ghe" (len=16)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 23
   chars         : 'scanf'
   string value  : "scanf" (len=5)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 5, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_BAHERUN_GHE:
$ Token {
   type          : 317
   location      : line 6, offset 17
   chars         : 'bhau baherun ghe'
   string value  : "bhau baherun ghe" (len=16)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 6, offset 25
   chars         : 'mathlib'
   string value  : "mathlib" (len=7)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 6, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_BAHERUN_GHE:
$ Token {
   type          : 317
   location      : line 7, offset 17
   chars         : 'bhau baherun ghe'
   string value  : "bhau baherun ghe" (len=16)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 29
   chars         : 'stringutils'
   string value  : "stringutils" (len=11)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 7, offset 30
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_COMMENT:
$ Token {
   type          : 297
   location      : line 9, offset 25
   chars         : '// Variable declarations'
   string value  : "// Variable declarations" (len=24)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 301
   location      : line 10, offset 13
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 21
   chars         : 'counter'
   string value  : "counter" (len=7)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 10, offset 23
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 10, offset 25
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 10, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 301
   location      : line 11, offset 13
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 11, offset 21
   chars         : 'message'
   string value  : "message" (len=7)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 11, offset 23
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 11, offset 46
   chars         : '"Welcome to BhauLang!"'
   string value  : "Welcome to BhauLang!" (len=20)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 11, offset 47
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 301
   location      : line 12, offset 13
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 15
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 12, offset 17
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 12, offset 20
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 12, offset 21
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 301
   location      : line 13, offset 13
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 15
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 13, offset 17
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 13, offset 20
   chars         : '20'
   string value  : "20" (len=2)
   int value     : 20
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 13, offset 21
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 301
   location      : line 14, offset 13
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 15
   chars         : 'z'
   string value  : "z" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 14, offset 17
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 14, offset 20
   chars         : '30'
   string value  : "30" (len=2)
   int value     : 30
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 14, offset 21
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 301
   location      : line 15, offset 13
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 15, offset 16
   chars         : 'ch'
   string value  : "ch" (len=2)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 15, offset 18
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_CHAR:
$ Token {
   type          : 260
   location      : line 15, offset 22
   chars         : ''a''
   string value  : "a" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 15, offset 23
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 301
   location      : line 16, offset 13
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 16, offset 18
   chars         : 'flag'
   string value  : "flag" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 16, offset 20
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 16, offset 22
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 16, offset 23
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 301
   location      : line 17, offset 13
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 17, offset 16
   chars         : 'pi'
   string value  : "pi" (len=2)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 17, offset 18
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 17, offset 25
   chars         : '3.1415'
   string value  : "3.1415" (len=6)
   float value   : 3.141500
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 17, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 301
   location      : line 18, offset 13
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 18, offset 18
   chars         : 'name'
   string value  : "name" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 18, offset 20
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 18, offset 38
   chars         : '"Akshay Kulkarni"'
   string value  : "Akshay Kulkarni" (len=15)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 18, offset 39
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_COMMENT:
$ Token {
   type          : 297
   location      : line 20, offset 22
   chars         : '// Multiple functions'
   string value  : "// Multiple functions" (len=21)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 9
   chars         : 'add'
   string value  : "add" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 21, offset 10
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 11
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 268
   location      : line 21, offset 12
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 14
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 21, offset 15
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 21, offset 16
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 22, offset 11
   chars         : 'return'
   string value  : "return" (len=6)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 22, offset 13
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 271
   location      : line 22, offset 15
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 22, offset 17
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 22, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 23, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 25, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 25, offset 14
   chars         : 'multiply'
   string value  : "multiply" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 25, offset 15
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 25, offset 16
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 268
   location      : line 25, offset 17
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 25, offset 19
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 25, offset 20
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 25, offset 21
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 26, offset 11
   chars         : 'return'
   string value  : "return" (len=6)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 26, offset 13
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 273
   location      : line 26, offset 15
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 26, offset 17
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 26, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 27, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 29, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 29, offset 15
   chars         : 'factorial'
   string value  : "factorial" (len=9)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 29, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 29, offset 17
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 29, offset 18
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 29, offset 19
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 301
   location      : line 30, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 30, offset 24
   chars         : 'result'
   string value  : "result" (len=6)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 30, offset 26
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 30, offset 28
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 30, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :case BL_KW_BHAU_JOPARENT:
$ Token {
   type          : 305
   location      : line 31, offset 18
   chars         : 'bhau joparent'
   string value  : "bhau joparent" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 31, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 31, offset 20
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_GRTTHAN:
$ Token {
   type          : 291
   location      : line 31, offset 22
   chars         : '>'
   string value  : ">" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 31, offset 24
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 31, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 31, offset 26
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 32, offset 15
   chars         : 'result'
   string value  : "result" (len=6)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 32, offset 17
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 32, offset 24
   chars         : 'result'
   string value  : "result" (len=6)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 273
   location      : line 32, offset 26
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 32, offset 28
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 32, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 33, offset 10
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 33, offset 12
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 33, offset 14
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 272
   location      : line 33, offset 16
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 33, offset 18
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 33, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 34, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 35, offset 11
   chars         : 'return'
   string value  : "return" (len=6)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 35, offset 18
   chars         : 'result'
   string value  : "result" (len=6)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 35, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 36, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 38, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 38, offset 9
   chars         : 'fib'
   string value  : "fib" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 38, offset 10
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 38, offset 11
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 38, offset 12
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 38, offset 13
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 302
   location      : line 39, offset 13
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 39, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 39, offset 15
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_LESSEQ:
$ Token {
   type          : 293
   location      : line 39, offset 18
   chars         : '<='
   string value  : "<=" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 39, offset 20
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 39, offset 21
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 39, offset 22
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 40, offset 15
   chars         : 'return'
   string value  : "return" (len=6)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 40, offset 17
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 40, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 41, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 42, offset 11
   chars         : 'return'
   string value  : "return" (len=6)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 42, offset 15
   chars         : 'fib'
   string value  : "fib" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 42, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 42, offset 17
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 272
   location      : line 42, offset 19
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 42, offset 21
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 42, offset 22
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 271
   location      : line 42, offset 24
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 42, offset 28
   chars         : 'fib'
   string value  : "fib" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 42, offset 29
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 42, offset 30
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 272
   location      : line 42, offset 32
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 42, offset 34
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 42, offset 35
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 42, offset 36
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 43, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_COMMENT:
$ Token {
   type          : 297
   location      : line 45, offset 31
   chars         : '// Nested conditionals + loops'
   string value  : "// Nested conditionals + loops" (len=30)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 46, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 46, offset 21
   chars         : 'test_conditions'
   string value  : "test_conditions" (len=15)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 46, offset 22
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 46, offset 25
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 46, offset 26
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 46, offset 27
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 302
   location      : line 47, offset 13
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 47, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 47, offset 17
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 270
   location      : line 47, offset 20
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 47, offset 22
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 47, offset 23
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 47, offset 24
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 48, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 48, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 48, offset 24
   chars         : '"Zero\n"'
   string value  : "Zero\n" (len=6)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 48, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 48, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 49, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_NAHITAR:
$ Token {
   type          : 303
   location      : line 50, offset 17
   chars         : 'bhau nahitar'
   string value  : "bhau nahitar" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 50, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 50, offset 21
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 290
   location      : line 50, offset 23
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 50, offset 25
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 50, offset 26
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 50, offset 28
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 51, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 51, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 51, offset 28
   chars         : '"Negative\n"'
   string value  : "Negative\n" (len=10)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 51, offset 29
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 51, offset 30
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 52, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :case BL_KW_BHAU_TAR:
$ Token {
   type          : 304
   location      : line 53, offset 13
   chars         : 'bhau tar'
   string value  : "bhau tar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 53, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 53, offset 17
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_GRTTHAN:
$ Token {
   type          : 291
   location      : line 53, offset 19
   chars         : '>'
   string value  : ">" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 53, offset 21
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 53, offset 22
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 53, offset 23
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 54, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 54, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 54, offset 28
   chars         : '"Positive\n"'
   string value  : "Positive\n" (len=10)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 54, offset 29
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 54, offset 30
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 55, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 57, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 59, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 59, offset 15
   chars         : 'loop_test'
   string value  : "loop_test" (len=9)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 59, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 59, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 59, offset 18
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 301
   location      : line 60, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 60, offset 19
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 60, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 60, offset 23
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 60, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :case BL_KW_BHAU_JOPARENT:
$ Token {
   type          : 305
   location      : line 61, offset 18
   chars         : 'bhau joparent'
   string value  : "bhau joparent" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 61, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 61, offset 20
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 290
   location      : line 61, offset 22
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 61, offset 25
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 61, offset 26
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 61, offset 27
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 302
   location      : line 62, offset 17
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 62, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 62, offset 19
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_UNIMPLEMENTED:
$ Token {
   type          : 299
   location      : line 62, offset 21
   chars         : '%'
   string value  : "%" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 62, offset 23
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 270
   location      : line 62, offset 26
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 62, offset 28
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 62, offset 29
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 62, offset 30
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 63, offset 19
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 63, offset 20
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 63, offset 28
   chars         : '"Even: "'
   string value  : "Even: " (len=6)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 63, offset 29
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 63, offset 30
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 64, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :case BL_KW_BHAU_TAR:
$ Token {
   type          : 304
   location      : line 65, offset 17
   chars         : 'bhau tar'
   string value  : "bhau tar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 65, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 65, offset 19
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_UNIMPLEMENTED:
$ Token {
   type          : 299
   location      : line 65, offset 21
   chars         : '%'
   string value  : "%" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 65, offset 23
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_NOTEQ:
$ Token {
   type          : 292
   location      : line 65, offset 26
   chars         : '!='
   string value  : "!=" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 65, offset 28
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 65, offset 29
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 65, offset 30
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 66, offset 19
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 66, offset 20
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 66, offset 27
   chars         : '"Odd: "'
   string value  : "Odd: " (len=5)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 66, offset 28
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 66, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 67, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 68, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 68, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 68, offset 22
   chars         : '"i = "'
   string value  : "i = " (len=4)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 68, offset 23
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 68, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 69, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 17
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 69, offset 18
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 69, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 70, offset 10
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_INC:
$ Token {
   type          : 279
   location      : line 70, offset 12
   chars         : '++'
   string value  : "++" (len=2)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 70, offset 13
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 71, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 72, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 74, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 74, offset 16
   chars         : 'string_ops'
   string value  : "string_ops" (len=10)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 74, offset 17
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 74, offset 18
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 74, offset 19
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 301
   location      : line 75, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 75, offset 19
   chars         : 's'
   string value  : "s" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 75, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 75, offset 33
   chars         : '"BhauLang!"'
   string value  : "BhauLang!" (len=9)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 75, offset 34
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 301
   location      : line 76, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 76, offset 21
   chars         : 'len'
   string value  : "len" (len=3)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 76, offset 23
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 76, offset 30
   chars         : 'strlen'
   string value  : "strlen" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 76, offset 31
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 76, offset 32
   chars         : 's'
   string value  : "s" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 76, offset 33
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 76, offset 34
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 77, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 77, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 77, offset 25
   chars         : '"Length is: "'
   string value  : "Length is: " (len=11)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 77, offset 26
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 77, offset 27
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 78, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 78, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 78, offset 15
   chars         : 'len'
   string value  : "len" (len=3)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 78, offset 16
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 78, offset 17
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 79, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_COMMENT:
$ Token {
   type          : 297
   location      : line 81, offset 26
   chars         : '// Large repetitive block'
   string value  : "// Large repetitive block" (len=25)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 82, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 82, offset 18
   chars         : 'repeat_block'
   string value  : "repeat_block" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 82, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 82, offset 20
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 82, offset 21
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 301
   location      : line 83, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 83, offset 19
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 83, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 23
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 83, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :case BL_KW_BHAU_JOPARENT:
$ Token {
   type          : 305
   location      : line 84, offset 18
   chars         : 'bhau joparent'
   string value  : "bhau joparent" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 84, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 84, offset 20
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 290
   location      : line 84, offset 22
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 84, offset 27
   chars         : '1000'
   string value  : "1000" (len=4)
   int value     : 1000
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 84, offset 28
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 84, offset 29
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 85, offset 10
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_INC:
$ Token {
   type          : 279
   location      : line 85, offset 12
   chars         : '++'
   string value  : "++" (len=2)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 85, offset 13
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 86, offset 11
   chars         : 'if'
   string value  : "if" (len=2)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 86, offset 13
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 86, offset 14
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_UNIMPLEMENTED:
$ Token {
   type          : 299
   location      : line 86, offset 16
   chars         : '%'
   string value  : "%" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 86, offset 20
   chars         : '100'
   string value  : "100" (len=3)
   int value     : 100
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 270
   location      : line 86, offset 23
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 86, offset 25
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 86, offset 26
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 86, offset 28
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 87, offset 19
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 87, offset 20
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 87, offset 36
   chars         : '"Checkpoint at "'
   string value  : "Checkpoint at " (len=14)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 87, offset 37
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 87, offset 38
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 88, offset 19
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 88, offset 20
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 88, offset 21
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 88, offset 22
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 88, offset 23
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 89, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 90, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 91, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_COMMENT:
$ Token {
   type          : 297
   location      : line 93, offset 17
   chars         : '// Main function'
   string value  : "// Main function" (len=16)
}

$ Token :BL_KW_BHAU_MAIN:
$ Token {
   type          : 318
   location      : line 94, offset 10
   chars         : 'bhau main'
   string value  : "bhau main" (len=9)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 94, offset 11
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 94, offset 12
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 264
   location      : line 94, offset 13
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 95, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 95, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 95, offset 19
   chars         : 'message'
   string value  : "message" (len=7)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 95, offset 20
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 95, offset 21
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 96, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 96, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 96, offset 16
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 96, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 96, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 301
   location      : line 98, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 98, offset 22
   chars         : 'fact'
   string value  : "fact" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 98, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 98, offset 34
   chars         : 'factorial'
   string value  : "factorial" (len=9)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 98, offset 35
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 98, offset 36
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 98, offset 37
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 98, offset 38
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 99, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 99, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 99, offset 25
   chars         : '"Factorial: "'
   string value  : "Factorial: " (len=11)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 99, offset 26
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 99, offset 27
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 100, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 100, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 100, offset 16
   chars         : 'fact'
   string value  : "fact" (len=4)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 100, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 100, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 301
   location      : line 102, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 102, offset 23
   chars         : 'fib10'
   string value  : "fib10" (len=5)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 269
   location      : line 102, offset 25
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 102, offset 29
   chars         : 'fib'
   string value  : "fib" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 102, offset 30
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 102, offset 32
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 102, offset 33
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 102, offset 34
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 103, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 103, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 103, offset 23
   chars         : '"Fib(10): "'
   string value  : "Fib(10): " (len=9)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 103, offset 24
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 103, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 104, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 104, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 104, offset 17
   chars         : 'fib10'
   string value  : "fib10" (len=5)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 104, offset 18
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 104, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 106, offset 20
   chars         : 'test_conditions'
   string value  : "test_conditions" (len=15)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 106, offset 21
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 272
   location      : line 106, offset 22
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 106, offset 24
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 106, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 106, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 107, offset 20
   chars         : 'test_conditions'
   string value  : "test_conditions" (len=15)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 107, offset 21
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 107, offset 22
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 107, offset 23
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 107, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 108, offset 20
   chars         : 'test_conditions'
   string value  : "test_conditions" (len=15)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 108, offset 21
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 108, offset 23
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 108, offset 24
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 108, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 110, offset 14
   chars         : 'loop_test'
   string value  : "loop_test" (len=9)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 110, offset 15
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 110, offset 16
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 110, offset 17
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 111, offset 15
   chars         : 'string_ops'
   string value  : "string_ops" (len=10)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 111, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 111, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 111, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 112, offset 17
   chars         : 'repeat_block'
   string value  : "repeat_block" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 262
   location      : line 112, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 263
   location      : line 112, offset 19
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 112, offset 20
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 265
   location      : line 113, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BYE_BHAU:
$ Token {
   type          : 310
   location      : line 115, offset 9
   chars         : 'bye bhau'
   string value  : "bye bhau" (len=8)
}

$ Token :BL_EOF:
$ Token {
   type          : 300
   location      : line 115, offset 10
   chars         : ''
   string value  : "" (len=1)
}


📊 Arena Stats:
  Blocks       : 1
  Used bytes   : 574680
  Capacity     : 4194304
  Utilization  : 13.70%
