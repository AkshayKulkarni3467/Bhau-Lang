(null)└── PROGRAM
(null)    ├── EXTERN
(null)    │   └── IDENTIFIER: printf [global#1]
(null)    ├── FUNCTION: ret_float
(null)    │   ├── PARAMS
(null)    │   └── PARAM: ret_float
(null)    │       └── IDENTIFIER: a [ret_float#2]
(null)    │   └── BLOCK
(null)    │   └── BLOCK
(null)    │       ├── ASSIGN DECL BL_EQUAL
(null)    │       │   ├── IDENTIFIER: b [ret_float#2]
(null)    │       │   └── IDENTIFIER: a [ret_float#2]
(null)    │       └── RETURN
(null)    │           └── IDENTIFIER: b [ret_float#2]
(null)    ├── FUNCTION: operator_add_float
(null)    │   ├── PARAMS
(null)    │   ├── PARAM: operator_add_float
(null)    │   │   └── IDENTIFIER: a [operator_add_float#3]
(null)    │   └── PARAM: operator_add_float
(null)    │       └── IDENTIFIER: b [operator_add_float#3]
(null)    │   └── BLOCK
(null)    │   └── BLOCK
(null)    │       └── RETURN
(null)    │           └── BINOP: BL_ADDBINOP
(null)    │               ├── IDENTIFIER: a [operator_add_float#3]
(null)    │               └── IDENTIFIER: b [operator_add_float#3]
(null)    ├── FUNCTION: op_mult_div_float
(null)    │   ├── PARAMS
(null)    │   ├── PARAM: op_mult_div_float
(null)    │   │   └── IDENTIFIER: a [op_mult_div_float#4]
(null)    │   └── PARAM: op_mult_div_float
(null)    │       └── IDENTIFIER: b [op_mult_div_float#4]
(null)    │   └── BLOCK
(null)    │   └── BLOCK
(null)    │       ├── ASSIGN DECL BL_EQUAL
(null)    │       │   ├── IDENTIFIER: x [op_mult_div_float#4]
(null)    │       │   └── BINOP: BL_MULTBINOP
(null)    │       │       ├── IDENTIFIER: a [op_mult_div_float#4]
(null)    │       │       └── IDENTIFIER: b [op_mult_div_float#4]
(null)    │       ├── ASSIGN DECL BL_EQUAL
(null)    │       │   ├── IDENTIFIER: y [op_mult_div_float#4]
(null)    │       │   └── BINOP: BL_DIVBINOP
(null)    │       │       ├── IDENTIFIER: a [op_mult_div_float#4]
(null)    │       │       └── IDENTIFIER: b [op_mult_div_float#4]
(null)    │       └── RETURN
(null)    │           └── BINOP: BL_MULTBINOP
(null)    │               ├── IDENTIFIER: x [op_mult_div_float#4]
(null)    │               └── IDENTIFIER: y [op_mult_div_float#4]
(null)    ├── FUNCTION: comparison_float
(null)    │   ├── PARAMS
(null)    │   ├── PARAM: comparison_float
(null)    │   │   └── IDENTIFIER: a [comparison_float#5]
(null)    │   └── PARAM: comparison_float
(null)    │       └── IDENTIFIER: b [comparison_float#5]
(null)    │   └── BLOCK
(null)    │   └── BLOCK
(null)    │       └── IF_ELSE
(null)    │           ├── CONDITION
(null)    │           ├── BINOP: BL_LESSTHAN
(null)    │           │   ├── IDENTIFIER: a [comparison_float#5]
(null)    │           │   └── IDENTIFIER: b [comparison_float#5]
(null)    │           ├── IF BLOCK
(null)    │           ├── BLOCK
(null)    │           │   └── FUNCTION CALL: printf
(null)    │           │       ├── STRING_LITERAL: "From comparison_float, %.2f is less than %.2f\n"
(null)    │           │       ├── IDENTIFIER: a [(null)#6]
(null)    │           │       └── IDENTIFIER: b [(null)#6]
(null)    │           └── ELSE BLOCK
(null)    │           └── BLOCK
(null)    │               └── FUNCTION CALL: printf
(null)    │                   ├── STRING_LITERAL: "From comparison_float, %.2f is greater than %.2f\n"
(null)    │                   ├── IDENTIFIER: a [(null)#7]
(null)    │                   └── IDENTIFIER: b [(null)#7]
(null)    ├── FUNCTION: type_mixing
(null)    │   ├── PARAMS
(null)    │   ├── PARAM: type_mixing
(null)    │   │   └── IDENTIFIER: a [type_mixing#8]
(null)    │   └── PARAM: type_mixing
(null)    │       └── IDENTIFIER: b [type_mixing#8]
(null)    │   └── BLOCK
(null)    │   └── BLOCK
(null)    │       └── RETURN
(null)    │           └── BINOP: BL_MULTBINOP
(null)    │               ├── IDENTIFIER: a [type_mixing#8]
(null)    │               └── IDENTIFIER: b [type_mixing#8]
(null)    ├── FUNCTION: pre_inc_float
(null)    │   ├── PARAMS
(null)    │   └── PARAM: pre_inc_float
(null)    │       └── IDENTIFIER: a [pre_inc_float#9]
(null)    │   └── BLOCK
(null)    │   └── BLOCK
(null)    │       └── RETURN
(null)    │           └── UNARYOP : BL_INC
(null)    │               └── IDENTIFIER: a [pre_inc_float#9]
(null)    ├── FUNCTION: loop_float
(null)    │   ├── PARAMS
(null)    │   └── BLOCK
(null)    │   └── BLOCK
(null)    │       ├── ASSIGN DECL BL_EQUAL
(null)    │       │   ├── IDENTIFIER: a [loop_float#10]
(null)    │       │   └── FLOAT_LITERAL: 0.00
(null)    │       ├── WHILE
(null)    │       │   ├── EXPR
(null)    │       │   ├── BINOP: BL_LESSTHAN
(null)    │       │   │   ├── IDENTIFIER: a [loop_float#10]
(null)    │       │   │   └── FLOAT_LITERAL: 5.00
(null)    │       │   └── BLOCK
(null)    │       │   └── BLOCK
(null)    │       │       ├── FUNCTION CALL: printf
(null)    │       │       │   ├── STRING_LITERAL: "From loop_float, Value a : %.2f\n"
(null)    │       │       │   └── IDENTIFIER: a [(null)#11]
(null)    │       │       └── ASSIGN BL_ADDEQ
(null)    │       │           ├── IDENTIFIER: a [(null)#11]
(null)    │       │           └── FLOAT_LITERAL: 1.50
(null)    │       └── FUNCTION CALL: printf
(null)    │           └── STRING_LITERAL: "\n"
(null)    ├── FUNCTION: float_control_flow
(null)    │   ├── PARAMS
(null)    │   └── BLOCK
(null)    │   └── BLOCK
(null)    │       ├── ASSIGN DECL BL_EQUAL
(null)    │       │   ├── IDENTIFIER: y [float_control_flow#12]
(null)    │       │   └── FLOAT_LITERAL: 3.14
(null)    │       ├── ASSIGN DECL BL_EQUAL
(null)    │       │   ├── IDENTIFIER: x [float_control_flow#12]
(null)    │       │   └── FLOAT_LITERAL: 2.71
(null)    │       ├── ASSIGN DECL BL_EQUAL
(null)    │       │   ├── IDENTIFIER: z [float_control_flow#12]
(null)    │       │   └── FLOAT_LITERAL: 0.00
(null)    │       ├── IF_ELSE
(null)    │       │   ├── CONDITION
(null)    │       │   ├── BINOP: BL_GRTTHAN
(null)    │       │   │   ├── IDENTIFIER: x [float_control_flow#12]
(null)    │       │   │   └── IDENTIFIER: y [float_control_flow#12]
(null)    │       │   ├── IF BLOCK
(null)    │       │   ├── BLOCK
(null)    │       │   │   └── ASSIGN BL_EQUAL
(null)    │       │   │       ├── IDENTIFIER: z [(null)#13]
(null)    │       │   │       └── BINOP: BL_SUBBINOP
(null)    │       │   │           ├── IDENTIFIER: x [(null)#13]
(null)    │       │   │           └── IDENTIFIER: y [(null)#13]
(null)    │       │   └── ELSE BLOCK
(null)    │       │   └── BLOCK
(null)    │       │       └── ASSIGN BL_EQUAL
(null)    │       │           ├── IDENTIFIER: z [(null)#14]
(null)    │       │           └── BINOP: BL_ADDBINOP
(null)    │       │               ├── IDENTIFIER: x [(null)#14]
(null)    │       │               └── IDENTIFIER: y [(null)#14]
(null)    │       └── IF_ELSE
(null)    │           ├── CONDITION
(null)    │           ├── BINOP: BL_GRTTHAN
(null)    │           │   ├── IDENTIFIER: z [float_control_flow#12]
(null)    │           │   └── FLOAT_LITERAL: 5.00
(null)    │           ├── IF BLOCK
(null)    │           ├── BLOCK
(null)    │           │   ├── ASSIGN DECL BL_EQUAL
(null)    │           │   │   ├── IDENTIFIER: double_z [(null)#15]
(null)    │           │   │   └── BINOP: BL_MULTBINOP
(null)    │           │   │       ├── IDENTIFIER: z [(null)#15]
(null)    │           │   │       └── FLOAT_LITERAL: 2.00
(null)    │           │   └── FUNCTION CALL: printf
(null)    │           │       ├── STRING_LITERAL: "From float_control_flow, Value : %.2f\n"
(null)    │           │       └── IDENTIFIER: double_z [(null)#15]
(null)    │           └── ELSE BLOCK
(null)    │           └── (null node)
(null)    └── MAIN FUNCTION
(null)        └── BLOCK
(null)            ├── ASSIGN DECL BL_EQUAL
(null)            │   ├── IDENTIFIER: ret_float_var [main#16]
(null)            │   └── FUNCTION CALL: ret_float
(null)            │       └── FLOAT_LITERAL: 3.14
(null)            ├── FUNCTION CALL: printf
(null)            │   ├── STRING_LITERAL: "From ret_float_var, Value : %.2f\n"
(null)            │   └── IDENTIFIER: ret_float_var [main#16]
(null)            ├── FUNCTION CALL: printf
(null)            │   └── STRING_LITERAL: "\n"
(null)            ├── ASSIGN DECL BL_EQUAL
(null)            │   ├── IDENTIFIER: op_add_float_var [main#16]
(null)            │   └── FUNCTION CALL: operator_add_float
(null)            │       ├── FLOAT_LITERAL: 6.90
(null)            │       └── FLOAT_LITERAL: 6.90
(null)            ├── FUNCTION CALL: printf
(null)            │   ├── STRING_LITERAL: "From operator_add_float, Value : %.2f\n"
(null)            │   └── IDENTIFIER: op_add_float_var [main#16]
(null)            ├── FUNCTION CALL: printf
(null)            │   └── STRING_LITERAL: "\n"
(null)            ├── ASSIGN DECL BL_EQUAL
(null)            │   ├── IDENTIFIER: op_mult_div_var [main#16]
(null)            │   └── FUNCTION CALL: op_mult_div_float
(null)            │       ├── FLOAT_LITERAL: 10.00
(null)            │       └── FLOAT_LITERAL: 2.50
(null)            ├── FUNCTION CALL: printf
(null)            │   ├── STRING_LITERAL: "From op_mult_div_float, Value : %.2f\n"
(null)            │   └── IDENTIFIER: op_mult_div_var [main#16]
(null)            ├── FUNCTION CALL: printf
(null)            │   └── STRING_LITERAL: "\n"
(null)            ├── FUNCTION CALL: comparison_float
(null)            │   ├── FLOAT_LITERAL: 10.00
(null)            │   └── FLOAT_LITERAL: 2.50
(null)            ├── FUNCTION CALL: printf
(null)            │   └── STRING_LITERAL: "\n"
(null)            ├── ASSIGN DECL BL_EQUAL
(null)            │   ├── IDENTIFIER: type_mix_var [main#16]
(null)            │   └── FUNCTION CALL: type_mixing
(null)            │       ├── INT_LITERAL: 10
(null)            │       └── FLOAT_LITERAL: 2.50
(null)            ├── FUNCTION CALL: printf
(null)            │   ├── STRING_LITERAL: "From type_mixing, Value : %.2f\n"
(null)            │   └── IDENTIFIER: type_mix_var [main#16]
(null)            ├── FUNCTION CALL: printf
(null)            │   └── STRING_LITERAL: "\n"
(null)            ├── ASSIGN DECL BL_EQUAL
(null)            │   ├── IDENTIFIER: pre_inc_var [main#16]
(null)            │   └── FUNCTION CALL: pre_inc_float
(null)            │       └── FLOAT_LITERAL: 3.23
(null)            ├── FUNCTION CALL: printf
(null)            │   ├── STRING_LITERAL: "From pre_inc_float, Value : %.2f\n"
(null)            │   └── IDENTIFIER: pre_inc_var [main#16]
(null)            ├── FUNCTION CALL: printf
(null)            │   └── STRING_LITERAL: "\n"
(null)            ├── FUNCTION CALL: loop_float
(null)            ├── FUNCTION CALL: float_control_flow
(null)            └── FUNCTION CALL: printf
(null)                └── STRING_LITERAL: "\n"

(null)└── PROGRAM
(null)    ├── EXTERN
(null)    │   └── IDENTIFIER: printf [global#1]
(null)    ├── FUNCTION: ret_float
(null)    │   ├── PARAMS
(null)    │   └── PARAM: ret_float
(null)    │       └── IDENTIFIER: a [ret_float#2]
(null)    │   └── BLOCK
(null)    │   └── BLOCK
(null)    │       ├── ASSIGN DECL BL_EQUAL
(null)    │       │   ├── IDENTIFIER: b [ret_float#2]
(null)    │       │   └── IDENTIFIER: a [ret_float#2]
(null)    │       └── RETURN
(null)    │           └── IDENTIFIER: b [ret_float#2]
(null)    ├── FUNCTION: operator_add_float
(null)    │   ├── PARAMS
(null)    │   ├── PARAM: operator_add_float
(null)    │   │   └── IDENTIFIER: a [operator_add_float#3]
(null)    │   └── PARAM: operator_add_float
(null)    │       └── IDENTIFIER: b [operator_add_float#3]
(null)    │   └── BLOCK
(null)    │   └── BLOCK
(null)    │       └── RETURN
(null)    │           └── BINOP: BL_ADDBINOP
(null)    │               ├── IDENTIFIER: a [operator_add_float#3]
(null)    │               └── IDENTIFIER: b [operator_add_float#3]
(null)    ├── FUNCTION: op_mult_div_float
(null)    │   ├── PARAMS
(null)    │   ├── PARAM: op_mult_div_float
(null)    │   │   └── IDENTIFIER: a [op_mult_div_float#4]
(null)    │   └── PARAM: op_mult_div_float
(null)    │       └── IDENTIFIER: b [op_mult_div_float#4]
(null)    │   └── BLOCK
(null)    │   └── BLOCK
(null)    │       ├── ASSIGN DECL BL_EQUAL
(null)    │       │   ├── IDENTIFIER: x [op_mult_div_float#4]
(null)    │       │   └── BINOP: BL_MULTBINOP
(null)    │       │       ├── IDENTIFIER: a [op_mult_div_float#4]
(null)    │       │       └── IDENTIFIER: b [op_mult_div_float#4]
(null)    │       ├── ASSIGN DECL BL_EQUAL
(null)    │       │   ├── IDENTIFIER: y [op_mult_div_float#4]
(null)    │       │   └── BINOP: BL_DIVBINOP
(null)    │       │       ├── IDENTIFIER: a [op_mult_div_float#4]
(null)    │       │       └── IDENTIFIER: b [op_mult_div_float#4]
(null)    │       └── RETURN
(null)    │           └── BINOP: BL_MULTBINOP
(null)    │               ├── IDENTIFIER: x [op_mult_div_float#4]
(null)    │               └── IDENTIFIER: y [op_mult_div_float#4]
(null)    ├── FUNCTION: comparison_float
(null)    │   ├── PARAMS
(null)    │   ├── PARAM: comparison_float
(null)    │   │   └── IDENTIFIER: a [comparison_float#5]
(null)    │   └── PARAM: comparison_float
(null)    │       └── IDENTIFIER: b [comparison_float#5]
(null)    │   └── BLOCK
(null)    │   └── BLOCK
(null)    │       └── IF_ELSE
(null)    │           ├── CONDITION
(null)    │           ├── BINOP: BL_LESSTHAN
(null)    │           │   ├── IDENTIFIER: a [comparison_float#5]
(null)    │           │   └── IDENTIFIER: b [comparison_float#5]
(null)    │           ├── IF BLOCK
(null)    │           ├── BLOCK
(null)    │           │   └── FUNCTION CALL: printf
(null)    │           │       ├── STRING_LITERAL: "From comparison_float, %.2f is less than %.2f\n"
(null)    │           │       ├── IDENTIFIER: a [(null)#6]
(null)    │           │       └── IDENTIFIER: b [(null)#6]
(null)    │           └── ELSE BLOCK
(null)    │           └── BLOCK
(null)    │               └── FUNCTION CALL: printf
(null)    │                   ├── STRING_LITERAL: "From comparison_float, %.2f is greater than %.2f\n"
(null)    │                   ├── IDENTIFIER: a [(null)#7]
(null)    │                   └── IDENTIFIER: b [(null)#7]
(null)    ├── FUNCTION: type_mixing
(null)    │   ├── PARAMS
(null)    │   ├── PARAM: type_mixing
(null)    │   │   └── IDENTIFIER: a [type_mixing#8]
(null)    │   └── PARAM: type_mixing
(null)    │       └── IDENTIFIER: b [type_mixing#8]
(null)    │   └── BLOCK
(null)    │   └── BLOCK
(null)    │       └── RETURN
(null)    │           └── BINOP: BL_MULTBINOP
(null)    │               ├── IDENTIFIER: a [type_mixing#8]
(null)    │               └── IDENTIFIER: b [type_mixing#8]
(null)    ├── FUNCTION: pre_inc_float
(null)    │   ├── PARAMS
(null)    │   └── PARAM: pre_inc_float
(null)    │       └── IDENTIFIER: a [pre_inc_float#9]
(null)    │   └── BLOCK
(null)    │   └── BLOCK
(null)    │       └── RETURN
(null)    │           └── UNARYOP : BL_INC
(null)    │               └── IDENTIFIER: a [pre_inc_float#9]
(null)    ├── FUNCTION: loop_float
(null)    │   ├── PARAMS
(null)    │   └── BLOCK
(null)    │   └── BLOCK
(null)    │       ├── ASSIGN DECL BL_EQUAL
(null)    │       │   ├── IDENTIFIER: a [loop_float#10]
(null)    │       │   └── FLOAT_LITERAL: 0.00
(null)    │       ├── WHILE
(null)    │       │   ├── EXPR
(null)    │       │   ├── BINOP: BL_LESSTHAN
(null)    │       │   │   ├── IDENTIFIER: a [loop_float#10]
(null)    │       │   │   └── FLOAT_LITERAL: 5.00
(null)    │       │   └── BLOCK
(null)    │       │   └── BLOCK
(null)    │       │       ├── FUNCTION CALL: printf
(null)    │       │       │   ├── STRING_LITERAL: "From loop_float, Value a : %.2f\n"
(null)    │       │       │   └── IDENTIFIER: a [(null)#11]
(null)    │       │       └── ASSIGN BL_ADDEQ
(null)    │       │           ├── IDENTIFIER: a [(null)#11]
(null)    │       │           └── FLOAT_LITERAL: 1.50
(null)    │       └── FUNCTION CALL: printf
(null)    │           └── STRING_LITERAL: "\n"
(null)    ├── FUNCTION: float_control_flow
(null)    │   ├── PARAMS
(null)    │   └── BLOCK
(null)    │   └── BLOCK
(null)    │       ├── ASSIGN DECL BL_EQUAL
(null)    │       │   ├── IDENTIFIER: y [float_control_flow#12]
(null)    │       │   └── FLOAT_LITERAL: 3.14
(null)    │       ├── ASSIGN DECL BL_EQUAL
(null)    │       │   ├── IDENTIFIER: x [float_control_flow#12]
(null)    │       │   └── FLOAT_LITERAL: 2.71
(null)    │       ├── ASSIGN DECL BL_EQUAL
(null)    │       │   ├── IDENTIFIER: z [float_control_flow#12]
(null)    │       │   └── FLOAT_LITERAL: 0.00
(null)    │       ├── IF_ELSE
(null)    │       │   ├── CONDITION
(null)    │       │   ├── BINOP: BL_GRTTHAN
(null)    │       │   │   ├── IDENTIFIER: x [float_control_flow#12]
(null)    │       │   │   └── IDENTIFIER: y [float_control_flow#12]
(null)    │       │   ├── IF BLOCK
(null)    │       │   ├── BLOCK
(null)    │       │   │   └── ASSIGN BL_EQUAL
(null)    │       │   │       ├── IDENTIFIER: z [(null)#13]
(null)    │       │   │       └── BINOP: BL_SUBBINOP
(null)    │       │   │           ├── IDENTIFIER: x [(null)#13]
(null)    │       │   │           └── IDENTIFIER: y [(null)#13]
(null)    │       │   └── ELSE BLOCK
(null)    │       │   └── BLOCK
(null)    │       │       └── ASSIGN BL_EQUAL
(null)    │       │           ├── IDENTIFIER: z [(null)#14]
(null)    │       │           └── BINOP: BL_ADDBINOP
(null)    │       │               ├── IDENTIFIER: x [(null)#14]
(null)    │       │               └── IDENTIFIER: y [(null)#14]
(null)    │       └── IF_ELSE
(null)    │           ├── CONDITION
(null)    │           ├── BINOP: BL_GRTTHAN
(null)    │           │   ├── IDENTIFIER: z [float_control_flow#12]
(null)    │           │   └── FLOAT_LITERAL: 5.00
(null)    │           ├── IF BLOCK
(null)    │           ├── BLOCK
(null)    │           │   ├── ASSIGN DECL BL_EQUAL
(null)    │           │   │   ├── IDENTIFIER: double_z [(null)#15]
(null)    │           │   │   └── BINOP: BL_MULTBINOP
(null)    │           │   │       ├── IDENTIFIER: z [(null)#15]
(null)    │           │   │       └── FLOAT_LITERAL: 2.00
(null)    │           │   └── FUNCTION CALL: printf
(null)    │           │       ├── STRING_LITERAL: "From float_control_flow, Value : %.2f\n"
(null)    │           │       └── IDENTIFIER: double_z [(null)#15]
(null)    │           └── ELSE BLOCK
(null)    │           └── (null node)
(null)    └── MAIN FUNCTION
(null)        └── BLOCK
(null)            ├── ASSIGN DECL BL_EQUAL
(null)            │   ├── IDENTIFIER: ret_float_var [main#16]
(null)            │   └── FUNCTION CALL: ret_float
(null)            │       └── FLOAT_LITERAL: 3.14
(null)            ├── FUNCTION CALL: printf
(null)            │   ├── STRING_LITERAL: "From ret_float_var, Value : %.2f\n"
(null)            │   └── IDENTIFIER: ret_float_var [main#16]
(null)            ├── FUNCTION CALL: printf
(null)            │   └── STRING_LITERAL: "\n"
(null)            ├── ASSIGN DECL BL_EQUAL
(null)            │   ├── IDENTIFIER: op_add_float_var [main#16]
(null)            │   └── FUNCTION CALL: operator_add_float
(null)            │       ├── FLOAT_LITERAL: 6.90
(null)            │       └── FLOAT_LITERAL: 6.90
(null)            ├── FUNCTION CALL: printf
(null)            │   ├── STRING_LITERAL: "From operator_add_float, Value : %.2f\n"
(null)            │   └── IDENTIFIER: op_add_float_var [main#16]
(null)            ├── FUNCTION CALL: printf
(null)            │   └── STRING_LITERAL: "\n"
(null)            ├── ASSIGN DECL BL_EQUAL
(null)            │   ├── IDENTIFIER: op_mult_div_var [main#16]
(null)            │   └── FUNCTION CALL: op_mult_div_float
(null)            │       ├── FLOAT_LITERAL: 10.00
(null)            │       └── FLOAT_LITERAL: 2.50
(null)            ├── FUNCTION CALL: printf
(null)            │   ├── STRING_LITERAL: "From op_mult_div_float, Value : %.2f\n"
(null)            │   └── IDENTIFIER: op_mult_div_var [main#16]
(null)            ├── FUNCTION CALL: printf
(null)            │   └── STRING_LITERAL: "\n"
(null)            ├── FUNCTION CALL: comparison_float
(null)            │   ├── FLOAT_LITERAL: 10.00
(null)            │   └── FLOAT_LITERAL: 2.50
(null)            ├── FUNCTION CALL: printf
(null)            │   └── STRING_LITERAL: "\n"
(null)            ├── ASSIGN DECL BL_EQUAL
(null)            │   ├── IDENTIFIER: type_mix_var [main#16]
(null)            │   └── FUNCTION CALL: type_mixing
(null)            │       ├── INT_LITERAL: 10
(null)            │       └── FLOAT_LITERAL: 2.50
(null)            ├── FUNCTION CALL: printf
(null)            │   ├── STRING_LITERAL: "From type_mixing, Value : %.2f\n"
(null)            │   └── IDENTIFIER: type_mix_var [main#16]
(null)            ├── FUNCTION CALL: printf
(null)            │   └── STRING_LITERAL: "\n"
(null)            ├── ASSIGN DECL BL_EQUAL
(null)            │   ├── IDENTIFIER: pre_inc_var [main#16]
(null)            │   └── FUNCTION CALL: pre_inc_float
(null)            │       └── FLOAT_LITERAL: 3.23
(null)            ├── FUNCTION CALL: printf
(null)            │   ├── STRING_LITERAL: "From pre_inc_float, Value : %.2f\n"
(null)            │   └── IDENTIFIER: pre_inc_var [main#16]
(null)            ├── FUNCTION CALL: printf
(null)            │   └── STRING_LITERAL: "\n"
(null)            ├── FUNCTION CALL: loop_float
(null)            ├── FUNCTION CALL: float_control_flow
(null)            └── FUNCTION CALL: printf
(null)                └── STRING_LITERAL: "\n"

