[Extern] extern printf (extern) (0)
[Function start] function star_de begin:
[Declaration] t0 (str) (1) = *  (str) (1)
[Argument] arg t0 (str) (1)
[Declaration] t1 (int) (1) = 0 (int) (1)
[Function call] t1 (int) (1) = call printf (extern) (1), 1
[Function end] function end
[Function start] function int_num_de begin:
[Parameter] param a (idt) (2)
[Declaration] t2 (str) (2) = %d  (str) (2)
[Argument] arg t2 (str) (2)
[Declaration] t3 (idt) (2) = a (idt) (2)
[Argument] arg t3 (idt) (2)
[Declaration] t4 (int) (2) = 0 (int) (2)
[Function call] t4 (int) (2) = call printf (extern) (2), 2
[Function end] function end
[Function start] function r_trig_stars begin:
[Parameter] param a (idt) (3)
[Declaration] i (int) (3) = 1 (int) (3)

[Label] L0:
[Declaration] t5 (bool) (3) = 0 (int) (3)
[Declaration] t6 (int) (3) = 0 (int) (3)
[Assignment] t6 (int) (3) = i (int) (3)
[Declaration] t7 (idt) (3) = 0 (int) (3)
[Assignment] t7 (idt) (3) = a (idt) (3)
[Binary Op] t5 (bool) (3) = t6 (int) (3) <= t7 (idt) (3) 
[Conditional Jump] if t5 (bool) (3) != 0 (int) (3) goto L1
[Jump] goto L2

[Label] L1:
[Declaration] j (int) (4) = 1 (int) (4)

[Label] L3:
[Declaration] t8 (bool) (4) = 0 (int) (4)
[Declaration] t9 (int) (4) = 0 (int) (4)
[Assignment] t9 (int) (4) = j (int) (4)
[Declaration] t10 (int) (4) = 0 (int) (4)
[Assignment] t10 (int) (4) = i (int) (4)
[Binary Op] t8 (bool) (4) = t9 (int) (4) <= t10 (int) (4) 
[Conditional Jump] if t8 (bool) (4) != 0 (int) (4) goto L4
[Jump] goto L5

[Label] L4:
[Declaration] t11 (int) (5) = 0 (int) (5)
[Function call] t11 (int) (5) = call star_de (idt) (5), 0
[Declaration] t12 (int) (5) = 0 (int) (5)
[Unary op] t12 (int) (5) = ++j (int) (5) 
[Assignment] j (int) (5) = t12 (int) (5)
[Jump] goto L3

[Label] L5:
[Assignment] j (int) (4) = 1 (int) (4)
[Declaration] t13 (str) (4) = \n (str) (4)
[Argument] arg t13 (str) (4)
[Declaration] t14 (int) (4) = 0 (int) (4)
[Function call] t14 (int) (4) = call printf (extern) (4), 1
[Declaration] t15 (int) (4) = 0 (int) (4)
[Unary op] t15 (int) (4) = ++i (int) (4) 
[Assignment] i (int) (4) = t15 (int) (4)
[Jump] goto L0

[Label] L2:
[Function end] function end
[Function start] function inv_trig_stars begin:
[Parameter] param a (idt) (6)
[Declaration] i (idt) (6) = a (idt) (6)

[Label] L6:
[Declaration] t16 (bool) (6) = 0 (int) (6)
[Declaration] t17 (idt) (6) = 0 (int) (6)
[Assignment] t17 (idt) (6) = i (idt) (6)
[Declaration] t18 (int) (6) = 0 (int) (6)
[Assignment] t18 (int) (6) = 1 (int) (6)
[Binary Op] t16 (bool) (6) = t17 (idt) (6) >= t18 (int) (6) 
[Conditional Jump] if t16 (bool) (6) != 0 (int) (6) goto L7
[Jump] goto L8

[Label] L7:
[Declaration] j (int) (7) = 1 (int) (7)

[Label] L9:
[Declaration] t19 (bool) (7) = 0 (int) (7)
[Declaration] t20 (int) (7) = 0 (int) (7)
[Assignment] t20 (int) (7) = j (int) (7)
[Declaration] t21 (idt) (7) = 0 (int) (7)
[Assignment] t21 (idt) (7) = i (idt) (7)
[Binary Op] t19 (bool) (7) = t20 (int) (7) <= t21 (idt) (7) 
[Conditional Jump] if t19 (bool) (7) != 0 (int) (7) goto L10
[Jump] goto L11

[Label] L10:
[Declaration] t22 (int) (8) = 0 (int) (8)
[Function call] t22 (int) (8) = call star_de (idt) (8), 0
[Declaration] t23 (int) (8) = 0 (int) (8)
[Unary op] t23 (int) (8) = ++j (int) (8) 
[Assignment] j (int) (8) = t23 (int) (8)
[Jump] goto L9

[Label] L11:
[Assignment] j (int) (7) = 1 (int) (7)
[Declaration] t24 (str) (7) = \n (str) (7)
[Argument] arg t24 (str) (7)
[Declaration] t25 (int) (7) = 0 (int) (7)
[Function call] t25 (int) (7) = call printf (extern) (7), 1
[Declaration] t26 (idt) (7) = 0 (int) (7)
[Unary op] t26 (idt) (7) = --i (idt) (7) 
[Assignment] i (idt) (7) = t26 (idt) (7)
[Jump] goto L6

[Label] L8:
[Function end] function end
[Function start] function r_trig_num begin:
[Parameter] param a (idt) (9)
[Declaration] i (int) (9) = 1 (int) (9)

[Label] L12:
[Declaration] t27 (bool) (9) = 0 (int) (9)
[Declaration] t28 (int) (9) = 0 (int) (9)
[Assignment] t28 (int) (9) = i (int) (9)
[Declaration] t29 (idt) (9) = 0 (int) (9)
[Assignment] t29 (idt) (9) = a (idt) (9)
[Binary Op] t27 (bool) (9) = t28 (int) (9) <= t29 (idt) (9) 
[Conditional Jump] if t27 (bool) (9) != 0 (int) (9) goto L13
[Jump] goto L14

[Label] L13:
[Declaration] j (int) (10) = 1 (int) (10)

[Label] L15:
[Declaration] t30 (bool) (10) = 0 (int) (10)
[Declaration] t31 (int) (10) = 0 (int) (10)
[Assignment] t31 (int) (10) = j (int) (10)
[Declaration] t32 (int) (10) = 0 (int) (10)
[Assignment] t32 (int) (10) = i (int) (10)
[Binary Op] t30 (bool) (10) = t31 (int) (10) <= t32 (int) (10) 
[Conditional Jump] if t30 (bool) (10) != 0 (int) (10) goto L16
[Jump] goto L17

[Label] L16:
[Declaration] t33 (int) (11) = j (int) (11)
[Argument] arg t33 (int) (11)
[Declaration] t34 (int) (11) = 0 (int) (11)
[Function call] t34 (int) (11) = call int_num_de (idt) (11), 1
[Declaration] t35 (int) (11) = 0 (int) (11)
[Unary op] t35 (int) (11) = ++j (int) (11) 
[Assignment] j (int) (11) = t35 (int) (11)
[Jump] goto L15

[Label] L17:
[Assignment] j (int) (10) = 1 (int) (10)
[Declaration] t36 (str) (10) = \n (str) (10)
[Argument] arg t36 (str) (10)
[Declaration] t37 (int) (10) = 0 (int) (10)
[Function call] t37 (int) (10) = call printf (extern) (10), 1
[Declaration] t38 (int) (10) = 0 (int) (10)
[Unary op] t38 (int) (10) = ++i (int) (10) 
[Assignment] i (int) (10) = t38 (int) (10)
[Jump] goto L12

[Label] L14:
[Function end] function end
[Function start] function r_trig_aligned begin:
[Parameter] param a (idt) (12)
[Declaration] i (int) (12) = 1 (int) (12)

[Label] L18:
[Declaration] t39 (bool) (12) = 0 (int) (12)
[Declaration] t40 (int) (12) = 0 (int) (12)
[Assignment] t40 (int) (12) = i (int) (12)
[Declaration] t41 (idt) (12) = 0 (int) (12)
[Assignment] t41 (idt) (12) = a (idt) (12)
[Binary Op] t39 (bool) (12) = t40 (int) (12) <= t41 (idt) (12) 
[Conditional Jump] if t39 (bool) (12) != 0 (int) (12) goto L19
[Jump] goto L20

[Label] L19:
[Declaration] j (idt) (13) = a (idt) (13)

[Label] L21:
[Declaration] t42 (bool) (13) = 0 (int) (13)
[Declaration] t43 (idt) (13) = 0 (int) (13)
[Assignment] t43 (idt) (13) = j (idt) (13)
[Declaration] t44 (int) (13) = 0 (int) (13)
[Assignment] t44 (int) (13) = i (int) (13)
[Binary Op] t42 (bool) (13) = t43 (idt) (13) > t44 (int) (13) 
[Conditional Jump] if t42 (bool) (13) != 0 (int) (13) goto L22
[Jump] goto L23

[Label] L22:
[Declaration] t45 (str) (14) =   (str) (14)
[Argument] arg t45 (str) (14)
[Declaration] t46 (int) (14) = 0 (int) (14)
[Function call] t46 (int) (14) = call printf (extern) (14), 1
[Declaration] t47 (idt) (14) = 0 (int) (14)
[Unary op] t47 (idt) (14) = --j (idt) (14) 
[Assignment] j (idt) (14) = t47 (idt) (14)
[Jump] goto L21

[Label] L23:
[Declaration] k (int) (13) = 1 (int) (13)

[Label] L24:
[Declaration] t48 (bool) (13) = 0 (int) (13)
[Declaration] t49 (int) (13) = 0 (int) (13)
[Assignment] t49 (int) (13) = k (int) (13)
[Declaration] t50 (int) (13) = 0 (int) (13)
[Assignment] t50 (int) (13) = i (int) (13)
[Binary Op] t48 (bool) (13) = t49 (int) (13) <= t50 (int) (13) 
[Conditional Jump] if t48 (bool) (13) != 0 (int) (13) goto L25
[Jump] goto L26

[Label] L25:
[Declaration] t51 (str) (15) = * (str) (15)
[Argument] arg t51 (str) (15)
[Declaration] t52 (int) (15) = 0 (int) (15)
[Function call] t52 (int) (15) = call printf (extern) (15), 1
[Declaration] t53 (int) (15) = 0 (int) (15)
[Unary op] t53 (int) (15) = ++k (int) (15) 
[Assignment] k (int) (15) = t53 (int) (15)
[Jump] goto L24

[Label] L26:
[Assignment] j (idt) (13) = a (idt) (13)
[Assignment] k (int) (13) = 1 (int) (13)
[Declaration] t54 (str) (13) = \n (str) (13)
[Argument] arg t54 (str) (13)
[Declaration] t55 (int) (13) = 0 (int) (13)
[Function call] t55 (int) (13) = call printf (extern) (13), 1
[Declaration] t56 (int) (13) = 0 (int) (13)
[Unary op] t56 (int) (13) = ++i (int) (13) 
[Assignment] i (int) (13) = t56 (int) (13)
[Jump] goto L18

[Label] L20:
[Function end] function end
[Function start] function floyd_trig begin:
[Parameter] param a (idt) (16)
[Declaration] i (int) (16) = 1 (int) (16)
[Declaration] count (int) (16) = 1 (int) (16)

[Label] L27:
[Declaration] t57 (bool) (16) = 0 (int) (16)
[Declaration] t58 (int) (16) = 0 (int) (16)
[Assignment] t58 (int) (16) = i (int) (16)
[Declaration] t59 (idt) (16) = 0 (int) (16)
[Assignment] t59 (idt) (16) = a (idt) (16)
[Binary Op] t57 (bool) (16) = t58 (int) (16) <= t59 (idt) (16) 
[Conditional Jump] if t57 (bool) (16) != 0 (int) (16) goto L28
[Jump] goto L29

[Label] L28:
[Declaration] j (int) (17) = 1 (int) (17)

[Label] L30:
[Declaration] t60 (bool) (17) = 0 (int) (17)
[Declaration] t61 (int) (17) = 0 (int) (17)
[Assignment] t61 (int) (17) = j (int) (17)
[Declaration] t62 (int) (17) = 0 (int) (17)
[Assignment] t62 (int) (17) = i (int) (17)
[Binary Op] t60 (bool) (17) = t61 (int) (17) <= t62 (int) (17) 
[Conditional Jump] if t60 (bool) (17) != 0 (int) (17) goto L31
[Jump] goto L32

[Label] L31:
[Declaration] t63 (int) (18) = count (int) (18)
[Argument] arg t63 (int) (18)
[Declaration] t64 (int) (18) = 0 (int) (18)
[Function call] t64 (int) (18) = call int_num_de (idt) (18), 1
[Declaration] t65 (int) (18) = 0 (int) (18)
[Unary op] t65 (int) (18) = ++count (int) (18) 
[Assignment] count (int) (18) = t65 (int) (18)
[Declaration] t66 (int) (18) = 0 (int) (18)
[Unary op] t66 (int) (18) = ++j (int) (18) 
[Assignment] j (int) (18) = t66 (int) (18)
[Jump] goto L30

[Label] L32:
[Assignment] j (int) (17) = 1 (int) (17)
[Declaration] t67 (str) (17) = \n (str) (17)
[Argument] arg t67 (str) (17)
[Declaration] t68 (int) (17) = 0 (int) (17)
[Function call] t68 (int) (17) = call printf (extern) (17), 1
[Declaration] t69 (int) (17) = 0 (int) (17)
[Unary op] t69 (int) (17) = ++i (int) (17) 
[Assignment] i (int) (17) = t69 (int) (17)
[Jump] goto L27

[Label] L29:
[Function end] function end
[Function start] function bin_trig begin:
[Parameter] param a (idt) (19)
[Declaration] i (int) (19) = 1 (int) (19)

[Label] L33:
[Declaration] t70 (bool) (19) = 0 (int) (19)
[Declaration] t71 (int) (19) = 0 (int) (19)
[Assignment] t71 (int) (19) = i (int) (19)
[Declaration] t72 (idt) (19) = 0 (int) (19)
[Assignment] t72 (idt) (19) = a (idt) (19)
[Binary Op] t70 (bool) (19) = t71 (int) (19) <= t72 (idt) (19) 
[Conditional Jump] if t70 (bool) (19) != 0 (int) (19) goto L34
[Jump] goto L35

[Label] L34:
[Declaration] j (int) (20) = 1 (int) (20)

[Label] L36:
[Declaration] t73 (bool) (20) = 0 (int) (20)
[Declaration] t74 (int) (20) = 0 (int) (20)
[Assignment] t74 (int) (20) = j (int) (20)
[Declaration] t75 (int) (20) = 0 (int) (20)
[Assignment] t75 (int) (20) = i (int) (20)
[Binary Op] t73 (bool) (20) = t74 (int) (20) <= t75 (int) (20) 
[Conditional Jump] if t73 (bool) (20) != 0 (int) (20) goto L37
[Jump] goto L38

[Label] L37:
[Declaration] t76 (str) (21) = %d  (str) (21)
[Argument] arg t76 (str) (21)
[Declaration] t78 (int) (21) = 0 (int) (21)
[Declaration] t79 (int) (21) = 0 (int) (21)
[Assignment] t79 (int) (21) = i (int) (21)
[Declaration] t80 (int) (21) = 0 (int) (21)
[Assignment] t80 (int) (21) = j (int) (21)
[Binary Op] t78 (int) (21) = t79 (int) (21) + t80 (int) (21) 
[Declaration] t81 (int) (21) = 0 (int) (21)
[Declaration] t82 (int) (21) = 0 (int) (21)
[Assignment] t82 (int) (21) = t78 (int) (21)
[Declaration] t83 (int) (21) = 0 (int) (21)
[Assignment] t83 (int) (21) = 2 (int) (21)
[Binary Op] t81 (int) (21) = t82 (int) (21) % t83 (int) (21) 
[Declaration] t77 (int) (21) = t81 (int) (21)
[Argument] arg t77 (int) (21)
[Declaration] t84 (int) (21) = 0 (int) (21)
[Function call] t84 (int) (21) = call printf (extern) (21), 2
[Declaration] t85 (int) (21) = 0 (int) (21)
[Unary op] t85 (int) (21) = ++j (int) (21) 
[Assignment] j (int) (21) = t85 (int) (21)
[Jump] goto L36

[Label] L38:
[Assignment] j (int) (20) = 1 (int) (20)
[Declaration] t86 (str) (20) = \n (str) (20)
[Argument] arg t86 (str) (20)
[Declaration] t87 (int) (20) = 0 (int) (20)
[Function call] t87 (int) (20) = call printf (extern) (20), 1
[Declaration] t88 (int) (20) = 0 (int) (20)
[Unary op] t88 (int) (20) = ++i (int) (20) 
[Assignment] i (int) (20) = t88 (int) (20)
[Jump] goto L33

[Label] L35:
[Function end] function end
[Function start] function inv_num_trig begin:
[Parameter] param a (idt) (22)
[Declaration] i (idt) (22) = a (idt) (22)

[Label] L39:
[Declaration] t89 (bool) (22) = 0 (int) (22)
[Declaration] t90 (idt) (22) = 0 (int) (22)
[Assignment] t90 (idt) (22) = i (idt) (22)
[Declaration] t91 (int) (22) = 0 (int) (22)
[Assignment] t91 (int) (22) = 1 (int) (22)
[Binary Op] t89 (bool) (22) = t90 (idt) (22) >= t91 (int) (22) 
[Conditional Jump] if t89 (bool) (22) != 0 (int) (22) goto L40
[Jump] goto L41

[Label] L40:
[Declaration] j (int) (23) = 1 (int) (23)

[Label] L42:
[Declaration] t92 (bool) (23) = 0 (int) (23)
[Declaration] t93 (int) (23) = 0 (int) (23)
[Assignment] t93 (int) (23) = j (int) (23)
[Declaration] t94 (idt) (23) = 0 (int) (23)
[Assignment] t94 (idt) (23) = i (idt) (23)
[Binary Op] t92 (bool) (23) = t93 (int) (23) <= t94 (idt) (23) 
[Conditional Jump] if t92 (bool) (23) != 0 (int) (23) goto L43
[Jump] goto L44

[Label] L43:
[Declaration] t95 (int) (24) = j (int) (24)
[Argument] arg t95 (int) (24)
[Declaration] t96 (int) (24) = 0 (int) (24)
[Function call] t96 (int) (24) = call int_num_de (idt) (24), 1
[Declaration] t97 (int) (24) = 0 (int) (24)
[Unary op] t97 (int) (24) = ++j (int) (24) 
[Assignment] j (int) (24) = t97 (int) (24)
[Jump] goto L42

[Label] L44:
[Assignment] j (int) (23) = 1 (int) (23)
[Declaration] t98 (str) (23) = \n (str) (23)
[Argument] arg t98 (str) (23)
[Declaration] t99 (int) (23) = 0 (int) (23)
[Function call] t99 (int) (23) = call printf (extern) (23), 1
[Declaration] t100 (idt) (23) = 0 (int) (23)
[Unary op] t100 (idt) (23) = --i (idt) (23) 
[Assignment] i (idt) (23) = t100 (idt) (23)
[Jump] goto L39

[Label] L41:
[Function end] function end
[Function start] function pyramid begin:
[Parameter] param a (idt) (25)
[Declaration] i (int) (25) = 1 (int) (25)

[Label] L45:
[Declaration] t101 (bool) (25) = 0 (int) (25)
[Declaration] t102 (int) (25) = 0 (int) (25)
[Assignment] t102 (int) (25) = i (int) (25)
[Declaration] t103 (idt) (25) = 0 (int) (25)
[Assignment] t103 (idt) (25) = a (idt) (25)
[Binary Op] t101 (bool) (25) = t102 (int) (25) <= t103 (idt) (25) 
[Conditional Jump] if t101 (bool) (25) != 0 (int) (25) goto L46
[Jump] goto L47

[Label] L46:
[Declaration] j (idt) (26) = a (idt) (26)

[Label] L48:
[Declaration] t104 (bool) (26) = 0 (int) (26)
[Declaration] t105 (idt) (26) = 0 (int) (26)
[Assignment] t105 (idt) (26) = j (idt) (26)
[Declaration] t106 (int) (26) = 0 (int) (26)
[Assignment] t106 (int) (26) = i (int) (26)
[Binary Op] t104 (bool) (26) = t105 (idt) (26) > t106 (int) (26) 
[Conditional Jump] if t104 (bool) (26) != 0 (int) (26) goto L49
[Jump] goto L50

[Label] L49:
[Declaration] t107 (str) (27) =   (str) (27)
[Argument] arg t107 (str) (27)
[Declaration] t108 (int) (27) = 0 (int) (27)
[Function call] t108 (int) (27) = call printf (extern) (27), 1
[Declaration] t109 (idt) (27) = 0 (int) (27)
[Unary op] t109 (idt) (27) = --j (idt) (27) 
[Assignment] j (idt) (27) = t109 (idt) (27)
[Jump] goto L48

[Label] L50:
[Declaration] k (int) (26) = 1 (int) (26)

[Label] L51:
[Declaration] t110 (int) (26) = 0 (int) (26)
[Declaration] t111 (int) (26) = 0 (int) (26)
[Assignment] t111 (int) (26) = 2 (int) (26)
[Declaration] t112 (int) (26) = 0 (int) (26)
[Assignment] t112 (int) (26) = i (int) (26)
[Binary Op] t110 (int) (26) = t111 (int) (26) * t112 (int) (26) 
[Declaration] t113 (int) (26) = 0 (int) (26)
[Declaration] t114 (int) (26) = 0 (int) (26)
[Assignment] t114 (int) (26) = t110 (int) (26)
[Declaration] t115 (int) (26) = 0 (int) (26)
[Assignment] t115 (int) (26) = 1 (int) (26)
[Binary Op] t113 (int) (26) = t114 (int) (26) - t115 (int) (26) 
[Declaration] t116 (bool) (26) = 0 (int) (26)
[Declaration] t117 (int) (26) = 0 (int) (26)
[Assignment] t117 (int) (26) = k (int) (26)
[Declaration] t118 (int) (26) = 0 (int) (26)
[Assignment] t118 (int) (26) = t113 (int) (26)
[Binary Op] t116 (bool) (26) = t117 (int) (26) <= t118 (int) (26) 
[Conditional Jump] if t116 (bool) (26) != 0 (int) (26) goto L52
[Jump] goto L53

[Label] L52:
[Declaration] t119 (str) (28) = * (str) (28)
[Argument] arg t119 (str) (28)
[Declaration] t120 (int) (28) = 0 (int) (28)
[Function call] t120 (int) (28) = call printf (extern) (28), 1
[Declaration] t121 (int) (28) = 0 (int) (28)
[Unary op] t121 (int) (28) = ++k (int) (28) 
[Assignment] k (int) (28) = t121 (int) (28)
[Jump] goto L51

[Label] L53:
[Assignment] k (int) (26) = 1 (int) (26)
[Assignment] j (idt) (26) = a (idt) (26)
[Declaration] t122 (str) (26) = \n (str) (26)
[Argument] arg t122 (str) (26)
[Declaration] t123 (int) (26) = 0 (int) (26)
[Function call] t123 (int) (26) = call printf (extern) (26), 1
[Declaration] t124 (int) (26) = 0 (int) (26)
[Unary op] t124 (int) (26) = ++i (int) (26) 
[Assignment] i (int) (26) = t124 (int) (26)
[Jump] goto L45

[Label] L47:
[Function end] function end
[Function start] function pascal_trig begin:
[Parameter] param a (idt) (29)
[Declaration] i (int) (29) = 0 (int) (29)

[Label] L54:
[Declaration] t125 (bool) (29) = 0 (int) (29)
[Declaration] t126 (int) (29) = 0 (int) (29)
[Assignment] t126 (int) (29) = i (int) (29)
[Declaration] t127 (idt) (29) = 0 (int) (29)
[Assignment] t127 (idt) (29) = a (idt) (29)
[Binary Op] t125 (bool) (29) = t126 (int) (29) < t127 (idt) (29) 
[Conditional Jump] if t125 (bool) (29) != 0 (int) (29) goto L55
[Jump] goto L56

[Label] L55:
[Declaration] coef (int) (30) = 1 (int) (30)
[Declaration] space (int) (30) = 1 (int) (30)

[Label] L57:
[Declaration] t-128 (int) (30) = 0 (int) (30)
[Declaration] t-127 (idt) (30) = 0 (int) (30)
[Assignment] t-127 (idt) (30) = a (idt) (30)
[Declaration] t-126 (int) (30) = 0 (int) (30)
[Assignment] t-126 (int) (30) = i (int) (30)
[Binary Op] t-128 (int) (30) = t-127 (idt) (30) - t-126 (int) (30) 
[Declaration] t-125 (bool) (30) = 0 (int) (30)
[Declaration] t-124 (int) (30) = 0 (int) (30)
[Assignment] t-124 (int) (30) = space (int) (30)
[Declaration] t-123 (int) (30) = 0 (int) (30)
[Assignment] t-123 (int) (30) = t-128 (int) (30)
[Binary Op] t-125 (bool) (30) = t-124 (int) (30) <= t-123 (int) (30) 
[Conditional Jump] if t-125 (bool) (30) != 0 (int) (30) goto L58
[Jump] goto L59

[Label] L58:
[Declaration] t-122 (str) (31) =    (str) (31)
[Argument] arg t-122 (str) (31)
[Declaration] t-121 (int) (31) = 0 (int) (31)
[Function call] t-121 (int) (31) = call printf (extern) (31), 1
[Declaration] t-120 (int) (31) = 0 (int) (31)
[Unary op] t-120 (int) (31) = ++space (int) (31) 
[Assignment] space (int) (31) = t-120 (int) (31)
[Jump] goto L57

[Label] L59:
[Declaration] j (int) (30) = 0 (int) (30)

[Label] L60:
[Declaration] t-119 (bool) (30) = 0 (int) (30)
[Declaration] t-118 (int) (30) = 0 (int) (30)
[Assignment] t-118 (int) (30) = j (int) (30)
[Declaration] t-117 (int) (30) = 0 (int) (30)
[Assignment] t-117 (int) (30) = i (int) (30)
[Binary Op] t-119 (bool) (30) = t-118 (int) (30) <= t-117 (int) (30) 
[Conditional Jump] if t-119 (bool) (30) != 0 (int) (30) goto L61
[Jump] goto L62

[Label] L61:
[Declaration] t-116 (str) (32) = %4d (str) (32)
[Argument] arg t-116 (str) (32)
[Declaration] t-115 (int) (32) = coef (int) (32)
[Argument] arg t-115 (int) (32)
[Declaration] t-114 (int) (32) = 0 (int) (32)
[Function call] t-114 (int) (32) = call printf (extern) (32), 2
[Declaration] t-113 (int) (32) = 0 (int) (32)
[Declaration] t-112 (int) (32) = 0 (int) (32)
[Assignment] t-112 (int) (32) = i (int) (32)
[Declaration] t-111 (int) (32) = 0 (int) (32)
[Assignment] t-111 (int) (32) = j (int) (32)
[Binary Op] t-113 (int) (32) = t-112 (int) (32) - t-111 (int) (32) 
[Declaration] t-110 (int) (32) = 0 (int) (32)
[Declaration] t-109 (int) (32) = 0 (int) (32)
[Assignment] t-109 (int) (32) = coef (int) (32)
[Declaration] t-108 (int) (32) = 0 (int) (32)
[Assignment] t-108 (int) (32) = t-113 (int) (32)
[Binary Op] t-110 (int) (32) = t-109 (int) (32) * t-108 (int) (32) 
[Declaration] t-107 (int) (32) = 0 (int) (32)
[Declaration] t-106 (int) (32) = 0 (int) (32)
[Assignment] t-106 (int) (32) = j (int) (32)
[Declaration] t-105 (int) (32) = 0 (int) (32)
[Assignment] t-105 (int) (32) = 1 (int) (32)
[Binary Op] t-107 (int) (32) = t-106 (int) (32) + t-105 (int) (32) 
[Declaration] t-104 (int) (32) = 0 (int) (32)
[Declaration] t-103 (int) (32) = 0 (int) (32)
[Assignment] t-103 (int) (32) = t-110 (int) (32)
[Declaration] t-102 (int) (32) = 0 (int) (32)
[Assignment] t-102 (int) (32) = t-107 (int) (32)
[Binary Op] t-104 (int) (32) = t-103 (int) (32) / t-102 (int) (32) 
[Assignment] coef (int) (32) = t-104 (int) (32)
[Declaration] t-101 (int) (32) = 0 (int) (32)
[Unary op] t-101 (int) (32) = ++j (int) (32) 
[Assignment] j (int) (32) = t-101 (int) (32)
[Jump] goto L60

[Label] L62:
[Assignment] j (int) (30) = 0 (int) (30)
[Assignment] space (int) (30) = 1 (int) (30)
[Assignment] coef (int) (30) = 1 (int) (30)
[Declaration] t-100 (str) (30) = \n (str) (30)
[Argument] arg t-100 (str) (30)
[Declaration] t-99 (int) (30) = 0 (int) (30)
[Function call] t-99 (int) (30) = call printf (extern) (30), 1
[Declaration] t-98 (int) (30) = 0 (int) (30)
[Unary op] t-98 (int) (30) = ++i (int) (30) 
[Assignment] i (int) (30) = t-98 (int) (30)
[Jump] goto L54

[Label] L56:
[Function end] function end
[Function start] function char_pattern begin:
[Parameter] param a (idt) (33)
[Declaration] ch (char) (33) = A (char) (33)
[Declaration] i (int) (33) = 1 (int) (33)

[Label] L63:
[Declaration] t-97 (bool) (33) = 0 (int) (33)
[Declaration] t-96 (int) (33) = 0 (int) (33)
[Assignment] t-96 (int) (33) = i (int) (33)
[Declaration] t-95 (idt) (33) = 0 (int) (33)
[Assignment] t-95 (idt) (33) = a (idt) (33)
[Binary Op] t-97 (bool) (33) = t-96 (int) (33) <= t-95 (idt) (33) 
[Conditional Jump] if t-97 (bool) (33) != 0 (int) (33) goto L64
[Jump] goto L65

[Label] L64:
[Declaration] j (int) (34) = 1 (int) (34)

[Label] L66:
[Declaration] t-94 (bool) (34) = 0 (int) (34)
[Declaration] t-93 (int) (34) = 0 (int) (34)
[Assignment] t-93 (int) (34) = j (int) (34)
[Declaration] t-92 (int) (34) = 0 (int) (34)
[Assignment] t-92 (int) (34) = i (int) (34)
[Binary Op] t-94 (bool) (34) = t-93 (int) (34) <= t-92 (int) (34) 
[Conditional Jump] if t-94 (bool) (34) != 0 (int) (34) goto L67
[Jump] goto L68

[Label] L67:
[Declaration] t-91 (str) (35) = %c  (str) (35)
[Argument] arg t-91 (str) (35)
[Declaration] t-90 (char) (35) = ch (char) (35)
[Argument] arg t-90 (char) (35)
[Declaration] t-89 (int) (35) = 0 (int) (35)
[Function call] t-89 (int) (35) = call printf (extern) (35), 2
[Declaration] t-88 (char) (35) = 0 (int) (35)
[Unary op] t-88 (char) (35) = ++ch (char) (35) 
[Assignment] ch (char) (35) = t-88 (char) (35)
[Declaration] t-87 (int) (35) = 0 (int) (35)
[Unary op] t-87 (int) (35) = ++j (int) (35) 
[Assignment] j (int) (35) = t-87 (int) (35)
[Jump] goto L66

[Label] L68:
[Assignment] j (int) (34) = 1 (int) (34)
[Declaration] t-86 (str) (34) = \n (str) (34)
[Argument] arg t-86 (str) (34)
[Declaration] t-85 (int) (34) = 0 (int) (34)
[Function call] t-85 (int) (34) = call printf (extern) (34), 1
[Declaration] t-84 (int) (34) = 0 (int) (34)
[Unary op] t-84 (int) (34) = ++i (int) (34) 
[Assignment] i (int) (34) = t-84 (int) (34)
[Jump] goto L63

[Label] L65:
[Function end] function end
[Function start] function print_all_patterns begin:
[Parameter] param a (idt) (36)
[Declaration] t-83 (idt) (36) = a (idt) (36)
[Argument] arg t-83 (idt) (36)
[Declaration] t-82 (int) (36) = 0 (int) (36)
[Function call] t-82 (int) (36) = call r_trig_stars (idt) (36), 1
[Declaration] t-81 (str) (36) = \n (str) (36)
[Argument] arg t-81 (str) (36)
[Declaration] t-80 (int) (36) = 0 (int) (36)
[Function call] t-80 (int) (36) = call printf (extern) (36), 1
[Declaration] t-79 (idt) (36) = a (idt) (36)
[Argument] arg t-79 (idt) (36)
[Declaration] t-78 (int) (36) = 0 (int) (36)
[Function call] t-78 (int) (36) = call inv_trig_stars (idt) (36), 1
[Declaration] t-77 (str) (36) = \n (str) (36)
[Argument] arg t-77 (str) (36)
[Declaration] t-76 (int) (36) = 0 (int) (36)
[Function call] t-76 (int) (36) = call printf (extern) (36), 1
[Declaration] t-75 (idt) (36) = a (idt) (36)
[Argument] arg t-75 (idt) (36)
[Declaration] t-74 (int) (36) = 0 (int) (36)
[Function call] t-74 (int) (36) = call r_trig_num (idt) (36), 1
[Declaration] t-73 (str) (36) = \n (str) (36)
[Argument] arg t-73 (str) (36)
[Declaration] t-72 (int) (36) = 0 (int) (36)
[Function call] t-72 (int) (36) = call printf (extern) (36), 1
[Declaration] t-71 (idt) (36) = a (idt) (36)
[Argument] arg t-71 (idt) (36)
[Declaration] t-70 (int) (36) = 0 (int) (36)
[Function call] t-70 (int) (36) = call r_trig_aligned (idt) (36), 1
[Declaration] t-69 (str) (36) = \n (str) (36)
[Argument] arg t-69 (str) (36)
[Declaration] t-68 (int) (36) = 0 (int) (36)
[Function call] t-68 (int) (36) = call printf (extern) (36), 1
[Declaration] t-67 (idt) (36) = a (idt) (36)
[Argument] arg t-67 (idt) (36)
[Declaration] t-66 (int) (36) = 0 (int) (36)
[Function call] t-66 (int) (36) = call floyd_trig (idt) (36), 1
[Declaration] t-65 (str) (36) = \n (str) (36)
[Argument] arg t-65 (str) (36)
[Declaration] t-64 (int) (36) = 0 (int) (36)
[Function call] t-64 (int) (36) = call printf (extern) (36), 1
[Declaration] t-63 (idt) (36) = a (idt) (36)
[Argument] arg t-63 (idt) (36)
[Declaration] t-62 (int) (36) = 0 (int) (36)
[Function call] t-62 (int) (36) = call bin_trig (idt) (36), 1
[Declaration] t-61 (str) (36) = \n (str) (36)
[Argument] arg t-61 (str) (36)
[Declaration] t-60 (int) (36) = 0 (int) (36)
[Function call] t-60 (int) (36) = call printf (extern) (36), 1
[Declaration] t-59 (idt) (36) = a (idt) (36)
[Argument] arg t-59 (idt) (36)
[Declaration] t-58 (int) (36) = 0 (int) (36)
[Function call] t-58 (int) (36) = call inv_num_trig (idt) (36), 1
[Declaration] t-57 (str) (36) = \n (str) (36)
[Argument] arg t-57 (str) (36)
[Declaration] t-56 (int) (36) = 0 (int) (36)
[Function call] t-56 (int) (36) = call printf (extern) (36), 1
[Declaration] t-55 (idt) (36) = a (idt) (36)
[Argument] arg t-55 (idt) (36)
[Declaration] t-54 (int) (36) = 0 (int) (36)
[Function call] t-54 (int) (36) = call pyramid (idt) (36), 1
[Declaration] t-53 (str) (36) = \n (str) (36)
[Argument] arg t-53 (str) (36)
[Declaration] t-52 (int) (36) = 0 (int) (36)
[Function call] t-52 (int) (36) = call printf (extern) (36), 1
[Declaration] t-51 (idt) (36) = a (idt) (36)
[Argument] arg t-51 (idt) (36)
[Declaration] t-50 (int) (36) = 0 (int) (36)
[Function call] t-50 (int) (36) = call pascal_trig (idt) (36), 1
[Declaration] t-49 (str) (36) = \n (str) (36)
[Argument] arg t-49 (str) (36)
[Declaration] t-48 (int) (36) = 0 (int) (36)
[Function call] t-48 (int) (36) = call printf (extern) (36), 1
[Declaration] t-47 (idt) (36) = a (idt) (36)
[Argument] arg t-47 (idt) (36)
[Declaration] t-46 (int) (36) = 0 (int) (36)
[Function call] t-46 (int) (36) = call char_pattern (idt) (36), 1
[Function end] function end
[Main start] main begin:
[Declaration] t-45 (int) (37) = 10 (int) (37)
[Argument] arg t-45 (int) (37)
[Declaration] t-44 (int) (37) = 0 (int) (37)
[Function call] t-44 (int) (37) = call print_all_patterns (idt) (37), 1
[Main end] main end
