[Extern] extern printf (extern) (0)
[Declaration] x (str) (0) = declared in global (str) (0)
[Function start] function print_global begin:
[Declaration] t0 (str) (1) = From print_global: %s\n (str) (1)
[Argument] arg t0 (str) (1)
[Declaration] t1 (str) (1) = x (str) (1)
[Argument] arg t1 (str) (1)
[Declaration] t2 (int) (1) = 0 (int) (1)
[Function call] t2 (int) (1) = call printf (extern) (1), 2
[Function end] function end
[Function start] function print_infunc begin:
[Declaration] x (str) (2) = declared in function (str) (2)
[Declaration] t3 (str) (2) = From print_infunc: %s\n (str) (2)
[Argument] arg t3 (str) (2)
[Declaration] t4 (str) (2) = x (str) (2)
[Argument] arg t4 (str) (2)
[Declaration] t5 (int) (2) = 0 (int) (2)
[Function call] t5 (int) (2) = call printf (extern) (2), 2
[Function end] function end
[Function start] function print_inblock begin:
[Declaration] x (str) (3) = declared in func scope (str) (3)
[Conditional Jump] if 1 (int) (3) != 0 (int) (3) goto L0
[Jump] goto L1

[Label] L0:
[Declaration] x (str) (4) = declared in block scope (str) (4)
[Declaration] t6 (str) (4) = From print_inblock: %s\n (str) (4)
[Argument] arg t6 (str) (4)
[Declaration] t7 (str) (4) = x (str) (4)
[Argument] arg t7 (str) (4)
[Declaration] t8 (int) (4) = 0 (int) (4)
[Function call] t8 (int) (4) = call printf (extern) (4), 2

[Label] L1:
[Function end] function end
[Function start] function print_access_from_outer_block begin:
[Declaration] x (str) (5) = declard in outer block (str) (5)
[Conditional Jump] if 1 (int) (5) != 0 (int) (5) goto L2
[Jump] goto L3

[Label] L2:
[Declaration] t9 (str) (6) = Frome print_access_from_outer_block: %s\n (str) (6)
[Argument] arg t9 (str) (6)
[Declaration] t10 (str) (6) = x (str) (6)
[Argument] arg t10 (str) (6)
[Declaration] t11 (int) (6) = 0 (int) (6)
[Function call] t11 (int) (6) = call printf (extern) (6), 2

[Label] L3:
[Function end] function end
[Function start] function print_nestblocks begin:
[Declaration] x (str) (7) = block 1 (str) (7)
[Conditional Jump] if 1 (int) (7) != 0 (int) (7) goto L4
[Jump] goto L5

[Label] L4:
[Declaration] x (str) (8) = block 2 (str) (8)
[Conditional Jump] if 1 (int) (8) != 0 (int) (8) goto L6
[Jump] goto L7

[Label] L6:
[Declaration] x (str) (9) = block 3 (str) (9)
[Declaration] t12 (str) (9) = From print_nestblocks, Block 3 : %s\n (str) (9)
[Argument] arg t12 (str) (9)
[Declaration] t13 (str) (9) = x (str) (9)
[Argument] arg t13 (str) (9)
[Declaration] t14 (int) (9) = 0 (int) (9)
[Function call] t14 (int) (9) = call printf (extern) (9), 2

[Label] L7:
[Declaration] t15 (str) (8) = From print_nestblocks, Block 2 : %s\n (str) (8)
[Argument] arg t15 (str) (8)
[Declaration] t16 (str) (8) = x (str) (8)
[Argument] arg t16 (str) (8)
[Declaration] t17 (int) (8) = 0 (int) (8)
[Function call] t17 (int) (8) = call printf (extern) (8), 2

[Label] L5:
[Declaration] t18 (str) (7) = From print_nestblocks, Block 1 : %s\n (str) (7)
[Argument] arg t18 (str) (7)
[Declaration] t19 (str) (7) = x (str) (7)
[Argument] arg t19 (str) (7)
[Declaration] t20 (int) (7) = 0 (int) (7)
[Function call] t20 (int) (7) = call printf (extern) (7), 2
[Function end] function end
[Function start] function print_funcvsblockscope begin:
[Conditional Jump] if 1 (int) (10) != 0 (int) (10) goto L8
[Jump] goto L9

[Label] L8:
[Declaration] x (str) (11) = block scope (str) (11)
[Declaration] t21 (str) (11) = From print_funcvsblockscope, Block scope : %s\n (str) (11)
[Argument] arg t21 (str) (11)
[Declaration] t22 (str) (11) = x (str) (11)
[Argument] arg t22 (str) (11)
[Declaration] t23 (int) (11) = 0 (int) (11)
[Function call] t23 (int) (11) = call printf (extern) (11), 2

[Label] L9:
[Declaration] x (str) (10) = function scope (str) (10)
[Declaration] t24 (str) (10) = From print_funcvsblockscope,Function scope : %s\n (str) (10)
[Argument] arg t24 (str) (10)
[Declaration] t25 (str) (10) = x (str) (10)
[Argument] arg t25 (str) (10)
[Declaration] t26 (int) (10) = 0 (int) (10)
[Function call] t26 (int) (10) = call printf (extern) (10), 2
[Function end] function end
[Function start] function return_localvalue begin:
[Declaration] x (int) (12) = 1 (int) (12)
[Declaration] t27 (int) (12) = 1 (int) (12)
[Return] return t27 (int) (12)
[Function end] function end
[Main start] main begin:
[Declaration] t28 (int) (13) = 0 (int) (13)
[Function call] t28 (int) (13) = call print_global (idt) (13), 0
[Declaration] t29 (int) (13) = 0 (int) (13)
[Function call] t29 (int) (13) = call print_infunc (idt) (13), 0
[Declaration] t30 (int) (13) = 0 (int) (13)
[Function call] t30 (int) (13) = call print_inblock (idt) (13), 0
[Declaration] t31 (int) (13) = 0 (int) (13)
[Function call] t31 (int) (13) = call print_access_from_outer_block (idt) (13), 0
[Declaration] t32 (int) (13) = 0 (int) (13)
[Function call] t32 (int) (13) = call print_nestblocks (idt) (13), 0
[Declaration] t33 (int) (13) = 0 (int) (13)
[Function call] t33 (int) (13) = call print_funcvsblockscope (idt) (13), 0
[Declaration] t34 (int) (13) = 0 (int) (13)
[Function call] t34 (int) (13) = call return_localvalue (idt) (13), 0
[Declaration] x (int) (13) = t34 (int) (13)
[Declaration] t35 (str) (13) = From return_localvalue, Value : %d\n (str) (13)
[Argument] arg t35 (str) (13)
[Declaration] t36 (int) (13) = x (int) (13)
[Argument] arg t36 (int) (13)
[Declaration] t37 (int) (13) = 0 (int) (13)
[Function call] t37 (int) (13) = call printf (extern) (13), 2
[Main end] main end
