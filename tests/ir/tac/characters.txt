[Extern] extern printf (extern) (0)
[Function start] function char_decl begin:
[Declaration] ch (char) (1) = A (char) (1)
[Declaration] t0 (str) (1) = From char_decl, character : %c\n (str) (1)
[Argument] arg t0 (str) (1)
[Declaration] t1 (char) (1) = ch (char) (1)
[Argument] arg t1 (char) (1)
[Declaration] t2 (int) (1) = 0 (int) (1)
[Function call] t2 (int) (1) = call printf (extern) (1), 2
[Function end] function end
[Function start] function char_reassign begin:
[Parameter] param a (idt) (2)
[Assignment] a (char) (2) = B (char) (2)
[Declaration] t3 (char) (2) = a (char) (2)
[Return] return t3 (char) (2)
[Function end] function end
[Function start] function char_arithmetic begin:
[Parameter] param a (idt) (3)
[Declaration] t4 (int) (3) = 0 (int) (3)
[Declaration] t5 (idt) (3) = 0 (int) (3)
[Assignment] t5 (idt) (3) = a (idt) (3)
[Declaration] t6 (int) (3) = 0 (int) (3)
[Assignment] t6 (int) (3) = 1 (int) (3)
[Binary Op] t4 (int) (3) = t5 (idt) (3) + t6 (int) (3) 
[Declaration] b (int) (3) = t4 (int) (3)
[Declaration] t7 (int) (3) = b (int) (3)
[Return] return t7 (int) (3)
[Function end] function end
[Function start] function compare_char begin:
[Parameter] param a (idt) (4)
[Parameter] param b (idt) (4)
[Declaration] t8 (bool) (4) = 0 (int) (4)
[Declaration] t9 (idt) (4) = 0 (int) (4)
[Assignment] t9 (idt) (4) = a (idt) (4)
[Declaration] t10 (idt) (4) = 0 (int) (4)
[Assignment] t10 (idt) (4) = b (idt) (4)
[Binary Op] t8 (bool) (4) = t9 (idt) (4) == t10 (idt) (4) 
[Declaration] t11 (bool) (4) = t8 (bool) (4)
[Return] return t11 (bool) (4)
[Function end] function end
[Function start] function switch_char begin:
[Parameter] param a (idt) (5)
[Declaration] t12 (idt) (5) = a (idt) (5)
[Conditional Jump] if t12 (idt) (5) == A (char) (6) goto L1
[Declaration] t13 (idt) (5) = a (idt) (5)
[Conditional Jump] if t13 (idt) (5) == B (char) (6) goto L2
[Declaration] t14 (idt) (5) = a (idt) (5)
[Conditional Jump] if t14 (idt) (5) == C (char) (6) goto L3
[Jump] goto L4

[Label] L1:
[Declaration] t15 (str) (6) = From switch_char, Value = %c\n (str) (6)
[Argument] arg t15 (str) (6)
[Declaration] t16 (idt) (6) = a (idt) (6)
[Argument] arg t16 (idt) (6)
[Declaration] t17 (int) (6) = 0 (int) (6)
[Function call] t17 (int) (6) = call printf (extern) (6), 2
[Jump] goto L0

[Label] L2:
[Declaration] t18 (str) (6) = From switch_char, Value = %c\n (str) (6)
[Argument] arg t18 (str) (6)
[Declaration] t19 (idt) (6) = a (idt) (6)
[Argument] arg t19 (idt) (6)
[Declaration] t20 (int) (6) = 0 (int) (6)
[Function call] t20 (int) (6) = call printf (extern) (6), 2
[Jump] goto L0

[Label] L3:
[Declaration] t21 (str) (6) = From switch_char, Value = %c\n (str) (6)
[Argument] arg t21 (str) (6)
[Declaration] t22 (idt) (6) = a (idt) (6)
[Argument] arg t22 (idt) (6)
[Declaration] t23 (int) (6) = 0 (int) (6)
[Function call] t23 (int) (6) = call printf (extern) (6), 2
[Jump] goto L0

[Label] L4:

[Label] L0:
[Function end] function end
[Function start] function loop_char begin:
[Parameter] param a (idt) (7)
[Declaration] c (char) (7) = A (char) (7)

[Label] L5:
[Declaration] t24 (bool) (7) = 0 (int) (7)
[Declaration] t25 (char) (7) = 0 (int) (7)
[Assignment] t25 (char) (7) = c (char) (7)
[Declaration] t26 (idt) (7) = 0 (int) (7)
[Assignment] t26 (idt) (7) = a (idt) (7)
[Binary Op] t24 (bool) (7) = t25 (char) (7) < t26 (idt) (7) 
[Conditional Jump] if t24 (bool) (7) != 0 (int) (7) goto L6
[Jump] goto L7

[Label] L6:
[Declaration] t27 (str) (8) = %c  (str) (8)
[Argument] arg t27 (str) (8)
[Declaration] t28 (char) (8) = c (char) (8)
[Argument] arg t28 (char) (8)
[Declaration] t29 (int) (8) = 0 (int) (8)
[Function call] t29 (int) (8) = call printf (extern) (8), 2
[Declaration] t30 (char) (8) = 0 (int) (8)
[Unary op] t30 (char) (8) = ++c (char) (8) 
[Assignment] c (char) (8) = t30 (char) (8)
[Jump] goto L5

[Label] L7:
[Declaration] t31 (str) (7) = \n (str) (7)
[Argument] arg t31 (str) (7)
[Declaration] t32 (int) (7) = 0 (int) (7)
[Function call] t32 (int) (7) = call printf (extern) (7), 1
[Function end] function end
[Function start] function char_offset begin:
[Parameter] param a (idt) (9)
[Parameter] param offset (idt) (9)
[Declaration] t33 (idt) (9) = 0 (int) (9)
[Declaration] t34 (idt) (9) = 0 (int) (9)
[Assignment] t34 (idt) (9) = a (idt) (9)
[Declaration] t35 (idt) (9) = 0 (int) (9)
[Assignment] t35 (idt) (9) = offset (idt) (9)
[Binary Op] t33 (idt) (9) = t34 (idt) (9) + t35 (idt) (9) 
[Declaration] t36 (idt) (9) = t33 (idt) (9)
[Return] return t36 (idt) (9)
[Function end] function end
[Function start] function capital_vowels begin:
[Declaration] ch (char) (10) = A (char) (10)

[Label] L8:
[Declaration] t37 (bool) (10) = 0 (int) (10)
[Declaration] t38 (char) (10) = 0 (int) (10)
[Assignment] t38 (char) (10) = ch (char) (10)
[Declaration] t39 (char) (10) = 0 (int) (10)
[Assignment] t39 (char) (10) = Z (char) (10)
[Binary Op] t37 (bool) (10) = t38 (char) (10) <= t39 (char) (10) 
[Conditional Jump] if t37 (bool) (10) != 0 (int) (10) goto L9
[Jump] goto L10

[Label] L9:
[Declaration] t40 (bool) (11) = 0 (int) (11)
[Declaration] t41 (char) (11) = 0 (int) (11)
[Assignment] t41 (char) (11) = ch (char) (11)
[Declaration] t42 (char) (11) = 0 (int) (11)
[Assignment] t42 (char) (11) = A (char) (11)
[Binary Op] t40 (bool) (11) = t41 (char) (11) == t42 (char) (11) 
[Declaration] t43 (bool) (11) = 0 (int) (11)
[Declaration] t44 (char) (11) = 0 (int) (11)
[Assignment] t44 (char) (11) = ch (char) (11)
[Declaration] t45 (char) (11) = 0 (int) (11)
[Assignment] t45 (char) (11) = E (char) (11)
[Binary Op] t43 (bool) (11) = t44 (char) (11) == t45 (char) (11) 
[Declaration] t46 (bool) (11) = 0 (int) (11)
[Declaration] t47 (bool) (11) = 0 (int) (11)
[Assignment] t47 (bool) (11) = t40 (bool) (11)
[Declaration] t48 (bool) (11) = 0 (int) (11)
[Assignment] t48 (bool) (11) = t43 (bool) (11)
[Binary Op] t46 (bool) (11) = t47 (bool) (11) || t48 (bool) (11) 
[Declaration] t49 (bool) (11) = 0 (int) (11)
[Declaration] t50 (char) (11) = 0 (int) (11)
[Assignment] t50 (char) (11) = ch (char) (11)
[Declaration] t51 (char) (11) = 0 (int) (11)
[Assignment] t51 (char) (11) = I (char) (11)
[Binary Op] t49 (bool) (11) = t50 (char) (11) == t51 (char) (11) 
[Declaration] t52 (bool) (11) = 0 (int) (11)
[Declaration] t53 (bool) (11) = 0 (int) (11)
[Assignment] t53 (bool) (11) = t46 (bool) (11)
[Declaration] t54 (bool) (11) = 0 (int) (11)
[Assignment] t54 (bool) (11) = t49 (bool) (11)
[Binary Op] t52 (bool) (11) = t53 (bool) (11) || t54 (bool) (11) 
[Declaration] t55 (bool) (11) = 0 (int) (11)
[Declaration] t56 (char) (11) = 0 (int) (11)
[Assignment] t56 (char) (11) = ch (char) (11)
[Declaration] t57 (char) (11) = 0 (int) (11)
[Assignment] t57 (char) (11) = O (char) (11)
[Binary Op] t55 (bool) (11) = t56 (char) (11) == t57 (char) (11) 
[Declaration] t58 (bool) (11) = 0 (int) (11)
[Declaration] t59 (bool) (11) = 0 (int) (11)
[Assignment] t59 (bool) (11) = t52 (bool) (11)
[Declaration] t60 (bool) (11) = 0 (int) (11)
[Assignment] t60 (bool) (11) = t55 (bool) (11)
[Binary Op] t58 (bool) (11) = t59 (bool) (11) || t60 (bool) (11) 
[Declaration] t61 (bool) (11) = 0 (int) (11)
[Declaration] t62 (char) (11) = 0 (int) (11)
[Assignment] t62 (char) (11) = ch (char) (11)
[Declaration] t63 (char) (11) = 0 (int) (11)
[Assignment] t63 (char) (11) = U (char) (11)
[Binary Op] t61 (bool) (11) = t62 (char) (11) == t63 (char) (11) 
[Declaration] t64 (bool) (11) = 0 (int) (11)
[Declaration] t65 (bool) (11) = 0 (int) (11)
[Assignment] t65 (bool) (11) = t58 (bool) (11)
[Declaration] t66 (bool) (11) = 0 (int) (11)
[Assignment] t66 (bool) (11) = t61 (bool) (11)
[Binary Op] t64 (bool) (11) = t65 (bool) (11) || t66 (bool) (11) 
[Conditional Jump] if t64 (bool) (11) != 0 (int) (11) goto L11
[Declaration] t67 (str) (12) = %c  (str) (12)
[Argument] arg t67 (str) (12)
[Declaration] t69 (int) (12) = 0 (int) (12)
[Declaration] t70 (char) (12) = 0 (int) (12)
[Assignment] t70 (char) (12) = ch (char) (12)
[Declaration] t71 (int) (12) = 0 (int) (12)
[Assignment] t71 (int) (12) = 32 (int) (12)
[Binary Op] t69 (int) (12) = t70 (char) (12) + t71 (int) (12) 
[Declaration] t68 (int) (12) = t69 (int) (12)
[Argument] arg t68 (int) (12)
[Declaration] t72 (int) (12) = 0 (int) (12)
[Function call] t72 (int) (12) = call printf (extern) (12), 2
[Jump] goto L12

[Label] L11:
[Declaration] t73 (str) (13) = %c  (str) (13)
[Argument] arg t73 (str) (13)
[Declaration] t74 (char) (13) = ch (char) (13)
[Argument] arg t74 (char) (13)
[Declaration] t75 (int) (13) = 0 (int) (13)
[Function call] t75 (int) (13) = call printf (extern) (13), 2

[Label] L12:
[Declaration] t76 (char) (11) = 0 (int) (11)
[Unary op] t76 (char) (11) = ++ch (char) (11) 
[Assignment] ch (char) (11) = t76 (char) (11)
[Jump] goto L8

[Label] L10:
[Declaration] t77 (str) (10) = \n (str) (10)
[Argument] arg t77 (str) (10)
[Declaration] t78 (int) (10) = 0 (int) (10)
[Function call] t78 (int) (10) = call printf (extern) (10), 1
[Function end] function end
[Function start] function print_characters begin:
[Declaration] t79 (int) (14) = 0 (int) (14)
[Function call] t79 (int) (14) = call char_decl (idt) (14), 0
[Declaration] t80 (str) (14) = \n (str) (14)
[Argument] arg t80 (str) (14)
[Declaration] t81 (int) (14) = 0 (int) (14)
[Function call] t81 (int) (14) = call printf (extern) (14), 1
[Declaration] t82 (char) (14) = A (char) (14)
[Argument] arg t82 (char) (14)
[Declaration] t83 (int) (14) = 0 (int) (14)
[Function call] t83 (int) (14) = call char_reassign (idt) (14), 1
[Declaration] ch_ra (int) (14) = t83 (int) (14)
[Declaration] t84 (str) (14) = Reassigned char : %c\n (str) (14)
[Argument] arg t84 (str) (14)
[Declaration] t85 (int) (14) = ch_ra (int) (14)
[Argument] arg t85 (int) (14)
[Declaration] t86 (int) (14) = 0 (int) (14)
[Function call] t86 (int) (14) = call printf (extern) (14), 2
[Declaration] t87 (str) (14) = \n (str) (14)
[Argument] arg t87 (str) (14)
[Declaration] t88 (int) (14) = 0 (int) (14)
[Function call] t88 (int) (14) = call printf (extern) (14), 1
[Declaration] t89 (char) (14) = A (char) (14)
[Argument] arg t89 (char) (14)
[Declaration] t90 (int) (14) = 0 (int) (14)
[Function call] t90 (int) (14) = call char_arithmetic (idt) (14), 1
[Declaration] ch_arith (int) (14) = t90 (int) (14)
[Declaration] t91 (str) (14) = Character arithmetic : A + 1 : %c\n (str) (14)
[Argument] arg t91 (str) (14)
[Declaration] t92 (int) (14) = ch_arith (int) (14)
[Argument] arg t92 (int) (14)
[Declaration] t93 (int) (14) = 0 (int) (14)
[Function call] t93 (int) (14) = call printf (extern) (14), 2
[Declaration] t94 (str) (14) = \n (str) (14)
[Argument] arg t94 (str) (14)
[Declaration] t95 (int) (14) = 0 (int) (14)
[Function call] t95 (int) (14) = call printf (extern) (14), 1
[Declaration] t96 (char) (14) = A (char) (14)
[Argument] arg t96 (char) (14)
[Declaration] t97 (char) (14) = A (char) (14)
[Argument] arg t97 (char) (14)
[Declaration] t98 (int) (14) = 0 (int) (14)
[Function call] t98 (int) (14) = call compare_char (idt) (14), 2
[Declaration] ch_comp (int) (14) = t98 (int) (14)
[Declaration] t99 (str) (14) = Comparison between A,A : %d\n (str) (14)
[Argument] arg t99 (str) (14)
[Declaration] t100 (int) (14) = ch_comp (int) (14)
[Argument] arg t100 (int) (14)
[Declaration] t101 (int) (14) = 0 (int) (14)
[Function call] t101 (int) (14) = call printf (extern) (14), 2
[Declaration] t102 (str) (14) = \n (str) (14)
[Argument] arg t102 (str) (14)
[Declaration] t103 (int) (14) = 0 (int) (14)
[Function call] t103 (int) (14) = call printf (extern) (14), 1
[Declaration] t104 (char) (14) = A (char) (14)
[Argument] arg t104 (char) (14)
[Declaration] t105 (int) (14) = 0 (int) (14)
[Function call] t105 (int) (14) = call switch_char (idt) (14), 1
[Declaration] t106 (str) (14) = \n (str) (14)
[Argument] arg t106 (str) (14)
[Declaration] t107 (int) (14) = 0 (int) (14)
[Function call] t107 (int) (14) = call printf (extern) (14), 1
[Declaration] t108 (char) (14) = G (char) (14)
[Argument] arg t108 (char) (14)
[Declaration] t109 (int) (14) = 0 (int) (14)
[Function call] t109 (int) (14) = call loop_char (idt) (14), 1
[Declaration] t110 (str) (14) = \n (str) (14)
[Argument] arg t110 (str) (14)
[Declaration] t111 (int) (14) = 0 (int) (14)
[Function call] t111 (int) (14) = call printf (extern) (14), 1
[Declaration] t112 (char) (14) = D (char) (14)
[Argument] arg t112 (char) (14)
[Declaration] t113 (int) (14) = 3 (int) (14)
[Argument] arg t113 (int) (14)
[Declaration] t114 (int) (14) = 0 (int) (14)
[Function call] t114 (int) (14) = call char_offset (idt) (14), 2
[Declaration] d_offset (int) (14) = t114 (int) (14)
[Declaration] t115 (str) (14) = Offset D by 3 : %c\n (str) (14)
[Argument] arg t115 (str) (14)
[Declaration] t116 (int) (14) = d_offset (int) (14)
[Argument] arg t116 (int) (14)
[Declaration] t117 (int) (14) = 0 (int) (14)
[Function call] t117 (int) (14) = call printf (extern) (14), 2
[Declaration] t118 (str) (14) = \n (str) (14)
[Argument] arg t118 (str) (14)
[Declaration] t119 (int) (14) = 0 (int) (14)
[Function call] t119 (int) (14) = call printf (extern) (14), 1
[Declaration] t120 (int) (14) = 0 (int) (14)
[Function call] t120 (int) (14) = call capital_vowels (idt) (14), 0
[Declaration] t121 (str) (14) = \n (str) (14)
[Argument] arg t121 (str) (14)
[Declaration] t122 (int) (14) = 0 (int) (14)
[Function call] t122 (int) (14) = call printf (extern) (14), 1
[Function end] function end
[Main start] main begin:
[Declaration] t123 (int) (15) = 0 (int) (15)
[Function call] t123 (int) (15) = call print_characters (idt) (15), 0
[Main end] main end
