$ Token :BL_KW_HI_BHAU:
$ Token {
   type          : 311
   location      : line 1, offset 8
   chars         : 'hi bhau'
   string value  : "hi bhau" (len=7)
}

$ Token :BL_KW_BHAU_BAHERUN_GHE:
$ Token {
   type          : 320
   location      : line 3, offset 17
   chars         : 'bhau baherun ghe'
   string value  : "bhau baherun ghe" (len=16)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 24
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 3, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_BAHERUN_GHE:
$ Token {
   type          : 320
   location      : line 4, offset 17
   chars         : 'bhau baherun ghe'
   string value  : "bhau baherun ghe" (len=16)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 4, offset 23
   chars         : 'scanf'
   string value  : "scanf" (len=5)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 4, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_BAHERUN_GHE:
$ Token {
   type          : 320
   location      : line 5, offset 17
   chars         : 'bhau baherun ghe'
   string value  : "bhau baherun ghe" (len=16)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 24
   chars         : 'strlen'
   string value  : "strlen" (len=6)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 5, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 7, offset 13
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 22
   chars         : 'global_1'
   string value  : "global_1" (len=8)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 7, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 7, offset 28
   chars         : '100'
   string value  : "100" (len=3)
   int value     : 100
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 7, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 8, offset 13
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 8, offset 22
   chars         : 'global_2'
   string value  : "global_2" (len=8)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 8, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 8, offset 28
   chars         : '200'
   string value  : "200" (len=3)
   int value     : 200
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 8, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 9, offset 13
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 22
   chars         : 'app_name'
   string value  : "app_name" (len=8)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 9, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 9, offset 40
   chars         : '"Stress Tester"'
   string value  : "Stress Tester" (len=13)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 9, offset 41
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 12, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 27
   chars         : 'math_ops'
   string value  : "math_ops" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 12, offset 28
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 29
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 12, offset 30
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 32
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 12, offset 33
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 35
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 12, offset 36
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 12, offset 37
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 13, offset 18
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 25
   chars         : 'result'
   string value  : "result" (len=6)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 13, offset 27
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 29
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 13, offset 30
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 31
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 13, offset 32
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 33
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 13, offset 35
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 37
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_DIVBINOP:
$ Token {
   type          : 276
   location      : line 13, offset 39
   chars         : '/'
   string value  : "/" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 13, offset 41
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 42
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 13, offset 44
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 13, offset 46
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 13, offset 47
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 13, offset 49
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 13, offset 51
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 13, offset 52
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 53
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 13, offset 54
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 55
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 13, offset 56
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 13, offset 57
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 13, offset 58
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 59
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 13, offset 60
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 13, offset 61
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 13, offset 62
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 13, offset 63
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 13, offset 64
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 14, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 21
   chars         : 'alt'
   string value  : "alt" (len=3)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 14, offset 23
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 14, offset 25
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 31
   chars         : 'result'
   string value  : "result" (len=6)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 14, offset 33
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 14, offset 35
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 14, offset 36
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 14, offset 38
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 14, offset 40
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 41
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 14, offset 43
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 45
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 14, offset 47
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 49
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 14, offset 51
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 14, offset 54
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 14, offset 55
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_MODBINOP:
$ Token {
   type          : 272
   location      : line 14, offset 57
   chars         : '%'
   string value  : "%" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 14, offset 59
   chars         : '7'
   string value  : "7" (len=1)
   int value     : 7
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 14, offset 60
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :KW_BHAU_PARAT_DE:
$ Token {
   type          : 310
   location      : line 15, offset 18
   chars         : 'bhau parat de'
   string value  : "bhau parat de" (len=13)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 15, offset 25
   chars         : 'result'
   string value  : "result" (len=6)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 15, offset 27
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 15, offset 31
   chars         : 'alt'
   string value  : "alt" (len=3)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 15, offset 32
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 16, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 19, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 19, offset 25
   chars         : 'level2'
   string value  : "level2" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 19, offset 26
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 19, offset 27
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 19, offset 28
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 19, offset 30
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 19, offset 31
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 19, offset 32
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 20, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 20, offset 19
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 20, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 20, offset 23
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 20, offset 25
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 20, offset 27
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 20, offset 28
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 21, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 21
   chars         : 'sum'
   string value  : "sum" (len=3)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 21, offset 23
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 21, offset 25
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 21, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :case BL_KW_BHAU_JOPARENT:
$ Token {
   type          : 308
   location      : line 22, offset 18
   chars         : 'bhau joparent'
   string value  : "bhau joparent" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 22, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 22, offset 20
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_GRTTHAN:
$ Token {
   type          : 294
   location      : line 22, offset 22
   chars         : '>'
   string value  : ">" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 22, offset 24
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 22, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 22, offset 26
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 23, offset 12
   chars         : 'sum'
   string value  : "sum" (len=3)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 23, offset 14
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 23, offset 18
   chars         : 'sum'
   string value  : "sum" (len=3)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 23, offset 20
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 23, offset 22
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 23, offset 23
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 24, offset 10
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 24, offset 12
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 24, offset 14
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 24, offset 16
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 24, offset 18
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 24, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 25, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :KW_BHAU_PARAT_DE:
$ Token {
   type          : 310
   location      : line 26, offset 18
   chars         : 'bhau parat de'
   string value  : "bhau parat de" (len=13)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 26, offset 22
   chars         : 'sum'
   string value  : "sum" (len=3)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 26, offset 23
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 27, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 30, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 30, offset 25
   chars         : 'level1'
   string value  : "level1" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 30, offset 26
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 30, offset 27
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 30, offset 28
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 30, offset 29
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 31, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 31, offset 19
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 31, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 31, offset 23
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 31, offset 25
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 31, offset 27
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 31, offset 28
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 32, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 32, offset 19
   chars         : 'z'
   string value  : "z" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 32, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 32, offset 23
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 32, offset 25
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 32, offset 27
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 32, offset 28
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :KW_BHAU_PARAT_DE:
$ Token {
   type          : 310
   location      : line 33, offset 18
   chars         : 'bhau parat de'
   string value  : "bhau parat de" (len=13)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 33, offset 25
   chars         : 'level2'
   string value  : "level2" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 33, offset 26
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 33, offset 27
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 33, offset 28
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 33, offset 30
   chars         : 'z'
   string value  : "z" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 33, offset 31
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 33, offset 32
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 34, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 37, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 37, offset 32
   chars         : 'decision_tree'
   string value  : "decision_tree" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 37, offset 33
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 37, offset 36
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 37, offset 37
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 37, offset 38
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 305
   location      : line 38, offset 13
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 38, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 38, offset 17
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 293
   location      : line 38, offset 19
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 38, offset 21
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 38, offset 22
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 38, offset 23
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 39, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 39, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 39, offset 23
   chars         : '"Neg\n"'
   string value  : "Neg\n" (len=5)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 39, offset 24
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 39, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 40, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_NAHITAR:
$ Token {
   type          : 306
   location      : line 41, offset 17
   chars         : 'bhau nahitar'
   string value  : "bhau nahitar" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 41, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 41, offset 21
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 41, offset 24
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 41, offset 26
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 41, offset 27
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 41, offset 28
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 42, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 42, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 42, offset 24
   chars         : '"Zero\n"'
   string value  : "Zero\n" (len=6)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 42, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 42, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 43, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_NAHITAR:
$ Token {
   type          : 306
   location      : line 44, offset 17
   chars         : 'bhau nahitar'
   string value  : "bhau nahitar" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 44, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 44, offset 21
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_GRTTHAN:
$ Token {
   type          : 294
   location      : line 44, offset 23
   chars         : '>'
   string value  : ">" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 44, offset 25
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_LOGAND:
$ Token {
   type          : 298
   location      : line 44, offset 28
   chars         : '&&'
   string value  : "&&" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 44, offset 32
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 293
   location      : line 44, offset 34
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 44, offset 37
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 44, offset 38
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 44, offset 39
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 45, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 45, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 45, offset 25
   chars         : '"Small\n"'
   string value  : "Small\n" (len=7)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 45, offset 26
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 45, offset 27
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 46, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_NAHITAR:
$ Token {
   type          : 306
   location      : line 47, offset 17
   chars         : 'bhau nahitar'
   string value  : "bhau nahitar" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 47, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 47, offset 21
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_GRTEQ:
$ Token {
   type          : 297
   location      : line 47, offset 24
   chars         : '>='
   string value  : ">=" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 47, offset 27
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_LOGAND:
$ Token {
   type          : 298
   location      : line 47, offset 30
   chars         : '&&'
   string value  : "&&" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 47, offset 34
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 293
   location      : line 47, offset 36
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 47, offset 40
   chars         : '100'
   string value  : "100" (len=3)
   int value     : 100
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 47, offset 41
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 47, offset 42
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 48, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 48, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 48, offset 23
   chars         : '"Med\n"'
   string value  : "Med\n" (len=5)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 48, offset 24
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 48, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 49, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :case BL_KW_BHAU_TAR:
$ Token {
   type          : 307
   location      : line 50, offset 13
   chars         : 'bhau tar'
   string value  : "bhau tar" (len=8)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 50, offset 15
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 51, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 51, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 51, offset 23
   chars         : '"Big\n"'
   string value  : "Big\n" (len=5)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 51, offset 24
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 51, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 52, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 53, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 55, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 55, offset 35
   chars         : 'multiple_assigns'
   string value  : "multiple_assigns" (len=16)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 55, offset 36
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 55, offset 37
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 55, offset 38
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 56, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 56, offset 19
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 56, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 56, offset 23
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 56, offset 25
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 56, offset 27
   chars         : 'z'
   string value  : "z" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 56, offset 29
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 56, offset 31
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 56, offset 32
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 57, offset 6
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 57, offset 8
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 57, offset 10
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 57, offset 12
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 57, offset 14
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 57, offset 15
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 58, offset 6
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 58, offset 8
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 58, offset 10
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 58, offset 12
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 58, offset 14
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 58, offset 15
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 59, offset 6
   chars         : 'z'
   string value  : "z" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 59, offset 8
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 59, offset 10
   chars         : 'z'
   string value  : "z" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 59, offset 12
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 59, offset 14
   chars         : '3'
   string value  : "3" (len=1)
   int value     : 3
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 59, offset 15
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :KW_BHAU_PARAT_DE:
$ Token {
   type          : 310
   location      : line 60, offset 18
   chars         : 'bhau parat de'
   string value  : "bhau parat de" (len=13)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 60, offset 20
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 60, offset 22
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 60, offset 24
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 60, offset 26
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 60, offset 28
   chars         : 'z'
   string value  : "z" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 60, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 61, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 63, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 63, offset 35
   chars         : 'scope_depth_test'
   string value  : "scope_depth_test" (len=16)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 63, offset 36
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 63, offset 37
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 63, offset 38
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 64, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 64, offset 19
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 64, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 64, offset 24
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 64, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :case BL_KW_BHAU_JOPARENT:
$ Token {
   type          : 308
   location      : line 65, offset 18
   chars         : 'bhau joparent'
   string value  : "bhau joparent" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 65, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 65, offset 20
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_GRTTHAN:
$ Token {
   type          : 294
   location      : line 65, offset 22
   chars         : '>'
   string value  : ">" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 65, offset 24
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 65, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 65, offset 26
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 66, offset 21
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 66, offset 23
   chars         : 'j'
   string value  : "j" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 66, offset 25
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 66, offset 28
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 66, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :case BL_KW_BHAU_JOPARENT:
$ Token {
   type          : 308
   location      : line 68, offset 22
   chars         : 'bhau joparent'
   string value  : "bhau joparent" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 68, offset 23
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 68, offset 24
   chars         : 'j'
   string value  : "j" (len=1)
}

$ Token :BL_GRTTHAN:
$ Token {
   type          : 294
   location      : line 68, offset 26
   chars         : '>'
   string value  : ">" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 68, offset 28
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 68, offset 29
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 68, offset 30
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 19
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 69, offset 20
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 69, offset 24
   chars         : '"* "'
   string value  : "* " (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 69, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 69, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_DEC:
$ Token {
   type          : 283
   location      : line 70, offset 15
   chars         : '--'
   string value  : "--" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 70, offset 16
   chars         : 'j'
   string value  : "j" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 70, offset 17
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 71, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 72, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 72, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 72, offset 20
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 72, offset 21
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 72, offset 22
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 73, offset 9
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 73, offset 11
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 73, offset 13
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 73, offset 15
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 73, offset 17
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 73, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 74, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 75, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 75, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 75, offset 16
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 75, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 75, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 76, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 78, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 78, offset 29
   chars         : 'call_chain'
   string value  : "call_chain" (len=10)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 78, offset 30
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 78, offset 31
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 78, offset 32
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 78, offset 33
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :KW_BHAU_PARAT_DE:
$ Token {
   type          : 310
   location      : line 79, offset 18
   chars         : 'bhau parat de'
   string value  : "bhau parat de" (len=13)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 79, offset 25
   chars         : 'level1'
   string value  : "level1" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 79, offset 26
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 79, offset 27
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 79, offset 28
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 79, offset 30
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 79, offset 37
   chars         : 'level2'
   string value  : "level2" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 79, offset 38
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 79, offset 39
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 79, offset 40
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 79, offset 42
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 79, offset 44
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 79, offset 46
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 79, offset 47
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 79, offset 49
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 79, offset 58
   chars         : 'math_ops'
   string value  : "math_ops" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 79, offset 59
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 79, offset 60
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 79, offset 61
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 79, offset 63
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 79, offset 64
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 79, offset 65
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 79, offset 66
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 79, offset 68
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 79, offset 69
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 79, offset 70
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 79, offset 71
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 79, offset 72
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 80, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 82, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 82, offset 30
   chars         : 'giant_exprs'
   string value  : "giant_exprs" (len=11)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 82, offset 31
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 82, offset 32
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 82, offset 33
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 83, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 83, offset 21
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 83, offset 23
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 83, offset 25
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 83, offset 26
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 27
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 83, offset 28
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 29
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 83, offset 30
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 83, offset 31
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 83, offset 32
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 33
   chars         : '3'
   string value  : "3" (len=1)
   int value     : 3
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 83, offset 34
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 35
   chars         : '4'
   string value  : "4" (len=1)
   int value     : 4
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 83, offset 36
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 83, offset 38
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 40
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 83, offset 42
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 44
   chars         : '6'
   string value  : "6" (len=1)
   int value     : 6
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 83, offset 45
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 46
   chars         : '7'
   string value  : "7" (len=1)
   int value     : 7
}

$ Token :BL_DIVBINOP:
$ Token {
   type          : 276
   location      : line 83, offset 48
   chars         : '/'
   string value  : "/" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 50
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_MODBINOP:
$ Token {
   type          : 272
   location      : line 83, offset 52
   chars         : '%'
   string value  : "%" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 54
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 83, offset 56
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 60
   chars         : '100'
   string value  : "100" (len=3)
   int value     : 100
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 83, offset 62
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 65
   chars         : '42'
   string value  : "42" (len=2)
   int value     : 42
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 83, offset 67
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 83, offset 69
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 70
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 83, offset 71
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 72
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 83, offset 73
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 74
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 83, offset 75
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 76
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 83, offset 77
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 83, offset 78
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 83, offset 80
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 83, offset 82
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 83, offset 83
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 84, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 84, offset 22
   chars         : 'val2'
   string value  : "val2" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 84, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 84, offset 28
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 84, offset 30
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 84, offset 32
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 84, offset 35
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 84, offset 37
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 84, offset 39
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 84, offset 41
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 84, offset 45
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_DIVBINOP:
$ Token {
   type          : 276
   location      : line 84, offset 47
   chars         : '/'
   string value  : "/" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 84, offset 49
   chars         : '3'
   string value  : "3" (len=1)
   int value     : 3
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 84, offset 51
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 84, offset 55
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_MODBINOP:
$ Token {
   type          : 272
   location      : line 84, offset 57
   chars         : '%'
   string value  : "%" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 84, offset 59
   chars         : '4'
   string value  : "4" (len=1)
   int value     : 4
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 84, offset 60
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 84, offset 61
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 85, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 85, offset 22
   chars         : 'val3'
   string value  : "val3" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 85, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 85, offset 29
   chars         : 'val2'
   string value  : "val2" (len=4)
}

$ Token :BL_DIVBINOP:
$ Token {
   type          : 276
   location      : line 85, offset 31
   chars         : '/'
   string value  : "/" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 85, offset 33
   chars         : '3'
   string value  : "3" (len=1)
   int value     : 3
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 85, offset 35
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 85, offset 40
   chars         : 'val2'
   string value  : "val2" (len=4)
}

$ Token :BL_MODBINOP:
$ Token {
   type          : 272
   location      : line 85, offset 42
   chars         : '%'
   string value  : "%" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 85, offset 44
   chars         : '7'
   string value  : "7" (len=1)
   int value     : 7
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 85, offset 45
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :KW_BHAU_PARAT_DE:
$ Token {
   type          : 310
   location      : line 86, offset 18
   chars         : 'bhau parat de'
   string value  : "bhau parat de" (len=13)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 86, offset 23
   chars         : 'val3'
   string value  : "val3" (len=4)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 86, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 87, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 89, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 89, offset 33
   chars         : 'recursive_deep'
   string value  : "recursive_deep" (len=14)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 89, offset 34
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 89, offset 35
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 89, offset 36
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 89, offset 37
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 305
   location      : line 90, offset 13
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 90, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 90, offset 15
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_LESSEQ:
$ Token {
   type          : 296
   location      : line 90, offset 18
   chars         : '<='
   string value  : "<=" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 90, offset 20
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 90, offset 21
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 90, offset 22
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :KW_BHAU_PARAT_DE:
$ Token {
   type          : 310
   location      : line 91, offset 22
   chars         : 'bhau parat de'
   string value  : "bhau parat de" (len=13)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 91, offset 24
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 91, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 92, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :KW_BHAU_PARAT_DE:
$ Token {
   type          : 310
   location      : line 93, offset 18
   chars         : 'bhau parat de'
   string value  : "bhau parat de" (len=13)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 93, offset 20
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 93, offset 22
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 93, offset 37
   chars         : 'recursive_deep'
   string value  : "recursive_deep" (len=14)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 93, offset 38
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 93, offset 39
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 93, offset 41
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 93, offset 43
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 93, offset 44
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 93, offset 45
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 94, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 96, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 96, offset 34
   chars         : 'long_loop_chain'
   string value  : "long_loop_chain" (len=15)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 96, offset 35
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 96, offset 36
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 96, offset 37
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 97, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 97, offset 21
   chars         : 'acc'
   string value  : "acc" (len=3)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 97, offset 23
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 97, offset 25
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 97, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 98, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 98, offset 19
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 98, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 98, offset 23
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 98, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :case BL_KW_BHAU_JOPARENT:
$ Token {
   type          : 308
   location      : line 99, offset 18
   chars         : 'bhau joparent'
   string value  : "bhau joparent" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 99, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 99, offset 20
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 293
   location      : line 99, offset 22
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 99, offset 26
   chars         : '100'
   string value  : "100" (len=3)
   int value     : 100
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 99, offset 27
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 99, offset 28
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 305
   location      : line 100, offset 17
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 100, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 100, offset 19
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_MODBINOP:
$ Token {
   type          : 272
   location      : line 100, offset 21
   chars         : '%'
   string value  : "%" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 100, offset 24
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 100, offset 27
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 100, offset 29
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 100, offset 30
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 100, offset 31
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 101, offset 19
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 101, offset 20
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 101, offset 28
   chars         : '"Tens: "'
   string value  : "Tens: " (len=6)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 101, offset 29
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 101, offset 30
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 102, offset 19
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 102, offset 20
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 102, offset 25
   chars         : '"%d "'
   string value  : "%d " (len=3)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 102, offset 26
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 102, offset 27
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 102, offset 28
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 102, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 103, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 104, offset 12
   chars         : 'acc'
   string value  : "acc" (len=3)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 104, offset 14
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 104, offset 18
   chars         : 'acc'
   string value  : "acc" (len=3)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 104, offset 20
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 104, offset 22
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 104, offset 23
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 105, offset 10
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 105, offset 12
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 105, offset 14
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 105, offset 16
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 105, offset 18
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 105, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 106, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 107, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 107, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 107, offset 16
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 107, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 107, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :KW_BHAU_PARAT_DE:
$ Token {
   type          : 310
   location      : line 108, offset 18
   chars         : 'bhau parat de'
   string value  : "bhau parat de" (len=13)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 108, offset 22
   chars         : 'acc'
   string value  : "acc" (len=3)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 108, offset 23
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 109, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 111, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 111, offset 31
   chars         : 'string_block'
   string value  : "string_block" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 111, offset 32
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 111, offset 33
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 111, offset 34
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 112, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 112, offset 22
   chars         : 'base'
   string value  : "base" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 112, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 112, offset 35
   chars         : '"BhauLang"'
   string value  : "BhauLang" (len=8)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 112, offset 36
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 113, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 115, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 115, offset 29
   chars         : 'everything'
   string value  : "everything" (len=10)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 115, offset 30
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 115, offset 33
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 115, offset 34
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 115, offset 35
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 116, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 116, offset 22
   chars         : 'temp'
   string value  : "temp" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 116, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 116, offset 28
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 116, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 117, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 117, offset 21
   chars         : 'mid'
   string value  : "mid" (len=3)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 117, offset 23
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 117, offset 38
   chars         : 'recursive_deep'
   string value  : "recursive_deep" (len=14)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 117, offset 39
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 117, offset 43
   chars         : 'temp'
   string value  : "temp" (len=4)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 117, offset 44
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 117, offset 45
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 118, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 118, offset 21
   chars         : 'ops'
   string value  : "ops" (len=3)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 118, offset 23
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 118, offset 32
   chars         : 'math_ops'
   string value  : "math_ops" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 118, offset 33
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 118, offset 37
   chars         : 'temp'
   string value  : "temp" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 118, offset 38
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 118, offset 42
   chars         : 'mid'
   string value  : "mid" (len=3)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 118, offset 43
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 118, offset 48
   chars         : 'temp'
   string value  : "temp" (len=4)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 118, offset 49
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 118, offset 50
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 118, offset 51
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 118, offset 52
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 119, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 119, offset 25
   chars         : 'longres'
   string value  : "longres" (len=7)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 119, offset 27
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 119, offset 43
   chars         : 'long_loop_chain'
   string value  : "long_loop_chain" (len=15)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 119, offset 44
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 119, offset 45
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 119, offset 46
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 120, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 120, offset 23
   chars         : 'giant'
   string value  : "giant" (len=5)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 120, offset 25
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 120, offset 37
   chars         : 'giant_exprs'
   string value  : "giant_exprs" (len=11)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 120, offset 38
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 120, offset 39
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 120, offset 40
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 122, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 122, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 122, offset 20
   chars         : '"temp: "'
   string value  : "temp: " (len=6)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 122, offset 21
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 122, offset 22
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 122, offset 29
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 122, offset 30
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 122, offset 36
   chars         : '"%d\n"'
   string value  : "%d\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 122, offset 37
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 122, offset 41
   chars         : 'temp'
   string value  : "temp" (len=4)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 122, offset 42
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 122, offset 43
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 123, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 123, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 123, offset 19
   chars         : '"mid: "'
   string value  : "mid: " (len=5)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 123, offset 20
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 123, offset 21
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 123, offset 28
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 123, offset 29
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 123, offset 35
   chars         : '"%d\n"'
   string value  : "%d\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 123, offset 36
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 123, offset 39
   chars         : 'mid'
   string value  : "mid" (len=3)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 123, offset 40
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 123, offset 41
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 124, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 124, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 124, offset 19
   chars         : '"ops: "'
   string value  : "ops: " (len=5)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 124, offset 20
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 124, offset 21
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 124, offset 28
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 124, offset 29
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 124, offset 35
   chars         : '"%d\n"'
   string value  : "%d\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 124, offset 36
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 124, offset 39
   chars         : 'ops'
   string value  : "ops" (len=3)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 124, offset 40
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 124, offset 41
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 125, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 125, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 125, offset 23
   chars         : '"longres: "'
   string value  : "longres: " (len=9)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 125, offset 24
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 125, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 125, offset 32
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 125, offset 33
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 125, offset 39
   chars         : '"%d\n"'
   string value  : "%d\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 125, offset 40
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 125, offset 47
   chars         : 'longres'
   string value  : "longres" (len=7)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 125, offset 48
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 125, offset 49
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 126, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 126, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 126, offset 21
   chars         : '"giant: "'
   string value  : "giant: " (len=7)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 126, offset 22
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 126, offset 23
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 126, offset 30
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 126, offset 31
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 126, offset 37
   chars         : '"%d\n"'
   string value  : "%d\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 126, offset 38
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 126, offset 43
   chars         : 'giant'
   string value  : "giant" (len=5)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 126, offset 44
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 126, offset 45
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :KW_BHAU_PARAT_DE:
$ Token {
   type          : 310
   location      : line 128, offset 18
   chars         : 'bhau parat de'
   string value  : "bhau parat de" (len=13)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 128, offset 23
   chars         : 'temp'
   string value  : "temp" (len=4)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 128, offset 25
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 128, offset 29
   chars         : 'mid'
   string value  : "mid" (len=3)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 128, offset 31
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 128, offset 35
   chars         : 'ops'
   string value  : "ops" (len=3)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 128, offset 37
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 128, offset 45
   chars         : 'longres'
   string value  : "longres" (len=7)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 128, offset 47
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 128, offset 53
   chars         : 'giant'
   string value  : "giant" (len=5)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 128, offset 54
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 129, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_LAKSHAT_THEV:
$ Token {
   type          : 309
   location      : line 131, offset 18
   chars         : 'bhau lakshat thev'
   string value  : "bhau lakshat thev" (len=17)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 131, offset 30
   chars         : 'branch_test'
   string value  : "branch_test" (len=11)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 131, offset 31
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 131, offset 32
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 131, offset 33
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 132, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 132, offset 21
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 132, offset 23
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 132, offset 25
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 132, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 305
   location      : line 133, offset 13
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 133, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 133, offset 17
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_GRTTHAN:
$ Token {
   type          : 294
   location      : line 133, offset 19
   chars         : '>'
   string value  : ">" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 133, offset 21
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 133, offset 22
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 133, offset 23
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_KW_BHAU_JAR:
$ Token {
   type          : 305
   location      : line 134, offset 17
   chars         : 'bhau jar'
   string value  : "bhau jar" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 134, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 134, offset 21
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 293
   location      : line 134, offset 23
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 134, offset 25
   chars         : '3'
   string value  : "3" (len=1)
   int value     : 3
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 134, offset 26
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 134, offset 27
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 135, offset 19
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 135, offset 20
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 135, offset 28
   chars         : '"Tiny\n"'
   string value  : "Tiny\n" (len=6)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 135, offset 29
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 135, offset 30
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 136, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_NAHITAR:
$ Token {
   type          : 306
   location      : line 137, offset 21
   chars         : 'bhau nahitar'
   string value  : "bhau nahitar" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 137, offset 22
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 137, offset 25
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 293
   location      : line 137, offset 27
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 137, offset 29
   chars         : '6'
   string value  : "6" (len=1)
   int value     : 6
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 137, offset 30
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 137, offset 31
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 138, offset 19
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 138, offset 20
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 138, offset 32
   chars         : '"Smallish\n"'
   string value  : "Smallish\n" (len=10)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 138, offset 33
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 138, offset 34
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 139, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :case BL_KW_BHAU_TAR:
$ Token {
   type          : 307
   location      : line 140, offset 17
   chars         : 'bhau tar'
   string value  : "bhau tar" (len=8)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 140, offset 19
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 141, offset 19
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 141, offset 20
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 141, offset 27
   chars         : '"???\n"'
   string value  : "???\n" (len=5)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 141, offset 28
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 141, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 142, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 143, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :case BL_KW_BHAU_TAR:
$ Token {
   type          : 307
   location      : line 144, offset 13
   chars         : 'bhau tar'
   string value  : "bhau tar" (len=8)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 144, offset 15
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 145, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 145, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 145, offset 36
   chars         : '"Negative or Zero\n"'
   string value  : "Negative or Zero\n" (len=18)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 145, offset 37
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 145, offset 38
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 146, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 147, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BHAU_MAIN:
$ Token {
   type          : 321
   location      : line 151, offset 17
   chars         : 'bhau ithun chalu'
   string value  : "bhau ithun chalu" (len=16)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 151, offset 19
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 152, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 152, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 152, offset 20
   chars         : 'app_name'
   string value  : "app_name" (len=8)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 152, offset 21
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 152, offset 22
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 153, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 153, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 153, offset 43
   chars         : '"==== Start Stress Test ====\n"'
   string value  : "==== Start Stress Test ====\n" (len=29)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 153, offset 44
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 153, offset 45
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 155, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 155, offset 22
   chars         : 'res1'
   string value  : "res1" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 155, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 155, offset 33
   chars         : 'math_ops'
   string value  : "math_ops" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 155, offset 34
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 155, offset 35
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 155, offset 36
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 155, offset 37
   chars         : '3'
   string value  : "3" (len=1)
   int value     : 3
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 155, offset 38
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 155, offset 39
   chars         : '4'
   string value  : "4" (len=1)
   int value     : 4
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 155, offset 40
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 155, offset 41
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 156, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 156, offset 22
   chars         : 'res2'
   string value  : "res2" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 156, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 156, offset 31
   chars         : 'level1'
   string value  : "level1" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 156, offset 32
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 156, offset 33
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 156, offset 34
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 156, offset 35
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 158, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 158, offset 22
   chars         : 'res3'
   string value  : "res3" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 158, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 158, offset 35
   chars         : 'call_chain'
   string value  : "call_chain" (len=10)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 158, offset 36
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 158, offset 37
   chars         : '3'
   string value  : "3" (len=1)
   int value     : 3
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 158, offset 38
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 158, offset 39
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_KW_BHAU_HAI_AHE:
$ Token {
   type          : 304
   location      : line 159, offset 17
   chars         : 'bhau hai ahe'
   string value  : "bhau hai ahe" (len=12)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 159, offset 22
   chars         : 'res4'
   string value  : "res4" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 159, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 159, offset 35
   chars         : 'everything'
   string value  : "everything" (len=10)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 159, offset 36
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 159, offset 37
   chars         : '4'
   string value  : "4" (len=1)
   int value     : 4
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 159, offset 38
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 159, offset 39
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 162, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 162, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 162, offset 23
   chars         : '"MathOps: "'
   string value  : "MathOps: " (len=9)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 162, offset 24
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 162, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 162, offset 32
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 162, offset 33
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 162, offset 39
   chars         : '"%d\n"'
   string value  : "%d\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 162, offset 40
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 162, offset 44
   chars         : 'res1'
   string value  : "res1" (len=4)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 162, offset 45
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 162, offset 46
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 163, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 163, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 163, offset 22
   chars         : '"Level1: "'
   string value  : "Level1: " (len=8)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 163, offset 23
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 163, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 163, offset 31
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 163, offset 32
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 163, offset 38
   chars         : '"%d\n"'
   string value  : "%d\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 163, offset 39
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 163, offset 43
   chars         : 'res2'
   string value  : "res2" (len=4)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 163, offset 44
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 163, offset 45
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 164, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 164, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 164, offset 25
   chars         : '"CallChain: "'
   string value  : "CallChain: " (len=11)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 164, offset 26
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 164, offset 27
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 164, offset 34
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 164, offset 35
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 164, offset 41
   chars         : '"%d\n"'
   string value  : "%d\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 164, offset 42
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 164, offset 46
   chars         : 'res3'
   string value  : "res3" (len=4)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 164, offset 47
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 164, offset 48
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 165, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 165, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 165, offset 32
   chars         : '"Everything Combo: "'
   string value  : "Everything Combo: " (len=18)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 165, offset 33
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 165, offset 34
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 165, offset 41
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 165, offset 42
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 165, offset 48
   chars         : '"%d\n"'
   string value  : "%d\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 165, offset 49
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 165, offset 53
   chars         : 'res4'
   string value  : "res4" (len=4)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 165, offset 54
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 165, offset 55
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 167, offset 18
   chars         : 'decision_tree'
   string value  : "decision_tree" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 167, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 167, offset 20
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 167, offset 22
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 167, offset 23
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 167, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 168, offset 18
   chars         : 'decision_tree'
   string value  : "decision_tree" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 168, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 168, offset 20
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 168, offset 21
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 168, offset 22
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 169, offset 18
   chars         : 'decision_tree'
   string value  : "decision_tree" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 169, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 169, offset 20
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 169, offset 21
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 169, offset 22
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 170, offset 18
   chars         : 'decision_tree'
   string value  : "decision_tree" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 170, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 170, offset 21
   chars         : '50'
   string value  : "50" (len=2)
   int value     : 50
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 170, offset 22
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 170, offset 23
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 171, offset 18
   chars         : 'decision_tree'
   string value  : "decision_tree" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 171, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 171, offset 22
   chars         : '500'
   string value  : "500" (len=3)
   int value     : 500
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 171, offset 23
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 171, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 173, offset 21
   chars         : 'multiple_assigns'
   string value  : "multiple_assigns" (len=16)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 173, offset 22
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 173, offset 23
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 173, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 174, offset 21
   chars         : 'scope_depth_test'
   string value  : "scope_depth_test" (len=16)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 174, offset 22
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 174, offset 23
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 174, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 175, offset 16
   chars         : 'giant_exprs'
   string value  : "giant_exprs" (len=11)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 175, offset 17
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 175, offset 18
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 175, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 176, offset 20
   chars         : 'long_loop_chain'
   string value  : "long_loop_chain" (len=15)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 176, offset 21
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 176, offset 22
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 176, offset 23
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 177, offset 17
   chars         : 'string_block'
   string value  : "string_block" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 177, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 177, offset 19
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 177, offset 20
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 178, offset 16
   chars         : 'branch_test'
   string value  : "branch_test" (len=11)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 178, offset 17
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 178, offset 18
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 178, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 181, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 181, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 181, offset 39
   chars         : '"==== End Stress Test ===="'
   string value  : "==== End Stress Test ====" (len=25)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 181, offset 40
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 181, offset 41
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 182, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_KW_BYE_BHAU:
$ Token {
   type          : 312
   location      : line 184, offset 9
   chars         : 'bye bhau'
   string value  : "bye bhau" (len=8)
}

$ Token :BL_EOF:
$ Token {
   type          : 303
   location      : line 185, offset 2
   chars         : ''
   string value  : "" (len=1)
}

