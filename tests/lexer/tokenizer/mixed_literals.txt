$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 1, offset 3
   chars         : 'hi'
   string value  : "hi" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 1, offset 8
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 13
   chars         : 'baherun'
   string value  : "baherun" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 17
   chars         : 'ghe'
   string value  : "ghe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 24
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 3, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 30
   chars         : 'mixed_conds'
   string value  : "mixed_conds" (len=11)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 5, offset 31
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 5, offset 32
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 5, offset 33
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 6, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 6, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 6, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 6, offset 19
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 6, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 6, offset 24
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 6, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 19
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 7, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 7, offset 25
   chars         : '2.5'
   string value  : "2.5" (len=3)
   float value   : 2.500000
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 7, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 8, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 8, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 8, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 8, offset 19
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 8, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_CHAR:
$ Token {
   type          : 260
   location      : line 8, offset 25
   chars         : ''A''
   string value  : "A" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 8, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 22
   chars         : 'flag'
   string value  : "flag" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 9, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 30
   chars         : 'khara'
   string value  : "khara" (len=5)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 9, offset 31
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 22
   chars         : 'str1'
   string value  : "str1" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 10, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 10, offset 32
   chars         : '"hello"'
   string value  : "hello" (len=5)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 10, offset 33
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 11, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 11, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 11, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 11, offset 22
   chars         : 'str2'
   string value  : "str2" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 11, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 11, offset 32
   chars         : '"hello"'
   string value  : "hello" (len=5)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 11, offset 33
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 13
   chars         : 'jar'
   string value  : "jar" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 13, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 15
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 13, offset 17
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 19
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 13, offset 22
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 13, offset 27
   chars         : '12.5'
   string value  : "12.5" (len=4)
   float value   : 12.500000
}

$ Token :BL_LOGAND:
$ Token {
   type          : 298
   location      : line 13, offset 30
   chars         : '&&'
   string value  : "&&" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 32
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 13, offset 35
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_CHAR:
$ Token {
   type          : 260
   location      : line 13, offset 39
   chars         : ''A''
   string value  : "A" (len=1)
}

$ Token :BL_LOGAND:
$ Token {
   type          : 298
   location      : line 13, offset 42
   chars         : '&&'
   string value  : "&&" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 47
   chars         : 'flag'
   string value  : "flag" (len=4)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 13, offset 50
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 13, offset 52
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_LOGAND:
$ Token {
   type          : 298
   location      : line 13, offset 55
   chars         : '&&'
   string value  : "&&" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 60
   chars         : 'str1'
   string value  : "str1" (len=4)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 13, offset 63
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 68
   chars         : 'str2'
   string value  : "str2" (len=4)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 13, offset 69
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 13, offset 70
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 14, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 14, offset 49
   chars         : '"From mixed_conds , value : %d\n"'
   string value  : "From mixed_conds , value : %d\n" (len=31)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 14, offset 50
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 14, offset 51
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 14, offset 52
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 14, offset 53
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 15, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 15, offset 10
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 15, offset 14
   chars         : 'tar'
   string value  : "tar" (len=3)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 15, offset 15
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 16, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 16, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 16, offset 49
   chars         : '"From mixed_conds , Value : %d\n"'
   string value  : "From mixed_conds , Value : %d\n" (len=31)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 16, offset 50
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 16, offset 51
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 16, offset 52
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 16, offset 53
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 17, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 18, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 20, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 20, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 20, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 20, offset 32
   chars         : 'float_and_int'
   string value  : "float_and_int" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 20, offset 33
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 20, offset 34
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 20, offset 35
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 20, offset 36
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 20, offset 37
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 20, offset 38
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 21, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 21, offset 49
   chars         : '"From float_and_int , value : %.2f\n"'
   string value  : "From float_and_int , value : %.2f\n" (len=35)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 21, offset 50
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 52
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 21, offset 53
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 21, offset 54
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 21, offset 55
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 21, offset 56
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 22, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 24, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 24, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 24, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 24, offset 32
   chars         : 'int_char_bool'
   string value  : "int_char_bool" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 24, offset 33
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 24, offset 34
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 24, offset 35
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 24, offset 36
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 24, offset 37
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 24, offset 38
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 24, offset 39
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 24, offset 40
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 25, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 25, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 25, offset 47
   chars         : '"From int_char_bool , value : %d\n"'
   string value  : "From int_char_bool , value : %d\n" (len=33)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 25, offset 48
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 25, offset 49
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 25, offset 51
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 25, offset 53
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 25, offset 55
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 25, offset 57
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 25, offset 58
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 25, offset 59
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 26, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 28, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 28, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 28, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 28, offset 29
   chars         : 'char_float'
   string value  : "char_float" (len=10)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 28, offset 30
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 28, offset 31
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 28, offset 32
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 28, offset 33
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 28, offset 34
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 28, offset 35
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 29, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 29, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 29, offset 46
   chars         : '"From char_float , value : %.2f\n"'
   string value  : "From char_float , value : %.2f\n" (len=32)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 29, offset 47
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 29, offset 48
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 29, offset 50
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 29, offset 52
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 29, offset 53
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 29, offset 54
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 30, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 32, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 32, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 32, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 32, offset 29
   chars         : 'bool_float'
   string value  : "bool_float" (len=10)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 32, offset 30
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 32, offset 31
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 32, offset 32
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 32, offset 33
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 32, offset 34
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 32, offset 35
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 33, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 33, offset 13
   chars         : 'jar'
   string value  : "jar" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 33, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 33, offset 15
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_LOGAND:
$ Token {
   type          : 298
   location      : line 33, offset 18
   chars         : '&&'
   string value  : "&&" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 33, offset 20
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_GRTTHAN:
$ Token {
   type          : 294
   location      : line 33, offset 22
   chars         : '>'
   string value  : ">" (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 33, offset 26
   chars         : '4.9'
   string value  : "4.9" (len=3)
   float value   : 4.900000
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 33, offset 27
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 33, offset 28
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 34, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 34, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 34, offset 48
   chars         : '"From bool_float , value : %d\n"'
   string value  : "From bool_float , value : %d\n" (len=30)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 34, offset 49
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 34, offset 50
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 34, offset 51
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 34, offset 52
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 35, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 35, offset 10
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 35, offset 14
   chars         : 'tar'
   string value  : "tar" (len=3)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 35, offset 15
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 36, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 36, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 36, offset 48
   chars         : '"From bool_float , value : %d\n"'
   string value  : "From bool_float , value : %d\n" (len=30)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 36, offset 49
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 36, offset 50
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 36, offset 51
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 36, offset 52
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 37, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 38, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 40, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 40, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 40, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 40, offset 32
   chars         : 'char_comp_int'
   string value  : "char_comp_int" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 40, offset 33
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 40, offset 34
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 40, offset 35
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 40, offset 36
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 40, offset 37
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 40, offset 38
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 41, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 41, offset 13
   chars         : 'jar'
   string value  : "jar" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 41, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 41, offset 15
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 41, offset 18
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 41, offset 20
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 41, offset 21
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 41, offset 22
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 42, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 42, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 42, offset 51
   chars         : '"From char_comp_int , value : %d\n"'
   string value  : "From char_comp_int , value : %d\n" (len=33)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 42, offset 52
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 42, offset 53
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 42, offset 54
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 42, offset 55
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 43, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 43, offset 10
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 43, offset 14
   chars         : 'tar'
   string value  : "tar" (len=3)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 43, offset 15
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 44, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 44, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 44, offset 51
   chars         : '"From char_comp_int , value : %d\n"'
   string value  : "From char_comp_int , value : %d\n" (len=33)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 44, offset 52
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 44, offset 53
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 44, offset 54
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 44, offset 55
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 45, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 46, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 48, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 48, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 48, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 48, offset 33
   chars         : 'float_comp_int'
   string value  : "float_comp_int" (len=14)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 48, offset 34
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 48, offset 35
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 48, offset 36
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 48, offset 37
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 48, offset 38
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 48, offset 39
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 49, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 49, offset 13
   chars         : 'jar'
   string value  : "jar" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 49, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 49, offset 15
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 49, offset 18
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 49, offset 20
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 49, offset 21
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 49, offset 22
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 50, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 50, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 50, offset 52
   chars         : '"From float_comp_int , value : %d\n"'
   string value  : "From float_comp_int , value : %d\n" (len=34)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 50, offset 53
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 50, offset 54
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 50, offset 55
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 50, offset 56
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 51, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 51, offset 10
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 51, offset 14
   chars         : 'tar'
   string value  : "tar" (len=3)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 51, offset 15
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 52, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 52, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 52, offset 52
   chars         : '"From float_comp_int , value : %d\n"'
   string value  : "From float_comp_int , value : %d\n" (len=34)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 52, offset 53
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 52, offset 54
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 52, offset 55
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 52, offset 56
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 53, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 54, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 56, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 56, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 56, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 56, offset 28
   chars         : 'mixed_sum'
   string value  : "mixed_sum" (len=9)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 56, offset 29
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 56, offset 30
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 56, offset 31
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 56, offset 32
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 56, offset 33
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 56, offset 34
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 56, offset 35
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 56, offset 36
   chars         : 'd'
   string value  : "d" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 56, offset 37
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 56, offset 38
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 57, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 57, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 57, offset 45
   chars         : '"From mixed_sum , value : %.2f\n"'
   string value  : "From mixed_sum , value : %.2f\n" (len=31)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 57, offset 46
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 57, offset 47
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 57, offset 49
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 57, offset 51
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 57, offset 53
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 57, offset 55
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 57, offset 57
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 57, offset 59
   chars         : 'd'
   string value  : "d" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 57, offset 60
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 57, offset 61
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 58, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 60, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 60, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 60, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 60, offset 37
   chars         : 'mixed_control_flow'
   string value  : "mixed_control_flow" (len=18)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 60, offset 38
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 60, offset 39
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 60, offset 40
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 61, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 61, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 61, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 61, offset 19
   chars         : 'f'
   string value  : "f" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 61, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 61, offset 25
   chars         : '3.3'
   string value  : "3.3" (len=3)
   float value   : 3.300000
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 61, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 62, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 62, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 62, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 62, offset 19
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 62, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 62, offset 23
   chars         : '3'
   string value  : "3" (len=1)
   int value     : 3
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 62, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 63, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 63, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 63, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 63, offset 19
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 63, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_CHAR:
$ Token {
   type          : 260
   location      : line 63, offset 25
   chars         : ''c''
   string value  : "c" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 63, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 64, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 64, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 64, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 64, offset 19
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 64, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 64, offset 27
   chars         : 'khara'
   string value  : "khara" (len=5)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 64, offset 28
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 66, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 66, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 66, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 66, offset 20
   chars         : 's1'
   string value  : "s1" (len=2)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 66, offset 22
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 66, offset 29
   chars         : '"test"'
   string value  : "test" (len=4)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 66, offset 30
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 67, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 67, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 67, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 67, offset 20
   chars         : 's2'
   string value  : "s2" (len=2)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 67, offset 22
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 67, offset 29
   chars         : '"test"'
   string value  : "test" (len=4)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 67, offset 30
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 13
   chars         : 'jar'
   string value  : "jar" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 69, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 69, offset 15
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 16
   chars         : 'f'
   string value  : "f" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 69, offset 18
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 20
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_GRTTHAN:
$ Token {
   type          : 294
   location      : line 69, offset 22
   chars         : '>'
   string value  : ">" (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 69, offset 28
   chars         : '6.299'
   string value  : "6.299" (len=5)
   float value   : 6.299000
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 69, offset 29
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LOGAND:
$ Token {
   type          : 298
   location      : line 69, offset 32
   chars         : '&&'
   string value  : "&&" (len=2)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 69, offset 34
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 35
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_NOTEQ:
$ Token {
   type          : 295
   location      : line 69, offset 38
   chars         : '!='
   string value  : "!=" (len=2)
}

$ Token :BL_CHAR:
$ Token {
   type          : 260
   location      : line 69, offset 42
   chars         : ''a''
   string value  : "a" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 69, offset 43
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LOGAND:
$ Token {
   type          : 298
   location      : line 69, offset 46
   chars         : '&&'
   string value  : "&&" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 48
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_LOGAND:
$ Token {
   type          : 298
   location      : line 69, offset 51
   chars         : '&&'
   string value  : "&&" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 54
   chars         : 's1'
   string value  : "s1" (len=2)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 69, offset 57
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 60
   chars         : 's2'
   string value  : "s2" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 69, offset 61
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 69, offset 62
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 70, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 70, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 70, offset 56
   chars         : '"From mixed_control_flow , value : %d\n"'
   string value  : "From mixed_control_flow , value : %d\n" (len=38)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 70, offset 57
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 70, offset 58
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 70, offset 59
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 70, offset 60
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 71, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 71, offset 10
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 71, offset 14
   chars         : 'tar'
   string value  : "tar" (len=3)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 71, offset 15
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 72, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 72, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 72, offset 56
   chars         : '"From mixed_control_flow , value : %d\n"'
   string value  : "From mixed_control_flow , value : %d\n" (len=38)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 72, offset 57
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 72, offset 58
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 72, offset 59
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 72, offset 60
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 73, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 74, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_COMMENT:
$ Token {
   type          : 300
   location      : line 76, offset 52
   chars         : '//----------need to return false-----------------//'
   string value  : "//----------need to return false-----------------//" (len=51)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 77, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 77, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 77, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 77, offset 40
   chars         : 'to_fail_str_comp_char'
   string value  : "to_fail_str_comp_char" (len=21)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 77, offset 41
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 77, offset 42
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 77, offset 43
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 77, offset 44
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 77, offset 45
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 77, offset 46
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 78, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 78, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 78, offset 55
   chars         : '"From to_fail_str_comp_char , value : %d\n"'
   string value  : "From to_fail_str_comp_char , value : %d\n" (len=41)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 78, offset 56
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 78, offset 57
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 78, offset 59
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 78, offset 60
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 78, offset 61
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 78, offset 62
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 79, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 81, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 81, offset 11
   chars         : 'ithun'
   string value  : "ithun" (len=5)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 81, offset 17
   chars         : 'chalu'
   string value  : "chalu" (len=5)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 81, offset 19
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 82, offset 16
   chars         : 'mixed_conds'
   string value  : "mixed_conds" (len=11)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 82, offset 17
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 82, offset 18
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 82, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 83, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 83, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 83, offset 16
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 83, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 83, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 84, offset 18
   chars         : 'float_and_int'
   string value  : "float_and_int" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 84, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 84, offset 20
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 84, offset 21
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 84, offset 24
   chars         : '3.5'
   string value  : "3.5" (len=3)
   float value   : 3.500000
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 84, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 84, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 85, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 85, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 85, offset 16
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 85, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 85, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 86, offset 18
   chars         : 'int_char_bool'
   string value  : "int_char_bool" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 86, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_CHAR:
$ Token {
   type          : 260
   location      : line 86, offset 22
   chars         : ''a''
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 86, offset 23
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 86, offset 28
   chars         : 'khara'
   string value  : "khara" (len=5)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 86, offset 29
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 86, offset 31
   chars         : '11'
   string value  : "11" (len=2)
   int value     : 11
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 86, offset 32
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 86, offset 33
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 87, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 87, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 87, offset 16
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 87, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 87, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 88, offset 15
   chars         : 'char_float'
   string value  : "char_float" (len=10)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 88, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_CHAR:
$ Token {
   type          : 260
   location      : line 88, offset 19
   chars         : ''C''
   string value  : "C" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 88, offset 20
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 88, offset 24
   chars         : '0.28'
   string value  : "0.28" (len=4)
   float value   : 0.280000
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 88, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 88, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 89, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 89, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 89, offset 16
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 89, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 89, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 90, offset 15
   chars         : 'bool_float'
   string value  : "bool_float" (len=10)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 90, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 90, offset 17
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 90, offset 18
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 90, offset 21
   chars         : '5.0'
   string value  : "5.0" (len=3)
   float value   : 5.000000
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 90, offset 22
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 90, offset 23
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 91, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 91, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 91, offset 16
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 91, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 91, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 92, offset 18
   chars         : 'char_comp_int'
   string value  : "char_comp_int" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 92, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_CHAR:
$ Token {
   type          : 260
   location      : line 92, offset 22
   chars         : ''B''
   string value  : "B" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 92, offset 23
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 92, offset 25
   chars         : '66'
   string value  : "66" (len=2)
   int value     : 66
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 92, offset 26
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 92, offset 27
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 93, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 93, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 93, offset 16
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 93, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 93, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 94, offset 19
   chars         : 'float_comp_int'
   string value  : "float_comp_int" (len=14)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 94, offset 20
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 94, offset 22
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 94, offset 23
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 94, offset 27
   chars         : '10.0'
   string value  : "10.0" (len=4)
   float value   : 10.000000
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 94, offset 28
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 94, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 95, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 95, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 95, offset 16
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 95, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 95, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 96, offset 14
   chars         : 'mixed_sum'
   string value  : "mixed_sum" (len=9)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 96, offset 15
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_CHAR:
$ Token {
   type          : 260
   location      : line 96, offset 18
   chars         : ''a''
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 96, offset 19
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 96, offset 23
   chars         : '2.33'
   string value  : "2.33" (len=4)
   float value   : 2.330000
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 96, offset 24
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 96, offset 29
   chars         : 'khara'
   string value  : "khara" (len=5)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 96, offset 30
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 96, offset 31
   chars         : '7'
   string value  : "7" (len=1)
   int value     : 7
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 96, offset 32
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 96, offset 33
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 97, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 97, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 97, offset 16
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 97, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 97, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 98, offset 23
   chars         : 'mixed_control_flow'
   string value  : "mixed_control_flow" (len=18)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 98, offset 24
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 98, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 98, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 99, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 99, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 99, offset 16
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 99, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 99, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 100, offset 26
   chars         : 'to_fail_str_comp_char'
   string value  : "to_fail_str_comp_char" (len=21)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 100, offset 27
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_CHAR:
$ Token {
   type          : 260
   location      : line 100, offset 30
   chars         : ''h''
   string value  : "h" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 100, offset 31
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 100, offset 34
   chars         : '"h"'
   string value  : "h" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 100, offset 35
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 100, offset 36
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 101, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 101, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 101, offset 16
   chars         : '"\n"'
   string value  : "\n" (len=2)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 101, offset 17
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 101, offset 18
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 102, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 105, offset 4
   chars         : 'bye'
   string value  : "bye" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 105, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_EOF:
$ Token {
   type          : 303
   location      : line 105, offset 11
   chars         : ''
   string value  : "" (len=1)
}

