$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 1, offset 3
   chars         : 'hi'
   string value  : "hi" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 1, offset 8
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 13
   chars         : 'baherun'
   string value  : "baherun" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 17
   chars         : 'ghe'
   string value  : "ghe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 3, offset 24
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 3, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 4, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 4, offset 13
   chars         : 'baherun'
   string value  : "baherun" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 4, offset 17
   chars         : 'ghe'
   string value  : "ghe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 4, offset 24
   chars         : 'strlen'
   string value  : "strlen" (len=6)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 4, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 13
   chars         : 'baherun'
   string value  : "baherun" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 17
   chars         : 'ghe'
   string value  : "ghe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 5, offset 23
   chars         : 'scanf'
   string value  : "scanf" (len=5)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 5, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 9
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 13
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 7, offset 20
   chars         : 'global'
   string value  : "global" (len=6)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 7, offset 22
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 7, offset 25
   chars         : '99'
   string value  : "99" (len=2)
   int value     : 99
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 7, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 8, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 8, offset 9
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 8, offset 13
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 8, offset 16
   chars         : 'pi'
   string value  : "pi" (len=2)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 8, offset 18
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_FLOAT:
$ Token {
   type          : 258
   location      : line 8, offset 23
   chars         : '3.14'
   string value  : "3.14" (len=4)
   float value   : 3.140000
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 8, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 9
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 13
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 9, offset 18
   chars         : 'name'
   string value  : "name" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 9, offset 20
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 9, offset 38
   chars         : '"BhauLang Tester"'
   string value  : "BhauLang Tester" (len=15)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 9, offset 39
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 9
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 13
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 15
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 10, offset 17
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 19
   chars         : 'y'
   string value  : "y" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 10, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 10, offset 23
   chars         : 'z'
   string value  : "z" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 10, offset 25
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 10, offset 28
   chars         : '42'
   string value  : "42" (len=2)
   int value     : 42
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 10, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 26
   chars         : 'complex'
   string value  : "complex" (len=7)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 12, offset 27
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 28
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 12, offset 29
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 31
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 12, offset 32
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 12, offset 34
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 12, offset 35
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 12, offset 36
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 13, offset 24
   chars         : 'result'
   string value  : "result" (len=6)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 13, offset 26
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 13, offset 28
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 13, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 18
   chars         : 'joparent'
   string value  : "joparent" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 14, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 20
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 293
   location      : line 14, offset 22
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 14, offset 24
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 25
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 14, offset 27
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 14, offset 29
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 14, offset 30
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 14, offset 31
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 14, offset 32
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 15, offset 13
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 15, offset 17
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 15, offset 21
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 15, offset 23
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 15, offset 25
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 15, offset 27
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 15, offset 28
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 16, offset 13
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 16, offset 22
   chars         : 'joparent'
   string value  : "joparent" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 16, offset 23
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 16, offset 24
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 293
   location      : line 16, offset 26
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 16, offset 28
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 16, offset 29
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 16, offset 30
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 17, offset 19
   chars         : 'result'
   string value  : "result" (len=6)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 17, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 17, offset 28
   chars         : 'result'
   string value  : "result" (len=6)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 17, offset 30
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 17, offset 32
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 17, offset 34
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 17, offset 36
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 17, offset 38
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 17, offset 40
   chars         : 'c'
   string value  : "c" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 17, offset 42
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 17, offset 44
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 17, offset 45
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 18, offset 14
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 18, offset 16
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 18, offset 18
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 18, offset 20
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 18, offset 22
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 18, offset 23
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 19, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 20, offset 10
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 20, offset 12
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 20, offset 14
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 20, offset 16
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 20, offset 18
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 20, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 21, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 23, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 23, offset 13
   chars         : 'jar'
   string value  : "jar" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 23, offset 15
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 23, offset 21
   chars         : 'result'
   string value  : "result" (len=6)
}

$ Token :BL_GRTTHAN:
$ Token {
   type          : 294
   location      : line 23, offset 23
   chars         : '>'
   string value  : ">" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 23, offset 27
   chars         : '100'
   string value  : "100" (len=3)
   int value     : 100
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 23, offset 28
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 23, offset 30
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 24, offset 13
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 24, offset 19
   chars         : 'parat'
   string value  : "parat" (len=5)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 24, offset 22
   chars         : 'de'
   string value  : "de" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 24, offset 29
   chars         : 'result'
   string value  : "result" (len=6)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 24, offset 30
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 25, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 27, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 27, offset 17
   chars         : 'nahitar'
   string value  : "nahitar" (len=7)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 27, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 27, offset 24
   chars         : 'result'
   string value  : "result" (len=6)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 27, offset 27
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 27, offset 31
   chars         : '100'
   string value  : "100" (len=3)
   int value     : 100
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 27, offset 32
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 27, offset 33
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 28, offset 13
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 28, offset 19
   chars         : 'parat'
   string value  : "parat" (len=5)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 28, offset 22
   chars         : 'de'
   string value  : "de" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 28, offset 29
   chars         : 'result'
   string value  : "result" (len=6)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 28, offset 31
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 28, offset 33
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 28, offset 34
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 29, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 31, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 31, offset 13
   chars         : 'tar'
   string value  : "tar" (len=3)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 31, offset 15
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 32, offset 13
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 32, offset 19
   chars         : 'parat'
   string value  : "parat" (len=5)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 32, offset 22
   chars         : 'de'
   string value  : "de" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 32, offset 24
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 32, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 33, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 34, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 36, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 36, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 36, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 36, offset 32
   chars         : 'deeply_nested'
   string value  : "deeply_nested" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 36, offset 33
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 36, offset 34
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 36, offset 35
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 36, offset 36
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 37, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 37, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 37, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 37, offset 22
   chars         : 'temp'
   string value  : "temp" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 37, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 37, offset 26
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 37, offset 27
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 38, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 38, offset 18
   chars         : 'joparent'
   string value  : "joparent" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 38, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 38, offset 20
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_GRTTHAN:
$ Token {
   type          : 294
   location      : line 38, offset 22
   chars         : '>'
   string value  : ">" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 38, offset 24
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 38, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 38, offset 26
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 39, offset 13
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 39, offset 17
   chars         : 'jar'
   string value  : "jar" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 39, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 39, offset 19
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_MODBINOP:
$ Token {
   type          : 272
   location      : line 39, offset 21
   chars         : '%'
   string value  : "%" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 39, offset 23
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 39, offset 26
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 39, offset 28
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 39, offset 29
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 39, offset 30
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 40, offset 17
   chars         : 'temp'
   string value  : "temp" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 40, offset 19
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 40, offset 24
   chars         : 'temp'
   string value  : "temp" (len=4)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 40, offset 26
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 40, offset 28
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 40, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 41, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 42, offset 13
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 42, offset 21
   chars         : 'nahitar'
   string value  : "nahitar" (len=7)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 42, offset 22
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 42, offset 23
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_MODBINOP:
$ Token {
   type          : 272
   location      : line 42, offset 25
   chars         : '%'
   string value  : "%" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 42, offset 27
   chars         : '3'
   string value  : "3" (len=1)
   int value     : 3
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 42, offset 30
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 42, offset 32
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 42, offset 33
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 42, offset 34
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 43, offset 17
   chars         : 'temp'
   string value  : "temp" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 43, offset 19
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 43, offset 24
   chars         : 'temp'
   string value  : "temp" (len=4)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 43, offset 26
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 43, offset 28
   chars         : '3'
   string value  : "3" (len=1)
   int value     : 3
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 43, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 44, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 45, offset 13
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 45, offset 17
   chars         : 'tar'
   string value  : "tar" (len=3)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 45, offset 19
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 46, offset 17
   chars         : 'temp'
   string value  : "temp" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 46, offset 19
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 46, offset 24
   chars         : 'temp'
   string value  : "temp" (len=4)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 46, offset 26
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 46, offset 28
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 46, offset 29
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 47, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 48, offset 10
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 48, offset 12
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 48, offset 14
   chars         : 'n'
   string value  : "n" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 48, offset 16
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 48, offset 18
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 48, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 49, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 50, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 50, offset 15
   chars         : 'parat'
   string value  : "parat" (len=5)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 50, offset 18
   chars         : 'de'
   string value  : "de" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 50, offset 23
   chars         : 'temp'
   string value  : "temp" (len=4)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 50, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 51, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 53, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 53, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 53, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 53, offset 31
   chars         : 'test_strings'
   string value  : "test_strings" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 53, offset 32
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 53, offset 33
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 53, offset 34
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 54, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 54, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 54, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 54, offset 22
   chars         : 'str1'
   string value  : "str1" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 54, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 54, offset 32
   chars         : '"Hello"'
   string value  : "Hello" (len=5)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 54, offset 33
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 55, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 55, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 55, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 55, offset 22
   chars         : 'str2'
   string value  : "str2" (len=4)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 55, offset 24
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 55, offset 35
   chars         : '"BhauLang"'
   string value  : "BhauLang" (len=8)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 55, offset 36
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 56, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 56, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 56, offset 23
   chars         : '"Message: "'
   string value  : "Message: " (len=9)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 56, offset 24
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 56, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 57, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 57, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 57, offset 18
   chars         : '"%s\n"'
   string value  : "%s\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 57, offset 19
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 57, offset 23
   chars         : 'str2'
   string value  : "str2" (len=4)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 57, offset 24
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 57, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 58, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 60, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 60, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 60, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 60, offset 33
   chars         : 'mega_recursive'
   string value  : "mega_recursive" (len=14)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 60, offset 34
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 60, offset 35
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 60, offset 36
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 60, offset 37
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 61, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 61, offset 13
   chars         : 'jar'
   string value  : "jar" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 61, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 61, offset 15
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_LESSEQ:
$ Token {
   type          : 296
   location      : line 61, offset 18
   chars         : '<='
   string value  : "<=" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 61, offset 20
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 61, offset 21
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 61, offset 22
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 62, offset 13
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 62, offset 19
   chars         : 'parat'
   string value  : "parat" (len=5)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 62, offset 22
   chars         : 'de'
   string value  : "de" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 62, offset 24
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 62, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 63, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 64, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 64, offset 15
   chars         : 'parat'
   string value  : "parat" (len=5)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 64, offset 18
   chars         : 'de'
   string value  : "de" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 64, offset 20
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 64, offset 22
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 64, offset 37
   chars         : 'mega_recursive'
   string value  : "mega_recursive" (len=14)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 64, offset 38
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 64, offset 39
   chars         : 'x'
   string value  : "x" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 64, offset 41
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 64, offset 43
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 64, offset 44
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 64, offset 45
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 65, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 67, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 67, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 67, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 67, offset 36
   chars         : 'nested_conditions'
   string value  : "nested_conditions" (len=17)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 67, offset 37
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 67, offset 40
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 67, offset 41
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 67, offset 42
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 68, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 68, offset 13
   chars         : 'jar'
   string value  : "jar" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 68, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 68, offset 17
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_GRTTHAN:
$ Token {
   type          : 294
   location      : line 68, offset 19
   chars         : '>'
   string value  : ">" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 68, offset 21
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 68, offset 22
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 68, offset 23
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 13
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 17
   chars         : 'jar'
   string value  : "jar" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 69, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 69, offset 21
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 293
   location      : line 69, offset 23
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 69, offset 26
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 69, offset 27
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 69, offset 28
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 70, offset 19
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 70, offset 20
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 70, offset 45
   chars         : '"Single Digit Positive\n"'
   string value  : "Single Digit Positive\n" (len=23)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 70, offset 46
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 70, offset 47
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 71, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 72, offset 13
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 72, offset 21
   chars         : 'nahitar'
   string value  : "nahitar" (len=7)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 72, offset 22
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 72, offset 25
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 293
   location      : line 72, offset 27
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 72, offset 31
   chars         : '100'
   string value  : "100" (len=3)
   int value     : 100
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 72, offset 32
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 72, offset 33
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 73, offset 19
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 73, offset 20
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 73, offset 42
   chars         : '"Two Digit Positive\n"'
   string value  : "Two Digit Positive\n" (len=20)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 73, offset 43
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 73, offset 44
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 74, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 75, offset 13
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 75, offset 17
   chars         : 'tar'
   string value  : "tar" (len=3)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 75, offset 19
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 76, offset 19
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 76, offset 20
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 76, offset 38
   chars         : '"Large Positive\n"'
   string value  : "Large Positive\n" (len=16)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 76, offset 39
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 76, offset 40
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 77, offset 10
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 78, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 79, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 79, offset 17
   chars         : 'nahitar'
   string value  : "nahitar" (len=7)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 79, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 79, offset 21
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 293
   location      : line 79, offset 23
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 79, offset 25
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 79, offset 26
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 79, offset 27
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 80, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 80, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 80, offset 28
   chars         : '"Negative\n"'
   string value  : "Negative\n" (len=10)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 80, offset 29
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 80, offset 30
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 81, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 82, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 82, offset 13
   chars         : 'tar'
   string value  : "tar" (len=3)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 82, offset 15
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 83, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 83, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 83, offset 24
   chars         : '"Zero\n"'
   string value  : "Zero\n" (len=6)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 83, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 83, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 84, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 85, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 87, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 87, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 87, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 87, offset 27
   chars         : 'loop_fun'
   string value  : "loop_fun" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 87, offset 28
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 87, offset 29
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 87, offset 30
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 88, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 88, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 88, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 88, offset 21
   chars         : 'sum'
   string value  : "sum" (len=3)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 88, offset 23
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 88, offset 25
   chars         : '0'
   string value  : "0" (len=1)
   int value     : 0
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 88, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 89, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 89, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 89, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 89, offset 19
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 89, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 89, offset 23
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 89, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 90, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 90, offset 18
   chars         : 'joparent'
   string value  : "joparent" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 90, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 90, offset 20
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_LESSEQ:
$ Token {
   type          : 296
   location      : line 90, offset 23
   chars         : '<='
   string value  : "<=" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 90, offset 26
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 90, offset 27
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 90, offset 28
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 91, offset 12
   chars         : 'sum'
   string value  : "sum" (len=3)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 91, offset 14
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 91, offset 18
   chars         : 'sum'
   string value  : "sum" (len=3)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 91, offset 20
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 91, offset 22
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 91, offset 23
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 92, offset 10
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 92, offset 12
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 92, offset 14
   chars         : 'i'
   string value  : "i" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 92, offset 16
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 92, offset 18
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 92, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 93, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 94, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 94, offset 15
   chars         : 'parat'
   string value  : "parat" (len=5)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 94, offset 18
   chars         : 'de'
   string value  : "de" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 94, offset 22
   chars         : 'sum'
   string value  : "sum" (len=3)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 94, offset 23
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 95, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 97, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 97, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 97, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 97, offset 39
   chars         : 'test_scope_shadowing'
   string value  : "test_scope_shadowing" (len=20)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 97, offset 40
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 97, offset 41
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 97, offset 42
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 98, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 98, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 98, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 98, offset 21
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 98, offset 23
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 98, offset 25
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 98, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 99, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 99, offset 18
   chars         : 'joparent'
   string value  : "joparent" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 99, offset 19
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 99, offset 22
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_LESSTHAN:
$ Token {
   type          : 293
   location      : line 99, offset 24
   chars         : '<'
   string value  : "<" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 99, offset 27
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 99, offset 28
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 99, offset 29
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 100, offset 13
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 100, offset 17
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 100, offset 21
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 100, offset 25
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 100, offset 27
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 100, offset 30
   chars         : '20'
   string value  : "20" (len=2)
   int value     : 20
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 100, offset 31
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 101, offset 12
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 101, offset 14
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 101, offset 18
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 101, offset 20
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 101, offset 22
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 101, offset 23
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 102, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 102, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 102, offset 22
   chars         : '"%d\n"'
   string value  : "%d\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 102, offset 23
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 102, offset 26
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 102, offset 27
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 102, offset 28
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 103, offset 13
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 103, offset 19
   chars         : 'thamb'
   string value  : "thamb" (len=5)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 103, offset 20
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 104, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 105, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 105, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 105, offset 18
   chars         : '"%d\n"'
   string value  : "%d\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 105, offset 19
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 105, offset 22
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 105, offset 23
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 105, offset 24
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 106, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 108, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 108, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 108, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 108, offset 33
   chars         : 'test_big_exprs'
   string value  : "test_big_exprs" (len=14)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 108, offset 34
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 108, offset 35
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 108, offset 36
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 109, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 109, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 109, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 109, offset 19
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 109, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 109, offset 23
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 109, offset 25
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 109, offset 27
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 109, offset 29
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 109, offset 31
   chars         : '3'
   string value  : "3" (len=1)
   int value     : 3
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 109, offset 33
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 109, offset 35
   chars         : '4'
   string value  : "4" (len=1)
   int value     : 4
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 109, offset 37
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 109, offset 39
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 109, offset 41
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 109, offset 43
   chars         : '6'
   string value  : "6" (len=1)
   int value     : 6
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 109, offset 45
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 109, offset 47
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 109, offset 48
   chars         : '7'
   string value  : "7" (len=1)
   int value     : 7
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 109, offset 50
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 109, offset 52
   chars         : '8'
   string value  : "8" (len=1)
   int value     : 8
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 109, offset 53
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 109, offset 54
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 110, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 110, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 110, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 110, offset 19
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 110, offset 21
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 110, offset 23
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 110, offset 25
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 110, offset 27
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 110, offset 29
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 110, offset 31
   chars         : 'a'
   string value  : "a" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 110, offset 33
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 110, offset 35
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 110, offset 36
   chars         : '3'
   string value  : "3" (len=1)
   int value     : 3
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 110, offset 38
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 110, offset 40
   chars         : '4'
   string value  : "4" (len=1)
   int value     : 4
}

$ Token :BL_MULTBINOP:
$ Token {
   type          : 275
   location      : line 110, offset 42
   chars         : '*'
   string value  : "*" (len=1)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 110, offset 44
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 110, offset 45
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_ADDBINOP:
$ Token {
   type          : 273
   location      : line 110, offset 47
   chars         : '+'
   string value  : "+" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 110, offset 49
   chars         : '6'
   string value  : "6" (len=1)
   int value     : 6
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 110, offset 50
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 110, offset 51
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 110, offset 52
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 111, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 111, offset 15
   chars         : 'parat'
   string value  : "parat" (len=5)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 111, offset 18
   chars         : 'de'
   string value  : "de" (len=2)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 111, offset 20
   chars         : 'b'
   string value  : "b" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 111, offset 21
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 112, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 114, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 114, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 114, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 114, offset 29
   chars         : 'empty_else'
   string value  : "empty_else" (len=10)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 114, offset 30
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 114, offset 33
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 114, offset 34
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 114, offset 35
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 115, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 115, offset 13
   chars         : 'jar'
   string value  : "jar" (len=3)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 115, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 115, offset 17
   chars         : 'val'
   string value  : "val" (len=3)
}

$ Token :BL_ISEQUALCOND:
$ Token {
   type          : 271
   location      : line 115, offset 20
   chars         : '=='
   string value  : "==" (len=2)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 115, offset 22
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 115, offset 23
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 115, offset 24
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 116, offset 15
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 116, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 116, offset 23
   chars         : '"One\n"'
   string value  : "One\n" (len=5)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 116, offset 24
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 116, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 117, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 118, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 118, offset 13
   chars         : 'tar'
   string value  : "tar" (len=3)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 118, offset 15
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 119, offset 6
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 120, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 122, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 122, offset 13
   chars         : 'lakshat'
   string value  : "lakshat" (len=7)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 122, offset 18
   chars         : 'thev'
   string value  : "thev" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 122, offset 27
   chars         : 'test_all'
   string value  : "test_all" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 122, offset 28
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 122, offset 29
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 122, offset 30
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 123, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 123, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 123, offset 23
   chars         : '"Complex: "'
   string value  : "Complex: " (len=9)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 123, offset 24
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 123, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 124, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 124, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 124, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 124, offset 29
   chars         : 'complex_var'
   string value  : "complex_var" (len=11)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 124, offset 31
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 124, offset 39
   chars         : 'complex'
   string value  : "complex" (len=7)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 124, offset 40
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 124, offset 41
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 124, offset 42
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 124, offset 43
   chars         : '3'
   string value  : "3" (len=1)
   int value     : 3
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 124, offset 44
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 124, offset 45
   chars         : '2'
   string value  : "2" (len=1)
   int value     : 2
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 124, offset 46
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 124, offset 47
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 125, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 125, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 125, offset 18
   chars         : '"%d\n"'
   string value  : "%d\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 125, offset 19
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 125, offset 30
   chars         : 'complex_var'
   string value  : "complex_var" (len=11)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 125, offset 31
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 125, offset 32
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 126, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 126, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 126, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 126, offset 35
   chars         : 'deeply_nested_var'
   string value  : "deeply_nested_var" (len=17)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 126, offset 37
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 126, offset 51
   chars         : 'deeply_nested'
   string value  : "deeply_nested" (len=13)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 126, offset 52
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 126, offset 54
   chars         : '10'
   string value  : "10" (len=2)
   int value     : 10
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 126, offset 55
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 126, offset 56
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 127, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 127, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 127, offset 20
   chars         : '"Deep: "'
   string value  : "Deep: " (len=6)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 127, offset 21
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 127, offset 22
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 128, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 128, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 128, offset 18
   chars         : '"%d\n"'
   string value  : "%d\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 128, offset 19
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 128, offset 36
   chars         : 'deeply_nested_var'
   string value  : "deeply_nested_var" (len=17)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 128, offset 37
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 128, offset 38
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 130, offset 17
   chars         : 'test_strings'
   string value  : "test_strings" (len=12)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 130, offset 18
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 130, offset 19
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 130, offset 20
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 132, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 132, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 132, offset 32
   chars         : '"Mega Recursive 5: "'
   string value  : "Mega Recursive 5: " (len=18)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 132, offset 33
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 132, offset 34
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 133, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 133, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 133, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 133, offset 36
   chars         : 'mega_recursive_var'
   string value  : "mega_recursive_var" (len=18)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 133, offset 38
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 133, offset 53
   chars         : 'mega_recursive'
   string value  : "mega_recursive" (len=14)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 133, offset 54
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 133, offset 55
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 133, offset 56
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 133, offset 57
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 134, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 134, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 134, offset 18
   chars         : '"%d\n"'
   string value  : "%d\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 134, offset 19
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 134, offset 37
   chars         : 'mega_recursive_var'
   string value  : "mega_recursive_var" (len=18)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 134, offset 38
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 134, offset 39
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 135, offset 22
   chars         : 'nested_conditions'
   string value  : "nested_conditions" (len=17)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 135, offset 23
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 135, offset 24
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 135, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 135, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 136, offset 22
   chars         : 'nested_conditions'
   string value  : "nested_conditions" (len=17)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 136, offset 23
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_SUBBINOP:
$ Token {
   type          : 274
   location      : line 136, offset 24
   chars         : '-'
   string value  : "-" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 136, offset 25
   chars         : '5'
   string value  : "5" (len=1)
   int value     : 5
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 136, offset 26
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 136, offset 27
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 137, offset 22
   chars         : 'nested_conditions'
   string value  : "nested_conditions" (len=17)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 137, offset 23
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 137, offset 26
   chars         : '100'
   string value  : "100" (len=3)
   int value     : 100
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 137, offset 27
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 137, offset 28
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 138, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 138, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 138, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 138, offset 30
   chars         : 'loop_fun_var'
   string value  : "loop_fun_var" (len=12)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 138, offset 32
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 138, offset 41
   chars         : 'loop_fun'
   string value  : "loop_fun" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 138, offset 42
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 138, offset 43
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 138, offset 44
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 139, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 139, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 139, offset 24
   chars         : '"Loop Fun: "'
   string value  : "Loop Fun: " (len=10)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 139, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 139, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 140, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 140, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 140, offset 18
   chars         : '"%d\n"'
   string value  : "%d\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 140, offset 19
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 140, offset 31
   chars         : 'loop_fun_var'
   string value  : "loop_fun_var" (len=12)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 140, offset 32
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 140, offset 33
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 141, offset 25
   chars         : 'test_scope_shadowing'
   string value  : "test_scope_shadowing" (len=20)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 141, offset 26
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 141, offset 27
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 141, offset 28
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 142, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 142, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 142, offset 24
   chars         : '"Big expr: "'
   string value  : "Big expr: " (len=10)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 142, offset 25
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 142, offset 26
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 143, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 143, offset 13
   chars         : 'hai'
   string value  : "hai" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 143, offset 17
   chars         : 'ahe'
   string value  : "ahe" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 143, offset 36
   chars         : 'test_big_exprs_var'
   string value  : "test_big_exprs_var" (len=18)
}

$ Token :BL_EQUAL:
$ Token {
   type          : 270
   location      : line 143, offset 38
   chars         : '='
   string value  : "=" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 143, offset 53
   chars         : 'test_big_exprs'
   string value  : "test_big_exprs" (len=14)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 143, offset 54
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 143, offset 55
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 143, offset 56
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 144, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 144, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 144, offset 18
   chars         : '"%d\n"'
   string value  : "%d\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 144, offset 19
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 144, offset 37
   chars         : 'test_big_exprs_var'
   string value  : "test_big_exprs_var" (len=18)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 144, offset 38
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 144, offset 39
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 145, offset 15
   chars         : 'empty_else'
   string value  : "empty_else" (len=10)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 145, offset 16
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_INT:
$ Token {
   type          : 257
   location      : line 145, offset 17
   chars         : '1'
   string value  : "1" (len=1)
   int value     : 1
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 145, offset 18
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 145, offset 19
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 146, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 148, offset 5
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 148, offset 11
   chars         : 'ithun'
   string value  : "ithun" (len=5)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 148, offset 17
   chars         : 'chalu'
   string value  : "chalu" (len=5)
}

$ Token :BL_LBRACE:
$ Token {
   type          : 265
   location      : line 148, offset 19
   chars         : '{'
   string value  : "{" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 149, offset 11
   chars         : 'printf'
   string value  : "printf" (len=6)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 149, offset 12
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_STRING:
$ Token {
   type          : 259
   location      : line 149, offset 18
   chars         : '"%s\n"'
   string value  : "%s\n" (len=4)
}

$ Token :BL_COMMA:
$ Token {
   type          : 269
   location      : line 149, offset 19
   chars         : ','
   string value  : "," (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 149, offset 23
   chars         : 'name'
   string value  : "name" (len=4)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 149, offset 24
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 149, offset 25
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 150, offset 13
   chars         : 'test_all'
   string value  : "test_all" (len=8)
}

$ Token :BL_LPAREN:
$ Token {
   type          : 263
   location      : line 150, offset 14
   chars         : '('
   string value  : "(" (len=1)
}

$ Token :BL_RPAREN:
$ Token {
   type          : 264
   location      : line 150, offset 15
   chars         : ')'
   string value  : ")" (len=1)
}

$ Token :BL_SEMICOLON:
$ Token {
   type          : 261
   location      : line 150, offset 16
   chars         : ';'
   string value  : ";" (len=1)
}

$ Token :BL_RBRACE:
$ Token {
   type          : 266
   location      : line 151, offset 2
   chars         : '}'
   string value  : "}" (len=1)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 153, offset 4
   chars         : 'bye'
   string value  : "bye" (len=3)
}

$ Token :BL_IDENTIFIER:
$ Token {
   type          : 256
   location      : line 153, offset 9
   chars         : 'bhau'
   string value  : "bhau" (len=4)
}

$ Token :BL_EOF:
$ Token {
   type          : 303
   location      : line 154, offset 2
   chars         : ''
   string value  : "" (len=1)
}

